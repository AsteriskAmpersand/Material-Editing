//CBViewProjection : 9999.shdr.src
struct CBViewProjection {

  row_major float4x4 fViewProj;      // Offset:    0 Size:    64 [unused]
  row_major float4x4 fView;          // Offset:   64 Size:    64 [unused]
  row_major float4x4 fProj;          // Offset:  128 Size:    64 [unused]
  row_major float4x4 fViewI;         // Offset:  192 Size:    64 [unused]
  row_major float4x4 fProjI;         // Offset:  256 Size:    64 [unused]
  row_major float4x4 fViewProjI;     // Offset:  320 Size:    64
  float3 fCameraPos;                 // Offset:  384 Size:    12
  // align: 396 to 400
  ubyte align0[4];
  float3 fCameraDir;                 // Offset:  400 Size:    12
  // align: 412 to 416
  ubyte align1[4];
  float3 fZToLinear;                 // Offset:  416 Size:    12 [unused]
  float fCameraNearClip;             // Offset:  428 Size:     4 [unused]
  float fCameraFarClip;              // Offset:  432 Size:     4 [unused]
  float fCameraTargetDist;           // Offset:  436 Size:     4 [unused]
  // align: 440 to 448
  ubyte align2[8];
  float4 fPassThrough;               // Offset:  448 Size:    16 [unused]
  float3 fLODBasePos;                // Offset:  464 Size:    12 [unused]
  // align: 476 to 480
  ubyte align3[4];
  row_major float4x4 fViewProjPF;    // Offset:  480 Size:    64 [unused]
  row_major float4x4 fViewProjIPF;   // Offset:  544 Size:    64 [unused]
  row_major float4x4 fViewPF;        // Offset:  608 Size:    64 [unused]
  row_major float4x4 fProjPF;        // Offset:  672 Size:    64 [unused]
  row_major float4x4 fViewProjIViewProjPF;// Offset:  736 Size:    64 [unused]
  row_major float4x4 fNoJitterProj;  // Offset:  800 Size:    64 [unused]
  row_major float4x4 fNoJitterViewProj;// Offset:  864 Size:    64 [unused]
  row_major float4x4 fNoJitterViewProjI;// Offset:  928 Size:    64 [unused]
  row_major float4x4 fNoJitterViewProjIViewProjPF;// Offset:  992 Size:    64 [unused]
  float2 fPassThroughCorrect;        // Offset: 1056 Size:     8 [unused]
  bool bWideMonitor;                 // Offset: 1064 Size:     4 [unused]
};

//CBScreen : 9999.shdr.src
struct CBScreen {

  float2 fScreenOffset;              // Offset:    0 Size:     8 [unused]
  float2 fScreenScale;               // Offset:    8 Size:     8 [unused]
  float2 fScreenSize;                // Offset:   16 Size:     8 [unused]
  float2 fScreenInverseSize;         // Offset:   24 Size:     8 [unused]
  uint2 iViewOffset;                 // Offset:   32 Size:     8 [unused]
  uint2 iViewSize;                   // Offset:   40 Size:     8
  float2 fViewOffset;                // Offset:   48 Size:     8 [unused]
  float2 fViewSize;                  // Offset:   56 Size:     8
  float2 fViewInverseSize;           // Offset:   64 Size:     8
  float fContentScale;               // Offset:   72 Size:     4 [unused]
  float fContentScalePF;             // Offset:   76 Size:     4 [unused]
  float fContentScaleBase;           // Offset:   80 Size:     4 [unused]
  float fContentScaleActual;         // Offset:   84 Size:     4 [unused]
  float fContentScaleInverse;        // Offset:   88 Size:     4 [unused]
  float fContentScaleBaseInverse;    // Offset:   92 Size:     4 [unused]
  float fContentScaleActualInverse;  // Offset:   96 Size:     4 [unused]
  float fContentScalePassScreen;     // Offset:  100 Size:     4 [unused]
  bool bCheckerboard;                // Offset:  104 Size:     4 [unused]
};

//CBLightParameters : 9999.shdr.src
struct CBLightParameters {

  struct CBLightParameters_LightParameter
  {
      float4 position_boundingRadius;// Offset:    0
      float4 direction_falloff;      // Offset:   16
      uint4 misc_attenuation;        // Offset:   32
      float3 color;                  // Offset:   48
      float min_roughness;           // Offset:   60
      row_major float4x4 shadow_mat; // Offset:   64
      row_major float4x4 texproj_mat;// Offset:  128
      float4 shadow_extra;           // Offset:  192
      uint4 shadowmap_size_region;   // Offset:  208
  } gLightParameters[256];           // Offset:    0 Size: 57344
};

//CBVRCommon : 9999.shdr.src
struct CBVRCommon {

  uint iNumVolumes;                  // Offset:    0 Size:     4 [unused]
  float fGIFactor;                   // Offset:    4 Size:     4 [unused]
  float fGIFactorShadow;             // Offset:    8 Size:     4 [unused]
  // align: 12 to 16
  ubyte align0[4];
  uint2 froxelDim;                   // Offset:   16 Size:     8
  uint2 checkerDim;                  // Offset:   24 Size:     8 [unused]
  float2 froxelDimInv;               // Offset:   32 Size:     8 [unused]
  float2 checkerDimInv;              // Offset:   40 Size:     8 [unused]
  float3 froxelZMinMax;              // Offset:   48 Size:    12
  // align: 60 to 64
  ubyte align1[4];
  float fOrdered3x3[9];              // Offset:   64 Size:   132 [unused]
  // align: 196 to 208
  ubyte align2[12];
  float fOrdered4x4[16];             // Offset:  208 Size:   244 [unused]
  // align: 452 to 464
  ubyte align3[12];
  float fOrdered8x8[64];             // Offset:  464 Size:  1012 [unused]
  // align: 1476 to 1488
  ubyte align4[12];
  float2 haltonXY[8];                // Offset: 1488 Size:   120 [unused]
  float fVRDeltaTime;                // Offset: 1608 Size:     4 [unused]
  uint iJitterType;                  // Offset: 1612 Size:     4 [unused]
  uint iFrameCount;                  // Offset: 1616 Size:     4 [unused]
  bool bAlphaDitherFarClip;          // Offset: 1620 Size:     4 [unused]
  // align: 1624 to 1632
  ubyte align5[8];
  float4 fDistanceFadeParam;         // Offset: 1632 Size:    16
};

//CBVRCompute : 9999.shdr.src
struct CBVRCompute {

  uint iCountOffset;                 // Offset:    0 Size:     4
};

//CBVRFilter : 1279.shdr.src
struct CBVRFilter {

  float4 fDimensions;                // Offset:    0 Size:    16
  float4 fFilterRegion;              // Offset:   16 Size:    16 [unused]
  float fFilterMipLevel;             // Offset:   32 Size:     4 [unused]
  bool vertical;                     // Offset:   36 Size:     4
};

//CBModel : 9990.shdr.src
struct CBModel {

  row_major float3x4 fWorld;         // Offset:    0 Size:    48 [unused]
  row_major float3x4 fWorldI;        // Offset:   48 Size:    48
  row_major float3x4 fWorldPF;       // Offset:   96 Size:    48 [unused]
  uint iMatrixIndex;                 // Offset:  144 Size:     4
  uint iMatrixIndexPF;               // Offset:  148 Size:     4 [unused]
  uint iLightChannel;                // Offset:  152 Size:     4 [unused]
  // align: 156 to 160
  ubyte align0[4];
  uint2 iUnitAddress;                // Offset:  160 Size:     8 [unused]
  bool bPositionPFValid;             // Offset:  168 Size:     4 [unused]
  bool bPassThrough;                 // Offset:  172 Size:     4 [unused]
  bool bInstanceMaterialEdit;        // Offset:  176 Size:     4 [unused]
  bool bInstanceEffect;              // Offset:  180 Size:     4 [unused]
};

//CBROPTest : 999.shdr.src
struct CBROPTest {

  bool bAlphaTestEnable;             // Offset:    0 Size:     4 [unused]
  float fAlphaRef;                   // Offset:    4 Size:     4 [unused]
  float fDepthBias;                  // Offset:    8 Size:     4
  float fSlopedDepthBias;            // Offset:   12 Size:     4
  float fMaxDepthBias;               // Offset:   16 Size:     4
  float fGlobalTransparency;         // Offset:   20 Size:     4 [unused]
  bool bAlphaDither;                 // Offset:   24 Size:     4 [unused]
  // align: 28 to 32
  ubyte align0[4];
  float2 CapturePixelOffset;         // Offset:   32 Size:     8 [unused]
  float CaptureScale;                // Offset:   40 Size:     4 [unused]
};

//CBUpdateBufferFromMeshData : 999.shdr.src
struct CBUpdateBufferFromMeshData {

  uint iUpdateBufferOffset;          // Offset:    0 Size:     4
};

//CBMhMaterialOZK001Local__disclosure : 99.shdr.src
struct CBMhMaterialOZK001Local__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  bool bBaseColorEmissive;           // Offset:   52 Size:     4 [unused]
  float2 fPaintUVTile;               // Offset:   56 Size:     8 [unused]
  float fAddNormalBlend__uiUNorm;    // Offset:   64 Size:     4 [unused]
  // align: 68 to 80
  ubyte align0[12];
  float4 fAddNormalMaskA__uiSNorm;   // Offset:   80 Size:    16
  float4 fAddNormalMaskB__uiSNorm;   // Offset:   96 Size:    16
  float fAddNormalMaskC__uiUNorm;    // Offset:  112 Size:     4 [unused]
  float fAddNormalMaskD__uiUNorm;    // Offset:  116 Size:     4 [unused]
  bool bBackFaceShading;             // Offset:  120 Size:     4 [unused]
  bool bBackFaceNormalFilp;          // Offset:  124 Size:     4 [unused]
  float3 fKizuColor__uiColor;        // Offset:  128 Size:    12 [unused]
  // align: 140 to 144
  ubyte align1[4];
  float2 fKizuUVOffset__uiUNorm;     // Offset:  144 Size:     8 [unused]
  float fKizuMultiply;               // Offset:  152 Size:     4 [unused]
  bool bLegendary;                   // Offset:  156 Size:     4 [unused]
  float4 fLegendColor__uiColor;      // Offset:  160 Size:    16 [unused]
  float2 fLegendMetalMask__uiUNorm;  // Offset:  176 Size:     8 [unused]
  float fLegendRoughness;            // Offset:  184 Size:     4 [unused]
  // align: 188 to 192
  ubyte align2[4];
  float3 fLegendFilm__uiUNorm;       // Offset:  192 Size:    12 [unused]
  float fLegendSSSMask__uiUNorm;     // Offset:  204 Size:     4 [unused]
  float3 fLegendHSV__uiSNorm;        // Offset:  208 Size:    12 [unused]
  float fLegendFilmIOR__uiUNorm;     // Offset:  220 Size:     4 [unused]
  float fPartsMaskA__uiUNorm;        // Offset:  224 Size:     4 [unused]
  float fPartsMaskB__uiUNorm;        // Offset:  228 Size:     4 [unused]
  float fPartsMaskC__uiUNorm;        // Offset:  232 Size:     4 [unused]
  float fPartsMaskD__uiUNorm;        // Offset:  236 Size:     4 [unused]
  float fPartsMaskX__uiUNorm;        // Offset:  240 Size:     4 [unused]
  float fPartsMaskY__uiUNorm;        // Offset:  244 Size:     4 [unused]
  float fPartsMaskZ__uiUNorm;        // Offset:  248 Size:     4 [unused]
  float fPartsMaskW__uiUNorm;        // Offset:  252 Size:     4 [unused]
  bool bUseOffset;                   // Offset:  256 Size:     4
  float fOffsetScale;                // Offset:  260 Size:     4
  bool bTranslucentOffset;           // Offset:  264 Size:     4
  bool bAntiSSSEmit;                 // Offset:  268 Size:     4 [unused]
  float3 fFlowDirDir__uiDirection;   // Offset:  272 Size:    12 [unused]
  // align: 284 to 288
  ubyte align3[4];
  float4 fFlowControl__uiUNorm;      // Offset:  288 Size:    16 [unused]
  float fFlowTile;                   // Offset:  304 Size:     4 [unused]
  // align: 308 to 320
  ubyte align4[12];
  float4 fFlowColor__uiColor;        // Offset:  320 Size:    16 [unused]
  float4 fFlowMatControl__uiUNorm;   // Offset:  336 Size:    16 [unused]
  float4 fMaskBlend__uiUNorm;        // Offset:  352 Size:    16 [unused]
  float2 fMaskBlend_A__uiUNorm;      // Offset:  368 Size:     8 [unused]
  float2 fMaskBlend_B__uiUNorm;      // Offset:  376 Size:     8 [unused]
  float fFilmThickness__uiUNorm;     // Offset:  384 Size:     4 [unused]
  float fFilmBlend__uiUNorm;         // Offset:  388 Size:     4 [unused]
  float fFilmIOR__uiUNorm;           // Offset:  392 Size:     4 [unused]
  float fRefraction__uiUNorm;        // Offset:  396 Size:     4 [unused]
  float fRefractionBlend__uiUNorm;   // Offset:  400 Size:     4 [unused]
  bool bUseBlendDisplace;            // Offset:  404 Size:     4
  float fVAnimV__uiUNorm;            // Offset:  408 Size:     4 [unused]
  float fVAnimPosScale;              // Offset:  412 Size:     4
  bool bInvertX;                     // Offset:  416 Size:     4
  float fAnimEmitMin;                // Offset:  420 Size:     4 [unused]
  float fAnimEmitSpeed;              // Offset:  424 Size:     4 [unused]
  bool bUseWaveEmit;                 // Offset:  428 Size:     4 [unused]
  float fAnimEmitWave;               // Offset:  432 Size:     4 [unused]
  float fRimAlphaPower__uiSNorm;     // Offset:  436 Size:     4 [unused]
  float fRimTranslucency__uiUNorm;   // Offset:  440 Size:     4 [unused]
  float fRimNormal__uiUNorm;         // Offset:  444 Size:     4 [unused]
  bool bUseFullNormal;               // Offset:  448 Size:     4 [unused]
  float fSnowUVTile;                 // Offset:  452 Size:     4 [unused]
  // align: 456 to 464
  ubyte align5[8];
  float4 fSnowBlendColor__uiColor;   // Offset:  464 Size:    16
  float4 fSnowMatControl__uiUNorm;   // Offset:  480 Size:    16 [unused]
  float fMaterialSnowBlendB;         // Offset:  496 Size:     4
  // align: 500 to 512
  ubyte align6[12];
  float4 fSnowControl;               // Offset:  512 Size:    16
};

//CBMhMaterialEM032Local__disclosure : 999.shdr.src
struct CBMhMaterialEM032Local__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  bool bBaseColorEmissive;           // Offset:   52 Size:     4 [unused]
  float2 fPaintUVTile;               // Offset:   56 Size:     8 [unused]
  float fAddNormalBlend__uiUNorm;    // Offset:   64 Size:     4 [unused]
  // align: 68 to 80
  ubyte align0[12];
  float4 fAddNormalMaskA__uiSNorm;   // Offset:   80 Size:    16 [unused]
  float4 fAddNormalMaskB__uiSNorm;   // Offset:   96 Size:    16 [unused]
  float fAddNormalMaskC__uiUNorm;    // Offset:  112 Size:     4 [unused]
  float fAddNormalMaskD__uiUNorm;    // Offset:  116 Size:     4 [unused]
  bool bBackFaceShading;             // Offset:  120 Size:     4 [unused]
  bool bBackFaceNormalFilp;          // Offset:  124 Size:     4 [unused]
  float3 fKizuColor__uiColor;        // Offset:  128 Size:    12 [unused]
  // align: 140 to 144
  ubyte align1[4];
  float2 fKizuUVOffset__uiUNorm;     // Offset:  144 Size:     8 [unused]
  float fKizuMultiply;               // Offset:  152 Size:     4 [unused]
  bool bLegendary;                   // Offset:  156 Size:     4 [unused]
  float4 fLegendColor__uiColor;      // Offset:  160 Size:    16 [unused]
  float2 fLegendMetalMask__uiUNorm;  // Offset:  176 Size:     8 [unused]
  float fLegendRoughness;            // Offset:  184 Size:     4 [unused]
  // align: 188 to 192
  ubyte align2[4];
  float3 fLegendFilm__uiUNorm;       // Offset:  192 Size:    12 [unused]
  float fLegendSSSMask__uiUNorm;     // Offset:  204 Size:     4 [unused]
  float3 fLegendHSV__uiSNorm;        // Offset:  208 Size:    12 [unused]
  float fLegendFilmIOR__uiUNorm;     // Offset:  220 Size:     4 [unused]
  float fPartsMaskA__uiUNorm;        // Offset:  224 Size:     4 [unused]
  float fPartsMaskB__uiUNorm;        // Offset:  228 Size:     4 [unused]
  float fPartsMaskC__uiUNorm;        // Offset:  232 Size:     4 [unused]
  float fPartsMaskD__uiUNorm;        // Offset:  236 Size:     4 [unused]
  float fPartsMaskX__uiUNorm;        // Offset:  240 Size:     4 [unused]
  float fPartsMaskY__uiUNorm;        // Offset:  244 Size:     4 [unused]
  float fPartsMaskZ__uiUNorm;        // Offset:  248 Size:     4 [unused]
  float fPartsMaskW__uiUNorm;        // Offset:  252 Size:     4 [unused]
  bool bUseOffset;                   // Offset:  256 Size:     4
  float fOffsetScale;                // Offset:  260 Size:     4
  bool bTranslucentOffset;           // Offset:  264 Size:     4
  bool bAntiSSSEmit;                 // Offset:  268 Size:     4 [unused]
  float3 fFlowDirDir__uiDirection;   // Offset:  272 Size:    12 [unused]
  // align: 284 to 288
  ubyte align3[4];
  float4 fFlowControl__uiUNorm;      // Offset:  288 Size:    16 [unused]
  float fFlowTile;                   // Offset:  304 Size:     4 [unused]
  // align: 308 to 320
  ubyte align4[12];
  float4 fFlowColor__uiColor;        // Offset:  320 Size:    16 [unused]
  float4 fFlowMatControl__uiUNorm;   // Offset:  336 Size:    16 [unused]
  float fFilmThickness__uiUNorm;     // Offset:  352 Size:     4 [unused]
  float fFilmBlend__uiUNorm;         // Offset:  356 Size:     4 [unused]
  float fFilmIOR__uiUNorm;           // Offset:  360 Size:     4 [unused]
  float fRefraction__uiUNorm;        // Offset:  364 Size:     4 [unused]
  float fRefractionBlend__uiUNorm;   // Offset:  368 Size:     4 [unused]
  float fAnimEmitMin;                // Offset:  372 Size:     4 [unused]
  float fAnimEmitSpeed;              // Offset:  376 Size:     4 [unused]
  bool bUseWaveEmit;                 // Offset:  380 Size:     4 [unused]
  float fAnimEmitWave;               // Offset:  384 Size:     4 [unused]
  // align: 388 to 400
  ubyte align5[12];
  float4 fAnimEmitControl__uiUNorm;  // Offset:  400 Size:    16 [unused]
  float fRimAlphaPower__uiSNorm;     // Offset:  416 Size:     4 [unused]
  float fRimTranslucency__uiUNorm;   // Offset:  420 Size:     4 [unused]
  float fRimNormal__uiUNorm;         // Offset:  424 Size:     4 [unused]
  float fSnowUVTile;                 // Offset:  428 Size:     4 [unused]
  float4 fSnowBlendColor__uiColor;   // Offset:  432 Size:    16
  float4 fSnowMatControl__uiUNorm;   // Offset:  448 Size:    16 [unused]
  float fMaterialSnowBlendB;         // Offset:  464 Size:     4
  // align: 468 to 480
  ubyte align6[12];
  float4 fSnowControl;               // Offset:  480 Size:    16
};

//CBLight : 9999.shdr.src
struct CBLight {

  uint iLightOffset;                 // Offset:    0 Size:     4 [unused]
  uint iLightNum;                    // Offset:    4 Size:     4 [unused]
  uint iPrimaryLight;                // Offset:    8 Size:     4 [unused]
  uint iGIDiffuseFlags;              // Offset:   12 Size:     4 [unused]
  bool bLightSortByType;             // Offset:   16 Size:     4 [unused]
  float fSHSSAOEffect;               // Offset:   20 Size:     4 [unused]
  float fSSAOEffectGI;               // Offset:   24 Size:     4 [unused]
  float fSHDiffuseInverseScale;      // Offset:   28 Size:     4 [unused]
  float4 fSHCoef[7];                 // Offset:   32 Size:   112 [unused]
  row_major float4x4 fPrimaryLightMat;// Offset:  144 Size:    64 [unused]
  row_major float4x4 fBroadAreaShadowMat;// Offset:  208 Size:    64
  bool bBroadAreaShadowEnable;       // Offset:  272 Size:     4
  bool bGISpecularSHDiffuseBlend;    // Offset:  276 Size:     4 [unused]
  uint2 iLightInfiniteRange;         // Offset:  280 Size:     8 [unused]
  uint2 iLightPointRange;            // Offset:  288 Size:     8 [unused]
  uint2 iLightSpotRange;             // Offset:  296 Size:     8 [unused]
};

//CBInstancing : 999.shdr.src
struct CBInstancing {

  uint iInstanceIndex;               // Offset:    0 Size:     4
};

//CBBokehCOCSettings : 9564.shdr.src
struct CBBokehCOCSettings {

  float3 BokehNearColor;             // Offset:    0 Size:    12
  float BokehColorFadeSmooth;        // Offset:   12 Size:     4 [unused]
  float3 BokehFarColor;              // Offset:   16 Size:    12
  float BokehCoCScale;               // Offset:   28 Size:     4 [unused]
  float BokehCoCBias;                // Offset:   32 Size:     4 [unused]
  float2 BokehScaler;                // Offset:   36 Size:     8 [unused]
  // align: 44 to 48
  ubyte align0[4];
  float2 BokehMaxTextureFetchCoord;  // Offset:   48 Size:     8 [unused]
  float2 BokehBaseImageMaxFetchPos;  // Offset:   56 Size:     8
  float2 BokehBaseImageMaxFetchPosInv;// Offset:   64 Size:     8 [unused]
  int2 BokehBaseImageMaxFetchPosInt; // Offset:   72 Size:     8 [unused]
  float BokehContentScale;           // Offset:   80 Size:     4
  float BokehInfCoCSize;             // Offset:   84 Size:     4 [unused]
  float BokehNearCoCScale;           // Offset:   88 Size:     4 [unused]
  float BokehNearCoCBias;            // Offset:   92 Size:     4 [unused]
  float BokehFarCoCScale;            // Offset:   96 Size:     4 [unused]
  float BokehFarCoCBias;             // Offset:  100 Size:     4 [unused]
  float BokehContrast;               // Offset:  104 Size:     4
  float BokehFarSmooth;              // Offset:  108 Size:     4 [unused]
  float BokehNearBleedSmooth;        // Offset:  112 Size:     4 [unused]
  float BokehSpreadOffsetCoC;        // Offset:  116 Size:     4 [unused]
  float BokehSpreadScaleCoC;         // Offset:  120 Size:     4 [unused]
  float BokehSpreadToePower;         // Offset:  124 Size:     4 [unused]
  float BokehMipmapBias;             // Offset:  128 Size:     4 [unused]
  float BokehMipmapScale;            // Offset:  132 Size:     4 [unused]
  float BokehHorizontalStep;         // Offset:  136 Size:     4 [unused]
  float BokehVerticalStep;           // Offset:  140 Size:     4 [unused]
  float BokehMaxScale;               // Offset:  144 Size:     4 [unused]
  float3 BokehInFocusThreshold;      // Offset:  148 Size:    12 [unused]
  float BokehIgnoreEffectRate;       // Offset:  160 Size:     4
  // align: 164 to 176
  ubyte align1[12];
  float4 BokehFarFetchOffset;        // Offset:  176 Size:    16 [unused]
  int AlwaysZeroValue;               // Offset:  192 Size:     4 [unused]
};

//CBLightProbes : 9998.shdr.src
struct CBLightProbes {

  bool bLightProbesEnable;           // Offset:    0 Size:     4 [unused]
  float3 probesGridInvCellSize;      // Offset:    4 Size:    12
  float3 probesGridPosition;         // Offset:   16 Size:    12
  // align: 28 to 32
  ubyte align0[4];
  uint3 probesGridSize;              // Offset:   32 Size:    12
  // align: 44 to 48
  ubyte align1[4];
  float3 fProbesGridHalf;            // Offset:   48 Size:    12
  // align: 60 to 64
  ubyte align2[4];
  float3 probeColor;                 // Offset:   64 Size:    12
  // align: 76 to 80
  ubyte align3[4];
  float4 fOutsideSHCoef[7];          // Offset:   80 Size:   112 [unused]
  float4 fShadowSHCoef[7];           // Offset:  192 Size:   112 [unused]
  float lightProbesHemisphereTopIntensity;// Offset:  304 Size:     4 [unused]
  float lightProbesHemisphereBottomIntensity;// Offset:  308 Size:     4 [unused]
  uint iProbeFlags;                  // Offset:  312 Size:     4
  float fDaytimeInterpolation;       // Offset:  316 Size:     4 [unused]
  bool bEnableNeighborSearch;        // Offset:  320 Size:     4
  uint iTocCollisionOffset;          // Offset:  324 Size:     4
};

//CBLGTPRBDebug : 905.shdr.src
struct CBLGTPRBDebug {

  float fProbeSize;                  // Offset:    0 Size:     4 [unused]
  float3 lineColor;                  // Offset:    4 Size:    12
  uint iProbeDebugType;              // Offset:   16 Size:     4 [unused]
};

//CBPrimSystem : 9686.shdr.src
struct CBPrimSystem {

  float fPrimGammaCorrect;           // Offset:    0 Size:     4
  float fPrimAlphaLowerLimit;        // Offset:    4 Size:     4
  float fPrimGlobalLightReflectance; // Offset:    8 Size:     4 [unused]
  uint iPrimSystemFalgs;             // Offset:   12 Size:     4 [unused]
};

//CBPrimitive : 9686.shdr.src
struct CBPrimitive {

  float4 fPrimParam0;                // Offset:    0 Size:    16 [unused]
  float4 fPrimParam1;                // Offset:   16 Size:    16 [unused]
  float4 fPrimParam2;                // Offset:   32 Size:    16 [unused]
  float4 fPrimParam3;                // Offset:   48 Size:    16 [unused]
  float4 fPrimParam4;                // Offset:   64 Size:    16
  float4 fPrimParam5;                // Offset:   80 Size:    16 [unused]
  float4 fPrimParam6;                // Offset:   96 Size:    16 [unused]
  float4 fPrimParam7;                // Offset:  112 Size:    16 [unused]
  float4 fPrimParam8;                // Offset:  128 Size:    16 [unused]
  float4 fPrimParam9;                // Offset:  144 Size:    16 [unused]
  uint4 iPrimParam0;                 // Offset:  160 Size:    16
};

//CBMhMaterialVfxFloodLocal__disclosure : 10090.shdr.src
struct CBMhMaterialVfxFloodLocal__disclosure {

  float3 fBaseMapFactor__uiColor;    // Offset:    0 Size:    12 [unused]
  // align: 12 to 16
  ubyte align0[4];
  float3 fDistortionFactor__uiColor; // Offset:   16 Size:    12 [unused]
  // align: 28 to 32
  ubyte align1[4];
  float3 fCubeMapFactor__uiColor;    // Offset:   32 Size:    12 [unused]
  float fOpacityFactor;              // Offset:   44 Size:     4 [unused]
  float fMetalic__uiUNorm;           // Offset:   48 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   52 Size:     4 [unused]
  float fDispFactor;                 // Offset:   56 Size:     4
  // align: 60 to 64
  ubyte align2[4];
  float4 fUVTransformA;              // Offset:   64 Size:    16 [unused]
  float4 fUVTransformB;              // Offset:   80 Size:    16
  float4 fUVTransformC;              // Offset:   96 Size:    16 [unused]
  float fVolumeBlend__uiSNorm;       // Offset:  112 Size:     4 [unused]
  float fSpecularFactor;             // Offset:  116 Size:     4 [unused]
  bool bSceneEnvMap;                 // Offset:  120 Size:     4 [unused]
  float fRaflectionAngle__uiSNorm;   // Offset:  124 Size:     4 [unused]
  float fDistortionAngle;            // Offset:  128 Size:     4 [unused]
  float fDistortion;                 // Offset:  132 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:  136 Size:     4 [unused]
  float fDiffuseChroma__uiUNorm;     // Offset:  140 Size:     4 [unused]
  float fSpecularChroma__uiUNorm;    // Offset:  144 Size:     4 [unused]
  float fFlowSpeed;                  // Offset:  148 Size:     4 [unused]
  float fFlowStrength;               // Offset:  152 Size:     4 [unused]
  float fWhiteWaterPow;              // Offset:  156 Size:     4 [unused]
  float fWhiteWater;                 // Offset:  160 Size:     4 [unused]
  float fEdgeFoamPow;                // Offset:  164 Size:     4 [unused]
  float fEdgeFoamFactor;             // Offset:  168 Size:     4 [unused]
  bool bEnableLava;                  // Offset:  172 Size:     4 [unused]
  bool bEnableAlbedoBlend;           // Offset:  176 Size:     4 [unused]
  float fHeat;                       // Offset:  180 Size:     4 [unused]
  float fInnerOffsetScale;           // Offset:  184 Size:     4
  float fAlbedoBlendPow;             // Offset:  188 Size:     4 [unused]
  float fAlbedoBlendRate;            // Offset:  192 Size:     4 [unused]
  float fAlbedoBlendFactor;          // Offset:  196 Size:     4 [unused]
  // align: 200 to 208
  ubyte align3[8];
  float3 fAlbedoBlendVector;         // Offset:  208 Size:    12 [unused]
  float fVelocityAttn;               // Offset:  220 Size:     4 [unused]
  float fNormalDecalBlend__uiUNorm;  // Offset:  224 Size:     4 [unused]
  bool bUseUVPrimaryOM;              // Offset:  228 Size:     4 [unused]
};

//CBMaterialCommon__disclosure : 9960.shdr.src
struct CBMaterialCommon__disclosure {

  bool bBypass;                      // Offset:    0 Size:     4
  bool bDecalMask;                   // Offset:    4 Size:     4 [unused]
  bool bEmissive;                    // Offset:    8 Size:     4
  uint iGBufferId;                   // Offset:   12 Size:     4 [unused]
  uint iOutlineId;                   // Offset:   16 Size:     4 [unused]
};

//CBFog : 9981.shdr.src
struct CBFog {

  uint iFogType;                     // Offset:    0 Size:     4
  uint iDistanceFogFlags;            // Offset:    4 Size:     4
  float fFogStart;                   // Offset:    8 Size:     4
  float fFogInvRange;                // Offset:   12 Size:     4
  float fFogDensity;                 // Offset:   16 Size:     4
  float3 fFogColor;                  // Offset:   20 Size:    12
  float fFogHStart;                  // Offset:   32 Size:     4
  float3 fFogHColor;                 // Offset:   36 Size:    12
  float fFogHInvRange;               // Offset:   48 Size:     4
  float fFogHDensity;                // Offset:   52 Size:     4
  float2 fFogHUVOffset;              // Offset:   56 Size:     8
  float fFogHUVScale;                // Offset:   64 Size:     4
  float fFogHSlopeBias;              // Offset:   68 Size:     4
  float fFogCurveIntensity;          // Offset:   72 Size:     4
  uint iMipFogBlendMode;             // Offset:   76 Size:     4
  float fMipFogBlend;                // Offset:   80 Size:     4
  float fMipFogIntensity;            // Offset:   84 Size:     4
  // align: 88 to 96
  ubyte align0[8];
  float3 fMipFogColor;               // Offset:   96 Size:    12
  // align: 108 to 112
  ubyte align1[4];
  float3 fSkyCenter;                 // Offset:  112 Size:    12 [unused]
  float fSkyRadius;                  // Offset:  124 Size:     4 [unused]
  float4 fMipFogPrecomp;             // Offset:  128 Size:    16
  float fMipFogLimitLevel;           // Offset:  144 Size:     4
  float fMipFogRotSin;               // Offset:  148 Size:     4
  float fMipFogRotCos;               // Offset:  152 Size:     4
};

//CBRenderFrame : 9987.shdr.src
struct CBRenderFrame {

  uint iRenderFrame;                 // Offset:    0 Size:     4
  uint iTotalTime;                   // Offset:    4 Size:     4 [unused]
  uint iTotalTimeEx;                 // Offset:    8 Size:     4 [unused]
  float fFPS;                        // Offset:   12 Size:     4 [unused]
  float fDeltaTime;                  // Offset:   16 Size:     4 [unused]
  float fSSAOEffect;                 // Offset:   20 Size:     4 [unused]
  bool bSSSEnable;                   // Offset:   24 Size:     4 [unused]
  bool bIsRenderingWater;            // Offset:   28 Size:     4 [unused]
  float fWaterDepthBias;             // Offset:   32 Size:     4 [unused]
  uint iGpuMode;                     // Offset:   36 Size:     4 [unused]
  float2 fDitherSize;                // Offset:   40 Size:     8 [unused]
  bool bHdrOutput;                   // Offset:   48 Size:     4 [unused]
  float fHdrOutputWhiteLevel;        // Offset:   52 Size:     4 [unused]
  float fHdrOutputGamutMappingRatio; // Offset:   56 Size:     4 [unused]
  float fHdrOutputGamma;             // Offset:   60 Size:     4 [unused]
  bool bIsGUIHdrGamma;               // Offset:   64 Size:     4 [unused]
};

//CBTestLight : 9960.shdr.src
struct CBTestLight {

  float3 fTestLightDir;              // Offset:    0 Size:    12
  // align: 12 to 16
  ubyte align0[4];
  float3 fTestLightColor;            // Offset:   16 Size:    12
};

//CBPick : 9966.shdr.src
struct CBPick {

  uint2 iPickPoint;                  // Offset:    0 Size:     8
};

//CBMhMaterialEMGlobal : 994.shdr.src
struct CBMhMaterialEMGlobal {

  uint fMaterialPaintNum;            // Offset:    0 Size:     4
  // align: 4 to 16
  ubyte align0[12];
  uint fMaterialPaintType[16];       // Offset:   16 Size:   244
  // align: 260 to 272
  ubyte align1[12];
  float4 fMaterialPaintColor[16];    // Offset:  272 Size:   256
  float4 fMaterialPaintCapsuleP0[16];// Offset:  528 Size:   256
  float4 fMaterialPaintCapsuleP1[16];// Offset:  784 Size:   256
  float fMaterialPaintCapsuleR[16];  // Offset: 1040 Size:   244
  // align: 1284 to 1296
  ubyte align2[12];
  float2 fMaterialPaintBlendRange[16];// Offset: 1296 Size:   248
  // align: 1544 to 1552
  ubyte align3[8];
  float4 fMaterialPaintEmissive[16]; // Offset: 1552 Size:   256
  bool bMaterialPaintEmissive;       // Offset: 1808 Size:     4
  float fMaterialWetBlend;           // Offset: 1812 Size:     4
  float fMaterialWetRoughness;       // Offset: 1816 Size:     4
  // align: 1820 to 1824
  ubyte align4[4];
  float4 fMaterialDamageColor;       // Offset: 1824 Size:    16
  float2 fMaterialDamageBlendRange;  // Offset: 1840 Size:     8
};

//CBMotionBlurReconstruction : 9983.shdr.src
struct CBMotionBlurReconstruction {

  int2 iTileSize;                    // Offset:    0 Size:     8 [unused]
  uint uNumSamples;                  // Offset:    8 Size:     4 [unused]
  float fInvNumSamples;              // Offset:   12 Size:     4 [unused]
  float fShutterSpeed;               // Offset:   16 Size:     4
  float fFurShutterSpeed;            // Offset:   20 Size:     4 [unused]
  float fBlurThreshold;              // Offset:   24 Size:     4 [unused]
  float fHalfPixelSize;              // Offset:   28 Size:     4
  float2 fMaxTexCoord;               // Offset:   32 Size:     8 [unused]
  int iDebugViewType;                // Offset:   40 Size:     4 [unused]
  bool bIsPrevious;                  // Offset:   44 Size:     4 [unused]
  bool bIsLegacy;                    // Offset:   48 Size:     4 [unused]
};

//CBVRVolumeParams : 9977.shdr.src
struct CBVRVolumeParams {

  struct CBVRVolumeParams_VolumeParam
  {
      uint packedData;               // Offset:    0
      float3 emissive;               // Offset:    4
      float3 scattering;             // Offset:   16
      float hgEccentricity;          // Offset:   28
      float3 tiling;                 // Offset:   32
      float moveSpeed;               // Offset:   44
      float3 moveDir;                // Offset:   48
      float dispelFactor;            // Offset:   60
  } volumeList[128];                 // Offset:    0 Size:  8192
  struct CBVRVolumeParams_Constant
  {
      float3 limits;                 // Offset: 8192
      uint extra;                    // Offset: 8204
  } constantVolumes[128];            // Offset: 8192 Size:  2048
  struct CBVRVolumeParams_Cuboid
  {
      row_major float4x4 model;      // Offset: 10240
      row_major float4x4 modelI;     // Offset: 10304
      float4 minAABB;                // Offset: 10368
      float4 maxAABB;                // Offset: 10384
  } cuboidVolumes[128];              // Offset: 10240 Size: 20480 [unused]
  struct CBVRVolumeParams_Spherical
  {
      row_major float4x4 model;      // Offset: 30720
      row_major float4x4 modelI;     // Offset: 30784
      uint4 extra;                   // Offset: 30848
  } sphericalVolumes[128];           // Offset: 30720 Size: 18432 [unused]
  struct CBVRVolumeParams_Spotlight
  {
      float3 origin;                 // Offset: 49152
      float height;                  // Offset: 49164
      float3 dir;                    // Offset: 49168
      float cosAngle;                // Offset: 49180
  } spotlightVolumes[128];           // Offset: 49152 Size:  4096 [unused]
};

//CBGaussian : 9668.shdr.src
struct CBGaussian {

  float4 fOffset0;                   // Offset:    0 Size:    16
  float4 fOffset1;                   // Offset:   16 Size:    16
  float4 fWeight0;                   // Offset:   32 Size:    16
  float4 fWeight1;                   // Offset:   48 Size:    16 [unused]
  float fEdgeSharpness;              // Offset:   64 Size:     4
};

//CBMhSky2SimplePS : 8007.shdr.src
struct CBMhSky2SimplePS {

  float3 fSkyGlobalIntensity;        // Offset:    0 Size:    12
  // align: 12 to 16
  ubyte align0[4];
  float3 fSkyWaterReflectionFactor;  // Offset:   16 Size:    12 [unused]
  bool bSkyFog;                      // Offset:   28 Size:     4
  float fSkyFogBlend;                // Offset:   32 Size:     4
  bool bSkyDeGamma;                  // Offset:   36 Size:     4
  float fGamma;                      // Offset:   40 Size:     4
  // align: 44 to 48
  ubyte align1[4];
  uint2 iSkyAddress;                 // Offset:   48 Size:     8 [unused]
  float2 fSkyTopCloudUVScale0;       // Offset:   56 Size:     8
  float2 fSkyTopCloudUVScale1;       // Offset:   64 Size:     8
  float fSkyCloudContrast;           // Offset:   72 Size:     4
  float fSkyCurveMapTexelHeight;     // Offset:   76 Size:     4
  float fSkyAlpha;                   // Offset:   80 Size:     4
  // align: 84 to 96
  ubyte align2[12];
  float4 fSkyBaseMapFactor;          // Offset:   96 Size:    16
  float2 fSkyBaseSideCloudUVOffset;  // Offset:  112 Size:     8
  float2 fSkyBaseTopCloudUVOffset0;  // Offset:  120 Size:     8
  float2 fSkyBaseTopCloudUVOffset1;  // Offset:  128 Size:     8
  // align: 136 to 144
  ubyte align3[8];
  float2 fSkyCloudSpeeds[4];         // Offset:  144 Size:    56
  // align: 200 to 208
  ubyte align4[8];
  float4 fSkySunCloudHighlightColors[4];// Offset:  208 Size:    64
  float4 fSkySunCloudShadowColors[4];// Offset:  272 Size:    64
  float4 fSkyMiddleCloudHighlightColors[4];// Offset:  336 Size:    64
  float4 fSkyMiddleCloudShadowColors[4];// Offset:  400 Size:    64
  float4 fSkyBackgroundCloudHighlightColors[4];// Offset:  464 Size:    64
  float4 fSkyBackgroundCloudShadowColors[4];// Offset:  528 Size:    64
  float fSkyCloudAlpha[4];           // Offset:  592 Size:    52
};

//CBSystemColor : 54.shdr.src
struct CBSystemColor {

  float4 fSystemColor;               // Offset:    0 Size:    16
};

//CBNewDOFFilter : 9814.shdr.src
struct CBNewDOFFilter {

  float coc_bias;                    // Offset:    0 Size:     4
  float coc_scale;                   // Offset:    4 Size:     4
  float pcoc;                        // Offset:    8 Size:     4
  float quad_reduction_threshold;    // Offset:   12 Size:     4 [unused]
  float quater_resolution_threshold; // Offset:   16 Size:     4 [unused]
  float near_blur_scaler;            // Offset:   20 Size:     4 [unused]
  float depth_adjuist_factor;        // Offset:   24 Size:     4 [unused]
  float bokeh_intensity_threshold;   // Offset:   28 Size:     4 [unused]
  float bokeh_shape_factor;          // Offset:   32 Size:     4 [unused]
  float dof_single_pixel_radius;     // Offset:   36 Size:     4
  float dof_aspect;                  // Offset:   40 Size:     4 [unused]
  bool far_ignore;                   // Offset:   44 Size:     4
  bool near_ignore;                  // Offset:   48 Size:     4
  float far_coef;                    // Offset:   52 Size:     4
  float near_coef;                   // Offset:   56 Size:     4
  float fVignettingOffset;           // Offset:   60 Size:     4 [unused]
  float fVignettingPow;              // Offset:   64 Size:     4 [unused]
  bool bVignetting;                  // Offset:   68 Size:     4 [unused]
  float fVignettingEllipticity;      // Offset:   72 Size:     4 [unused]
  // align: 76 to 80
  ubyte align0[4];
  float3 fVignettingColor;           // Offset:   80 Size:    12 [unused]
};

//CBAmbientOcclusion : 9984.shdr.src
struct CBAmbientOcclusion {

  int iSSAOPrimaryReductionLevel;    // Offset:    0 Size:     4
  uint iSSAOPrimaryFactor;           // Offset:    4 Size:     4
  float fSSAOPrimaryScale;           // Offset:    8 Size:     4 [unused]
  float fApproximateSSAOSamplePerPixel;// Offset:   12 Size:     4
  uint iApproximateSSAOMaxSampleNum; // Offset:   16 Size:     4
  float fApproximateSSAOBias;        // Offset:   20 Size:     4
  float fApproximateSSAOWeight;      // Offset:   24 Size:     4
  float fApproximateSSAOEdgeAttenRate;// Offset:   28 Size:     4 [unused]
  row_major float4x4 fApproximateSSAORadiusMat;// Offset:   32 Size:    64
  uint iApproximateSSAODepthMipBias; // Offset:   96 Size:     4 [unused]
  float fPrimaryShadowRadius;        // Offset:  100 Size:     4 [unused]
  uint iPrimaryShadowSampleNum;      // Offset:  104 Size:     4 [unused]
  float fPrimaryShadowUpsampleThresholdMin;// Offset:  108 Size:     4 [unused]
  float fPrimaryShadowUpsampleThresholdMax;// Offset:  112 Size:     4 [unused]
  float fPrimaryShadowUpsampleThresholdDiffInv;// Offset:  116 Size:     4 [unused]
};

//CB_TemporalAA2 : 8845.shdr.src
struct CB_TemporalAA2 {

  float fBlendRate;                  // Offset:    0 Size:     4
  bool bVelocityBase;                // Offset:    4 Size:     4
  float fVarianceGamma;              // Offset:    8 Size:     4
  float fSharpenAmount;              // Offset:   12 Size:     4 [unused]
};

//pix_clear_constants : 10166.shdr.src
struct pix_clear_constants {

  float4 m_color;                    // Offset:    0 Size:    16
};

//CBWaterCustomLight : 9552.shdr.src
struct CBWaterCustomLight {

  bool bShadowCascadeBias;           // Offset:    0 Size:     4
};

//CBWaterMaterial : 9981.shdr.src
struct CBWaterMaterial {

  row_major float4x4 fReflectionViewProj;// Offset:    0 Size:    64 [unused]
  float fReflectionFactor;           // Offset:   64 Size:     4 [unused]
  float fCubemapBlendRate;           // Offset:   68 Size:     4 [unused]
  float fRefractionFactor;           // Offset:   72 Size:     4 [unused]
  float fRefactionIndex;             // Offset:   76 Size:     4 [unused]
  float3 fColExtinction;             // Offset:   80 Size:    12 [unused]
  // align: 92 to 96
  ubyte align0[4];
  float3 fColScatter;                // Offset:   96 Size:    12 [unused]
  float fScatteringCoeff;            // Offset:  108 Size:     4 [unused]
  float fFresnelBias;                // Offset:  112 Size:     4 [unused]
  float3 normalATiling;              // Offset:  116 Size:    12 [unused]
  float3 normalBTiling;              // Offset:  128 Size:    12 [unused]
  // align: 140 to 144
  ubyte align1[4];
  float3 normalAMoveDir;             // Offset:  144 Size:    12 [unused]
  // align: 156 to 160
  ubyte align2[4];
  float3 normalBMoveDir;             // Offset:  160 Size:    12 [unused]
  // align: 172 to 176
  ubyte align3[4];
  float2 materialTiling;             // Offset:  176 Size:     8 [unused]
  // align: 184 to 192
  ubyte align4[8];
  float3 materialColor;              // Offset:  192 Size:    12 [unused]
  float fWaterDeltaTime;             // Offset:  204 Size:     4 [unused]
  float fDepthFadeInv;               // Offset:  208 Size:     4 [unused]
  uint iLightGroup;                  // Offset:  212 Size:     4
  uint iFlags;                       // Offset:  216 Size:     4 [unused]
  float fMaxDepth;                   // Offset:  220 Size:     4 [unused]
  float3 causticsTiling;             // Offset:  224 Size:    12 [unused]
  // align: 236 to 240
  ubyte align5[4];
  float3 causticsMoveDir;            // Offset:  240 Size:    12 [unused]
  float fCausticsDensityLow;         // Offset:  252 Size:     4 [unused]
  float3 whitecapTiling;             // Offset:  256 Size:    12 [unused]
  // align: 268 to 272
  ubyte align6[4];
  float3 whitecapMoveDir;            // Offset:  272 Size:    12 [unused]
  float fWhitecapRoughness;          // Offset:  284 Size:     4 [unused]
  float fWhitecapDepthThreshold;     // Offset:  288 Size:     4 [unused]
  float fWhitecapDepthFade;          // Offset:  292 Size:     4 [unused]
  float fWhitecapHeightWPosUnder;    // Offset:  296 Size:     4 [unused]
  float fWhitecapHeightWPosThreshold;// Offset:  300 Size:     4 [unused]
  float fWhitecapHeightFade;         // Offset:  304 Size:     4 [unused]
  float fWhitecapHeightPower;        // Offset:  308 Size:     4 [unused]
};

//CBWaterCustom : 9981.shdr.src
struct CBWaterCustom {

  float4 fWaterCustomBaseMapFactor;  // Offset:    0 Size:    16
  float4 fWaterCustomBlendBaseMapFactor;// Offset:   16 Size:    16 [unused]
  float3 fWaterCustomEmissiveMapFactor;// Offset:   32 Size:    12 [unused]
  // align: 44 to 48
  ubyte align0[4];
  float3 fWaterCustomCubeMapFactor;  // Offset:   48 Size:    12
  // align: 60 to 64
  ubyte align1[4];
  float3 fWaterCustomBlendCubeMapFactor;// Offset:   64 Size:    12 [unused]
  float fWaterCustomMetallic;        // Offset:   76 Size:     4
  float fWaterCustomRoughness;       // Offset:   80 Size:     4
  float fWaterCustomSpecular;        // Offset:   84 Size:     4
  // align: 88 to 96
  ubyte align2[8];
  float4 fWaterCustomUVTransformA;   // Offset:   96 Size:    16
  float4 fWaterCustomUVTransformB;   // Offset:  112 Size:    16
  float2 fWaterCustomUVOffsetSpeedFactor;// Offset:  128 Size:     8
  float2 fWaterCustomUVOffsetSpeedFactorDetail;// Offset:  136 Size:     8
  float fWaterCustomDetailNormalBlend;// Offset:  144 Size:     4
  float fWaterCustomProjectionNormalBlend;// Offset:  148 Size:     4 [unused]
  float2 fWaterCustomProjectionNormalTileSize;// Offset:  152 Size:     8 [unused]
  float fWaterCustomRefraction;      // Offset:  160 Size:     4
  float3 fWaterCustomRefractionFactor;// Offset:  164 Size:    12
  float3 fWaterCustomBlendRefractionFactor;// Offset:  176 Size:    12 [unused]
  float fWaterCustomRefractionPow;   // Offset:  188 Size:     4
  bool bWaterCustomRefractionScreenFade;// Offset:  192 Size:     4
  float fWaterCustomRefractionTangentNormalBlend;// Offset:  196 Size:     4
  float fWaterCustomVolumeBlend;     // Offset:  200 Size:     4
  float fWaterCustomFlowStrength;    // Offset:  204 Size:     4 [unused]
  float fWaterCustomFlowSpeed;       // Offset:  208 Size:     4 [unused]
  float fWaterCustomFresnelBias;     // Offset:  212 Size:     4
  float fWaterCustomShadowAttn;      // Offset:  216 Size:     4 [unused]
  float fWaterCustomNormalXZAttn;    // Offset:  220 Size:     4 [unused]
  uint iWaterCustomEnvMapAttn;       // Offset:  224 Size:     4
  float fWaterCustomShadowDistortion;// Offset:  228 Size:     4 [unused]
};

//CBCubeCopy : 10173.shdr.src
struct CBCubeCopy {

  int4 regions[6];                   // Offset:    0 Size:    96
};

//CBViewFrustum : 340.shdr.src
struct CBViewFrustum {

  float4 fViewFrustum[6];            // Offset:    0 Size:    96
};

//CBTest : 10178.shdr.src
struct CBTest {

  float4 fTestParam;                 // Offset:    0 Size:    16
  float3 fTestDirection;             // Offset:   16 Size:    12 [unused]
  float fTestType;                   // Offset:   28 Size:     4 [unused]
  float4 fTestColor;                 // Offset:   32 Size:    16 [unused]
  float4 fDummyColor;                // Offset:   48 Size:    16 [unused]
};

//CBUpdateBufferFromMesh : 955.shdr.src
struct CBUpdateBufferFromMesh {

  uint iVertexNum;                   // Offset:    0 Size:     4
  uint iVertexBufferOffset;          // Offset:    4 Size:     4
  uint iVertexStride;                // Offset:    8 Size:     4
  uint iVertexBaseOffset;            // Offset:   12 Size:     4
  uint4 iInputLayoutOffset0;         // Offset:   16 Size:    16
  uint4 iInputLayoutOffset1;         // Offset:   32 Size:    16
  uint4 iInputLayoutOffset2;         // Offset:   48 Size:    16 [unused]
};

//CBUpdateBufferFromMeshConditions2 : 955.shdr.src
struct CBUpdateBufferFromMeshConditions2 {

  uint iConditions2TargetNum;        // Offset:    0 Size:     4
  // align: 4 to 16
  ubyte align0[12];
  float4 fConditions2TargetParam[16];// Offset:   16 Size:   256
  float4 fConditions2TargetParam2[16];// Offset:  272 Size:   256
};

//CBLuminance : 903.shdr.src
struct CBLuminance {

  uint iView;                        // Offset:    0 Size:     4
  float fKeyValue;                   // Offset:    4 Size:     4 [unused]
  bool bClearHistory;                // Offset:    8 Size:     4 [unused]
  float fLuminanceLogScale;          // Offset:   12 Size:     4 [unused]
  float fLuminanceLogBias;           // Offset:   16 Size:     4 [unused]
  float fLuminanceExpScale;          // Offset:   20 Size:     4 [unused]
  float fLuminanceExpBias;           // Offset:   24 Size:     4 [unused]
  float fWhiteRange;                 // Offset:   28 Size:     4 [unused]
  float fExposureValue;              // Offset:   32 Size:     4
  float fDarkSensitivity;            // Offset:   36 Size:     4 [unused]
  float fLightSensitivity;           // Offset:   40 Size:     4 [unused]
  float fDarkAdaptationLimit;        // Offset:   44 Size:     4 [unused]
  float fLightAdaptationLimit;       // Offset:   48 Size:     4 [unused]
};

//CBSHDiffuse : 6972.shdr.src
struct CBSHDiffuse {

  float fSHDiffuseScale;             // Offset:    0 Size:     4
  float fSHDiffuseScaleInv;          // Offset:    4 Size:     4
  bool bSHDiffuseUpsampling;         // Offset:    8 Size:     4 [unused]
};

//CBMhMaterialVfxWaveLocal__disclosure : 10254.shdr.src
struct CBMhMaterialVfxWaveLocal__disclosure {

  float fConstant;                   // Offset:    0 Size:     4
  // align: 4 to 16
  ubyte align0[12];
  float4 fUVTransformA;              // Offset:   16 Size:    16
  float4 fUVTransformB;              // Offset:   32 Size:    16 [unused]
  float4 fBaseMapFactor__uiColor;    // Offset:   48 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   64 Size:    12 [unused]
  // align: 76 to 80
  ubyte align1[4];
  float3 fEmissiveBlendColor__uiColor;// Offset:   80 Size:    12 [unused]
  float fEmissiveBlendColorBlend__uiUNorm;// Offset:   92 Size:     4 [unused]
  float fDetailNormalBlend__uiUNorm; // Offset:   96 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:  100 Size:     4 [unused]
  float fDisplacementLevel;          // Offset:  104 Size:     4
  bool fWriteSplash;                 // Offset:  108 Size:     4 [unused]
  float fSplashAngle;                // Offset:  112 Size:     4 [unused]
  // align: 116 to 128
  ubyte align2[12];
  float4 fSplashColor__uiColor;      // Offset:  128 Size:    16 [unused]
  float fSplashLevel__uiUNorm;       // Offset:  144 Size:     4 [unused]
  float fSplashOffsetX;              // Offset:  148 Size:     4 [unused]
  bool fWriteShadow;                 // Offset:  152 Size:     4 [unused]
  // align: 156 to 160
  ubyte align3[4];
  float4 fShadowColor__uiColor;      // Offset:  160 Size:    16 [unused]
  float fShadowLevel__uiUNorm;       // Offset:  176 Size:     4 [unused]
  float fNoiseLength__uiUNorm;       // Offset:  180 Size:     4 [unused]
  float fNoiseDetail__uiUNorm;       // Offset:  184 Size:     4 [unused]
  float fSplashSpeed;                // Offset:  188 Size:     4 [unused]
};

//CBMhMaterialVfxWave : 10254.shdr.src
struct CBMhMaterialVfxWave {

  uint iPointNum;                    // Offset:    0 Size:     4
  float fViewTime;                   // Offset:    4 Size:     4 [unused]
};

//CB_PlantOnSurface : 10260.shdr.src
struct CB_PlantOnSurface {

  float3 fScale;                     // Offset:    0 Size:    12
  uint iNumPerTriangle;              // Offset:   12 Size:     4
  uint iTriangleNum;                 // Offset:   16 Size:     4 [unused]
  uint iIndexOffset;                 // Offset:   20 Size:     4
  float fRotRandomize;               // Offset:   24 Size:     4
  float fDirRandomize;               // Offset:   28 Size:     4
  float fScaleRandomize;             // Offset:   32 Size:     4
};

//CBMhSkyGBuffer : 10267.shdr.src
struct CBMhSkyGBuffer {

  uint iSkyGBufferId;                // Offset:    0 Size:     4
};

//CBPrimGpuOcclusionVoxelSystem : 4681.shdr.src
struct CBPrimGpuOcclusionVoxelSystem {

  float3 gActiveOcclusionAreaMinPos; // Offset:    0 Size:    12
  float gActiveOcclusionAreaSize;    // Offset:   12 Size:     4 [unused]
  float gActiveOcclusionAreaSizeInv; // Offset:   16 Size:     4
  uint gActiveOcclusionAreaEdgeCellNum;// Offset:   20 Size:     4
  // align: 24 to 32
  ubyte align0[8];
  float3 gOcclusionAreaMinPos;       // Offset:   32 Size:    12
  uint gOcclusionVoxelInfoNum;       // Offset:   44 Size:     4 [unused]
  float gOcclusionVoxelSize;         // Offset:   48 Size:     4
};

//CBSnowFieldMaterial : 9165.shdr.src
struct CBSnowFieldMaterial {

  float4 fBaseMapFactor;             // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor;         // Offset:   16 Size:    12 [unused]
  float fRoughness;                  // Offset:   28 Size:     4 [unused]
  float fMetalic;                    // Offset:   32 Size:     4 [unused]
  float fTranslucency;               // Offset:   36 Size:     4 [unused]
  float fDetailNormalBlend;          // Offset:   40 Size:     4 [unused]
  // align: 44 to 48
  ubyte align0[4];
  float4 fUVTransformA;              // Offset:   48 Size:    16 [unused]
  float4 fUVTransformB;              // Offset:   64 Size:    16 [unused]
  float4 fUVTransformUnder;          // Offset:   80 Size:    16 [unused]
  float fVolumeBlend;                // Offset:   96 Size:     4
  float fDecalMaskAlphaRef;          // Offset:  100 Size:     4 [unused]
  bool bHeightMapClip;               // Offset:  104 Size:     4
  float fHeightMapClipRef;           // Offset:  108 Size:     4
  float fUVRotationSin;              // Offset:  112 Size:     4 [unused]
  float fUVRotationCos;              // Offset:  116 Size:     4 [unused]
  float2 fUnderTextureBlendFactor;   // Offset:  120 Size:     8 [unused]
};

//CBConstantHaltonSequence : 9984.shdr.src
struct CBConstantHaltonSequence {

  float4 fHaltonSequence[64];        // Offset:    0 Size:  1024
};

//CBCapsuleAO : 9752.shdr.src
struct CBCapsuleAO {

  float4 fLightDirectionXYZAngle;    // Offset:    0 Size:    16
  float fDistanceFallCoef;           // Offset:   16 Size:     4
  float fCapsuleAOIntensity;         // Offset:   20 Size:     4
  uint uGeometryNum;                 // Offset:   24 Size:     4
  uint uLightChannelMask;            // Offset:   28 Size:     4
};

//CBCapsuleAOGeomParam : 9752.shdr.src
struct CBCapsuleAOGeomParam {

  struct CBCapsuleAOGeomParam_AOGeometryParam
  {
      float4 ppdlVectorLengthSqInv;  // Offset:    0
      float4 StPointVecRadius;       // Offset:   16
      float4 LineVecMaxArea;         // Offset:   32
  } InAOGeometryParam[256];          // Offset:    0 Size: 12288
};

//CBMhMaterialFlowLavaLocal__disclosure : 10325.shdr.src
struct CBMhMaterialFlowLavaLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fDetailNormalBlend__uiUNorm; // Offset:   48 Size:     4 [unused]
  // align: 52 to 64
  ubyte align0[12];
  float4 fUVTransformA;              // Offset:   64 Size:    16
  float4 fUVTransformB;              // Offset:   80 Size:    16 [unused]
  float fTranslucency__uiUNorm;      // Offset:   96 Size:     4 [unused]
  float3 fEmissiveBlendColor__uiColor;// Offset:  100 Size:    12 [unused]
  float fEmissiveBlendColorBlend__uiUNorm;// Offset:  112 Size:     4 [unused]
  float3 fEmissiveBlendRimParam;     // Offset:  116 Size:    12 [unused]
  float3 fFlowDirDir__uiDirection;   // Offset:  128 Size:    12
  float fFlowDirUVPhaseShift__uiUNorm;// Offset:  140 Size:     4
  bool bFlowDirLocalSpace;           // Offset:  144 Size:     4
  float fFlowControl;                // Offset:  148 Size:     4
  float2 fEmitControl__uiUNorm;      // Offset:  152 Size:     8 [unused]
};

//CBSSLR : 9987.shdr.src
struct CBSSLR {

  float4 fSSLREffectReflectionParam; // Offset:    0 Size:    16 [unused]
  int iSSLRReductionLevel;           // Offset:   16 Size:     4 [unused]
  float fSSLRFactor;                 // Offset:   20 Size:     4 [unused]
  float fSSLRScale;                  // Offset:   24 Size:     4 [unused]
  uint iLoopCount;                   // Offset:   28 Size:     4 [unused]
  float fEliminateDepth;             // Offset:   32 Size:     4 [unused]
  float fDitherRadius;               // Offset:   36 Size:     4 [unused]
  float fImportanceBias;             // Offset:   40 Size:     4 [unused]
  float fMipScale;                   // Offset:   44 Size:     4
  float fMipBias;                    // Offset:   48 Size:     4
  float fAccurateThreshold;          // Offset:   52 Size:     4
  float fEnvMapIntensity;            // Offset:   56 Size:     4
  float fSSLRIntensity;              // Offset:   60 Size:     4
  float fSSLREdgeAttenRate;          // Offset:   64 Size:     4
  float fSSLRDepthEliminateRate;     // Offset:   68 Size:     4 [unused]
  float fSSLRLightProbeIntensity;    // Offset:   72 Size:     4
  int iSSLRMip0CountThreshold;       // Offset:   76 Size:     4 [unused]
  bool bSSLRTemporalReset;           // Offset:   80 Size:     4
};

//CBMhMaterialVfxDebufBodyLocal__disclosure : 1084.shdr.src
struct CBMhMaterialVfxDebufBodyLocal__disclosure {

  float4 fUVTransformA;              // Offset:    0 Size:    16 [unused]
  float4 fBaseMapFactor__uiColor;    // Offset:   16 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   32 Size:    12 [unused]
  float fNormalFactor__uiUNorm;      // Offset:   44 Size:     4 [unused]
  float fMetalic__uiUNorm;           // Offset:   48 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   52 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   56 Size:     4 [unused]
  float fSpecularFactor;             // Offset:   60 Size:     4 [unused]
  float fOpacityFactor;              // Offset:   64 Size:     4 [unused]
  float fRimOpacityPow;              // Offset:   68 Size:     4 [unused]
  float fVolumeBlend__uiSNorm;       // Offset:   72 Size:     4 [unused]
  // align: 76 to 80
  ubyte align0[4];
  float3 fFlowDir__uiDirection;      // Offset:   80 Size:    12 [unused]
  float fFlowStrength;               // Offset:   92 Size:     4 [unused]
  float fFlowSpeed;                  // Offset:   96 Size:     4 [unused]
  float fDiffuseChroma__uiUNorm;     // Offset:  100 Size:     4 [unused]
  float fSpecularChroma__uiUNorm;    // Offset:  104 Size:     4 [unused]
  float fInnerOffsetScale;           // Offset:  108 Size:     4
  float fVelocityAttn;               // Offset:  112 Size:     4 [unused]
  float fNormalDecalBlend__uiUNorm;  // Offset:  116 Size:     4 [unused]
};

//CBLightShaft : 2569.shdr.src
struct CBLightShaft {

  row_major float4x4 fModelMat;      // Offset:    0 Size:    64
  row_major float4x4 fInvModelMat;   // Offset:   64 Size:    64
  float fExtinctionCoef;             // Offset:  128 Size:     4
  float fRayleighCoef;               // Offset:  132 Size:     4
  float fMieCoef;                    // Offset:  136 Size:     4
  float fZAttnStart;                 // Offset:  140 Size:     4 [unused]
  float fZAttnEnd;                   // Offset:  144 Size:     4 [unused]
  uint iFlags;                       // Offset:  148 Size:     4
  float fTransparency;               // Offset:  152 Size:     4 [unused]
  float fReductionScale;             // Offset:  156 Size:     4
  float3 fMiePhaseK;                 // Offset:  160 Size:    12
};

//CBMhSky2PS : 8095.shdr.src
struct CBMhSky2PS {

  float3 fSkyGlobalIntensity;        // Offset:    0 Size:    12
  // align: 12 to 16
  ubyte align0[4];
  float4 fSkyStarrySkyMapFactor;     // Offset:   16 Size:    16
  float2 fSkySunUVOffset;            // Offset:   32 Size:     8
  // align: 40 to 48
  ubyte align1[8];
  float3 fSkyWaterReflectionFactor;  // Offset:   48 Size:    12
  float fSkyBlend;                   // Offset:   60 Size:     4
  bool bSkyFog;                      // Offset:   64 Size:     4
  float fSkyFogBlend;                // Offset:   68 Size:     4
  bool bSkyDeGamma;                  // Offset:   72 Size:     4
  float fGamma;                      // Offset:   76 Size:     4
  uint2 iSkyAddress;                 // Offset:   80 Size:     8 [unused]
  float fSkySunlightMaskAlpha;       // Offset:   88 Size:     4
  // align: 92 to 96
  ubyte align2[4];
  float2 fSkySunlightMaskInverseSize;// Offset:   96 Size:     8
  float2 fSkyTopCloudUVScale0;       // Offset:  104 Size:     8
  float2 fSkyTopCloudUVScale1;       // Offset:  112 Size:     8
  // align: 120 to 128
  ubyte align3[8];
  float3 fSkySunlightSkyColor;       // Offset:  128 Size:    12
  // align: 140 to 144
  ubyte align4[4];
  float2 fSkySunlightSkyMaskInverseSize;// Offset:  144 Size:     8
  float fSkyStarThreshold;           // Offset:  152 Size:     4
  float fSkyStarPower;               // Offset:  156 Size:     4
  float fSkyCloudContrast;           // Offset:  160 Size:     4
  float fSkyCurveMapTexelHeight;     // Offset:  164 Size:     4
  // align: 168 to 176
  ubyte align5[8];
  float4 fSkyBaseMapFactor;          // Offset:  176 Size:    16
  float2 fSkyBaseSideCloudUVOffset;  // Offset:  192 Size:     8
  float2 fSkyBaseTopCloudUVOffset0;  // Offset:  200 Size:     8
  float2 fSkyBaseTopCloudUVOffset1;  // Offset:  208 Size:     8
  // align: 216 to 224
  ubyte align6[8];
  float2 fSkyCloudSpeeds[4];         // Offset:  224 Size:    56
  // align: 280 to 288
  ubyte align7[8];
  float4 fSkySunCloudHighlightColors[4];// Offset:  288 Size:    64
  float4 fSkySunCloudShadowColors[4];// Offset:  352 Size:    64
  float4 fSkyMiddleCloudHighlightColors[4];// Offset:  416 Size:    64
  float4 fSkyMiddleCloudShadowColors[4];// Offset:  480 Size:    64
  float4 fSkyBackgroundCloudHighlightColors[4];// Offset:  544 Size:    64
  float4 fSkyBackgroundCloudShadowColors[4];// Offset:  608 Size:    64
  float fSkyCloudAlpha[4];           // Offset:  672 Size:    52
  // align: 724 to 736
  ubyte align8[12];
  float4 fSkyBlendBaseMapFactor;     // Offset:  736 Size:    16
  float2 fSkyBlendSideCloudUVOffset; // Offset:  752 Size:     8
  float2 fSkyBlendTopCloudUVOffset0; // Offset:  760 Size:     8
  float2 fSkyBlendTopCloudUVOffset1; // Offset:  768 Size:     8
  // align: 776 to 784
  ubyte align9[8];
  float2 fSkyBlendCloudSpeeds[4];    // Offset:  784 Size:    56
  // align: 840 to 848
  ubyte align10[8];
  float4 fSkyBlendSunCloudHighlightColors[4];// Offset:  848 Size:    64
  float4 fSkyBlendSunCloudShadowColors[4];// Offset:  912 Size:    64
  float4 fSkyBlendMiddleCloudHighlightColors[4];// Offset:  976 Size:    64
  float4 fSkyBlendMiddleCloudShadowColors[4];// Offset: 1040 Size:    64
  float4 fSkyBlendBackgroundCloudHighlightColors[4];// Offset: 1104 Size:    64
  float4 fSkyBlendBackgroundCloudShadowColors[4];// Offset: 1168 Size:    64
  float fSkyBlendCloudAlpha[4];      // Offset: 1232 Size:    52
};

//CBPrimBufferDescription : 9979.shdr.src
struct CBPrimBufferDescription {

  uint iPrimVertexBufferOffset;      // Offset:    0 Size:     4 [unused]
  uint iPrimTotalVertexNum;          // Offset:    4 Size:     4 [unused]
  uint iPrimRequestNum;              // Offset:    8 Size:     4
};

//CBPrimitiveEx : 954.shdr.src
struct CBPrimitiveEx {

  float4 fPrimParamEx0;              // Offset:    0 Size:    16
  float4 fPrimParamEx1;              // Offset:   16 Size:    16 [unused]
  float4 fPrimParamEx2;              // Offset:   32 Size:    16 [unused]
  uint4 iPrimParamEx3;               // Offset:   48 Size:    16 [unused]
};

//CBPrimitivePick : 9686.shdr.src
struct CBPrimitivePick {

  uint2 iPrimAddress;                // Offset:    0 Size:     8
};

//CBComputeSkinning : 7532.shdr.src
struct CBComputeSkinning {

  uint iSrcStride;                   // Offset:    0 Size:     4
  uint iSrcOffset;                   // Offset:    4 Size:     4
  uint iSrcPositionOffset;           // Offset:    8 Size:     4
  uint iSrcNormalOffset;             // Offset:   12 Size:     4
  uint iSrcWeightsOffset;            // Offset:   16 Size:     4
  uint iSrcJointsOffset;             // Offset:   20 Size:     4
  uint iDestStride;                  // Offset:   24 Size:     4
  uint iDestOffset;                  // Offset:   28 Size:     4
  uint iDestNormalStride;            // Offset:   32 Size:     4
  uint iDestNormalOffset;            // Offset:   36 Size:     4
  uint iVertexCount;                 // Offset:   40 Size:     4
  uint iInstanceID;                  // Offset:   44 Size:     4 [unused]
};

//CBCubeBlend : 685.shdr.src
struct CBCubeBlend {

  float fCubeBlendRate;              // Offset:    0 Size:     4
};

//CBWaterWave : 9116.shdr.src
struct CBWaterWave {

  row_major float4x4 fWorldMat;      // Offset:    0 Size:    64 [unused]
  float2 fHeightMapSize;             // Offset:   64 Size:     8 [unused]
  float2 fInvHeightMapSize;          // Offset:   72 Size:     8
  float2 fMeshCenter;                // Offset:   80 Size:     8 [unused]
  float fEdgesPerScreenHeight;       // Offset:   88 Size:     4 [unused]
  float fNoiseWaveAmplitude;         // Offset:   92 Size:     4 [unused]
  float fNoiseWaveDensity;           // Offset:   96 Size:     4 [unused]
  float fNoiseWaveSpeed;             // Offset:  100 Size:     4 [unused]
  float2 fOverlapRatio;              // Offset:  104 Size:     8 [unused]
  float2 fNoiseWaveBorderX;          // Offset:  112 Size:     8 [unused]
  float2 fNoiseWaveBorderZ;          // Offset:  120 Size:     8 [unused]
  float2 fDistanceBetweenVertices;   // Offset:  128 Size:     8 [unused]
  float fWaveDensity;                // Offset:  136 Size:     4
  float fDetailWaveDensity;          // Offset:  140 Size:     4
  float2 fMeshVerticesDistance;      // Offset:  144 Size:     8 [unused]
  float2 fMaxTexcoord;               // Offset:  152 Size:     8 [unused]
  float fElapsedTimeSec;             // Offset:  160 Size:     4
  int iDebugViewType;                // Offset:  164 Size:     4 [unused]
  bool bIsAnimating;                 // Offset:  168 Size:     4 [unused]
  // align: 172 to 176
  ubyte align0[4];
  float3 fWorldScale;                // Offset:  176 Size:    12 [unused]
  // align: 188 to 192
  ubyte align1[4];
  float2 fBoundingYMinMax;           // Offset:  192 Size:     8 [unused]
  bool bCullingByFrustum;            // Offset:  200 Size:     4 [unused]
  float fFrustumCullAcceptXZ;        // Offset:  204 Size:     4 [unused]
  float fCircleCullDistanceSq;       // Offset:  208 Size:     4 [unused]
};

//CBSystemSnow : 9892.shdr.src
struct CBSystemSnow {

  bool bSnowFieldEnabled;            // Offset:    0 Size:     4
  uint iSnowFieldDivisionNum;        // Offset:    4 Size:     4 [unused]
  // align: 8 to 16
  ubyte align0[8];
  float4 fSnowHeightRegion;          // Offset:   16 Size:    16
  float4 fSnowHeightMapSize;         // Offset:   32 Size:    16 [unused]
  float4 fSnowHeightMinYRangeY;      // Offset:   48 Size:    16
  float fNormalBlendRate;            // Offset:   64 Size:     4 [unused]
  float fMaxHeightDent;              // Offset:   68 Size:     4
  float fMaxHeightBump;              // Offset:   72 Size:     4
  float fShovelEdgeBlendRate;        // Offset:   76 Size:     4 [unused]
};

//CBSnowField4Geometry : 567.shdr.src
struct CBSnowField4Geometry {

  float3 fWorldPositionMin;          // Offset:    0 Size:    12
  // align: 12 to 16
  ubyte align0[4];
  float3 fWorldPositionMax;          // Offset:   16 Size:    12
  // align: 28 to 32
  ubyte align1[4];
  float4 fGeomWorldRange;            // Offset:   32 Size:    16
  float2 fGeomTileSize;              // Offset:   48 Size:     8
  uint2 iGeomTileCount;              // Offset:   56 Size:     8 [unused]
  float fShovelCornerBlendRate;      // Offset:   64 Size:     4
  float fEdgeHeightBlendRate;        // Offset:   68 Size:     4 [unused]
  float fEdgesPerScreenHeight;       // Offset:   72 Size:     4 [unused]
};

//CBWorkaround : 564.shdr.src
struct CBWorkaround {

  uint iWorkaroundConstant;          // Offset:    0 Size:     4
};

//CBSnowField2Material : 665.shdr.src
struct CBSnowField2Material {

  float4 fBaseMapFactor;             // Offset:    0 Size:    16
  float3 fEmissiveMapFactor;         // Offset:   16 Size:    12
  float fRoughness;                  // Offset:   28 Size:     4
  float fMetalic;                    // Offset:   32 Size:     4
  float fTranslucency;               // Offset:   36 Size:     4
  float fDetailNormalBlend;          // Offset:   40 Size:     4
  // align: 44 to 48
  ubyte align0[4];
  float4 fUVTransformA;              // Offset:   48 Size:    16
  float4 fUVTransformB;              // Offset:   64 Size:    16
  float4 fUVTransformUnder;          // Offset:   80 Size:    16
  float fVolumeBlend;                // Offset:   96 Size:     4
  float fShovelCornerBlendRate;      // Offset:  100 Size:     4
  float fDecalMaskAlphaRef;          // Offset:  104 Size:     4
  bool bHeightMapClip;               // Offset:  108 Size:     4
  float fHeightMapClipRef;           // Offset:  112 Size:     4
  float fUVRotationSin;              // Offset:  116 Size:     4
  float fUVRotationCos;              // Offset:  120 Size:     4
  // align: 124 to 128
  ubyte align1[4];
  float2 fUnderTextureBlendFactor;   // Offset:  128 Size:     8
  float fSnowFieldDitherRate;        // Offset:  136 Size:     4 [unused]
};

//CBMhMaterialVfxDistDispWLocal__disclosure : 1214.shdr.src
struct CBMhMaterialVfxDistDispWLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fCubeMapFactor__uiColor;    // Offset:   16 Size:    12 [unused]
  // align: 28 to 32
  ubyte align0[4];
  float3 fDistortionFactor__uiColor; // Offset:   32 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   44 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   48 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   52 Size:     4 [unused]
  // align: 56 to 64
  ubyte align1[8];
  float4 fUVTransformA;              // Offset:   64 Size:    16 [unused]
  float4 fUVTransformB;              // Offset:   80 Size:    16
  float fDisplacementFactor;         // Offset:   96 Size:     4
  float fFlow_Speed;                 // Offset:  100 Size:     4 [unused]
  float fFlow_Strength;              // Offset:  104 Size:     4 [unused]
  float fNormalFactor__uiUNorm;      // Offset:  108 Size:     4 [unused]
  float fOpacityFactor;              // Offset:  112 Size:     4 [unused]
  float fVolumeBlend__uiSNorm;       // Offset:  116 Size:     4 [unused]
  float fDistortionAngle;            // Offset:  120 Size:     4 [unused]
  float fDistortion;                 // Offset:  124 Size:     4 [unused]
  float fSpecularFactor;             // Offset:  128 Size:     4 [unused]
  float fDiffuseChroma__uiUNorm;     // Offset:  132 Size:     4 [unused]
  float fSpecularChroma__uiUNorm;    // Offset:  136 Size:     4 [unused]
  bool bRefractionEnable;            // Offset:  140 Size:     4 [unused]
  bool bVolumeBlendEnable;           // Offset:  144 Size:     4 [unused]
  float3 fEmissiveBlendColor__uiColor;// Offset:  148 Size:    12 [unused]
  float fEmissiveBlendColorBlend__uiUNorm;// Offset:  160 Size:     4 [unused]
  float3 fEmissiveBlendRimParam;     // Offset:  164 Size:    12 [unused]
  float fInnerOffsetScale;           // Offset:  176 Size:     4
  float fDisplacementFactorW;        // Offset:  180 Size:     4
  // align: 184 to 192
  ubyte align2[8];
  float3 fMudDir__uiDirection;       // Offset:  192 Size:    12
  bool bWorldPosOffsetScale;         // Offset:  204 Size:     4
  float fVelocityAttn;               // Offset:  208 Size:     4 [unused]
  float fNormalDecalBlend__uiUNorm;  // Offset:  212 Size:     4 [unused]
};

//CBBloom : 6755.shdr.src
struct CBBloom {

  float fBloomThreshold;             // Offset:    0 Size:     4
  float fBloomRenormalize;           // Offset:    4 Size:     4
  bool bGamutSrgb;                   // Offset:    8 Size:     4
  // align: 12 to 16
  ubyte align0[4];
  float4 fDirtColor;                 // Offset:   16 Size:    16 [unused]
};

//CBFilter : 9668.shdr.src
struct CBFilter {

  float4 fFilterRegion;              // Offset:    0 Size:    16
  float fFilterMipLevel;             // Offset:   16 Size:     4
};

//CBGUIGlobal : 8867.shdr.src
struct CBGUIGlobal {

  row_major float4x4 fGUIWMatrix;    // Offset:    0 Size:    64 [unused]
  row_major float4x4 fGUIWMatrixPF;  // Offset:   64 Size:    64 [unused]
  row_major float4x4 fGUIMatrix;     // Offset:  128 Size:    64 [unused]
  row_major float4x4 fGUIMatrixPF;   // Offset:  192 Size:    64 [unused]
  float4 fGUIStaticColor;            // Offset:  256 Size:    16 [unused]
  float4 fGUIColorScale;             // Offset:  272 Size:    16
  float4 fGUIAmbientColor;           // Offset:  288 Size:    16
  float4 fGUISaturationParam;        // Offset:  304 Size:    16
  float4 fGUIAlphaMaskRect;          // Offset:  320 Size:    16 [unused]
  float4 fGUIFontFilter;             // Offset:  336 Size:    16 [unused]
  float4 fGUIUVClamp;                // Offset:  352 Size:    16
  float2 fGUIInvTextureSize;         // Offset:  368 Size:     8 [unused]
  float2 fGUIInvTextureSize2;        // Offset:  376 Size:     8 [unused]
  float fGUIZBias;                   // Offset:  384 Size:     4 [unused]
  uint iGUIShaderState;              // Offset:  388 Size:     4
};

//CBGUIGBuffer : 1225.shdr.src
struct CBGUIGBuffer {

  uint iGUIGBufferLightChannel;      // Offset:    0 Size:     4
  float3 fGUIGBufferEmissiveColor;   // Offset:    4 Size:    12
  float3 fGUIGBufferParam;           // Offset:   16 Size:    12
};

//CBWaterModel : 544.shdr.src
struct CBWaterModel {

  row_major float4x4 fMWorldViewProjMat;// Offset:    0 Size:    64
  row_major float4x4 fMWorldMat;     // Offset:   64 Size:    64
};

//CBMhMaterialEM105Local__disclosure : 188.shdr.src
struct CBMhMaterialEM105Local__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  bool bBaseColorEmissive;           // Offset:   52 Size:     4 [unused]
  float2 fPaintUVTile;               // Offset:   56 Size:     8 [unused]
  float fAddNormalBlend__uiUNorm;    // Offset:   64 Size:     4 [unused]
  // align: 68 to 80
  ubyte align0[12];
  float4 fAddNormalMaskA__uiSNorm;   // Offset:   80 Size:    16 [unused]
  float4 fAddNormalMaskB__uiSNorm;   // Offset:   96 Size:    16 [unused]
  float fAddNormalMaskC__uiUNorm;    // Offset:  112 Size:     4 [unused]
  float fAddNormalMaskD__uiUNorm;    // Offset:  116 Size:     4 [unused]
  bool bBackFaceShading;             // Offset:  120 Size:     4 [unused]
  bool bBackFaceNormalFilp;          // Offset:  124 Size:     4 [unused]
  float3 fKizuColor__uiColor;        // Offset:  128 Size:    12 [unused]
  // align: 140 to 144
  ubyte align1[4];
  float2 fKizuUVOffset__uiUNorm;     // Offset:  144 Size:     8 [unused]
  float fKizuMultiply;               // Offset:  152 Size:     4 [unused]
  bool bLegendary;                   // Offset:  156 Size:     4 [unused]
  float4 fLegendColor__uiColor;      // Offset:  160 Size:    16 [unused]
  float2 fLegendMetalMask__uiUNorm;  // Offset:  176 Size:     8 [unused]
  float fLegendRoughness;            // Offset:  184 Size:     4 [unused]
  // align: 188 to 192
  ubyte align2[4];
  float3 fLegendFilm__uiUNorm;       // Offset:  192 Size:    12 [unused]
  float fLegendSSSMask__uiUNorm;     // Offset:  204 Size:     4 [unused]
  float3 fLegendHSV__uiSNorm;        // Offset:  208 Size:    12 [unused]
  float fLegendFilmIOR__uiUNorm;     // Offset:  220 Size:     4 [unused]
  float fPartsMaskA__uiUNorm;        // Offset:  224 Size:     4 [unused]
  float fPartsMaskB__uiUNorm;        // Offset:  228 Size:     4 [unused]
  float fPartsMaskC__uiUNorm;        // Offset:  232 Size:     4 [unused]
  float fPartsMaskD__uiUNorm;        // Offset:  236 Size:     4 [unused]
  float fPartsMaskX__uiUNorm;        // Offset:  240 Size:     4 [unused]
  float fPartsMaskY__uiUNorm;        // Offset:  244 Size:     4 [unused]
  float fPartsMaskZ__uiUNorm;        // Offset:  248 Size:     4 [unused]
  float fPartsMaskW__uiUNorm;        // Offset:  252 Size:     4 [unused]
  bool bUseOffset;                   // Offset:  256 Size:     4
  float fOffsetScale;                // Offset:  260 Size:     4
  bool bTranslucentOffset;           // Offset:  264 Size:     4
  bool bAntiSSSEmit;                 // Offset:  268 Size:     4 [unused]
  float3 fFlowDirDir__uiDirection;   // Offset:  272 Size:    12 [unused]
  // align: 284 to 288
  ubyte align3[4];
  float4 fFlowControl__uiUNorm;      // Offset:  288 Size:    16 [unused]
  float fFlowTile;                   // Offset:  304 Size:     4 [unused]
  // align: 308 to 320
  ubyte align4[12];
  float4 fFlowColor__uiColor;        // Offset:  320 Size:    16 [unused]
  float4 fFlowMatControl__uiUNorm;   // Offset:  336 Size:    16 [unused]
  float4 fMaskBlend__uiUNorm;        // Offset:  352 Size:    16 [unused]
  float2 fMaskBlend_A__uiUNorm;      // Offset:  368 Size:     8 [unused]
  float2 fMaskBlend_B__uiUNorm;      // Offset:  376 Size:     8 [unused]
  float fFilmThickness__uiUNorm;     // Offset:  384 Size:     4 [unused]
  float fFilmBlend__uiUNorm;         // Offset:  388 Size:     4 [unused]
  float fFilmIOR__uiUNorm;           // Offset:  392 Size:     4 [unused]
  float fRefraction__uiUNorm;        // Offset:  396 Size:     4 [unused]
  float fRefractionBlend__uiUNorm;   // Offset:  400 Size:     4 [unused]
  float fVPushScale;                 // Offset:  404 Size:     4
  float fVPushWave;                  // Offset:  408 Size:     4
  float fVPushSpeed;                 // Offset:  412 Size:     4
  float3 fVpivot;                    // Offset:  416 Size:    12
  float fInnerOffsetScale;           // Offset:  428 Size:     4
  float fVolumeBlend__uiSNorm;       // Offset:  432 Size:     4 [unused]
  // align: 436 to 448
  ubyte align5[12];
  float4 fDetailEmissiveControl;     // Offset:  448 Size:    16 [unused]
  float fFinWave;                    // Offset:  464 Size:     4 [unused]
  float fFinSpeed;                   // Offset:  468 Size:     4 [unused]
  // align: 472 to 480
  ubyte align6[8];
  float3 fFinColor__uiColor;         // Offset:  480 Size:    12 [unused]
  float fAnimEmitMin;                // Offset:  492 Size:     4 [unused]
  float fAnimEmitSpeed;              // Offset:  496 Size:     4 [unused]
  bool bUseWaveEmit;                 // Offset:  500 Size:     4 [unused]
  float fAnimEmitWave;               // Offset:  504 Size:     4 [unused]
  float fRimAlphaPower__uiSNorm;     // Offset:  508 Size:     4 [unused]
  float fRimTranslucency__uiUNorm;   // Offset:  512 Size:     4 [unused]
  float fRimNormal__uiUNorm;         // Offset:  516 Size:     4 [unused]
  float fSnowUVTile;                 // Offset:  520 Size:     4 [unused]
  // align: 524 to 528
  ubyte align7[4];
  float4 fSnowBlendColor__uiColor;   // Offset:  528 Size:    16
  float4 fSnowMatControl__uiUNorm;   // Offset:  544 Size:    16 [unused]
  float fMaterialSnowBlendB;         // Offset:  560 Size:     4
  // align: 564 to 576
  ubyte align8[12];
  float4 fSnowControl;               // Offset:  576 Size:    16
};

//CBSystem : 9807.shdr.src
struct CBSystem {

  uint4 iRegion;                     // Offset:    0 Size:    16 [unused]
  float fSourceMipLevel;             // Offset:   16 Size:     4 [unused]
  float fGammaCorrect;               // Offset:   20 Size:     4 [unused]
  float fGammaCorrectEx;             // Offset:   24 Size:     4
};

//CBVRGaussian : 1279.shdr.src
struct CBVRGaussian {

  float4 fOffsets;                   // Offset:    0 Size:    16
  float fWeights[5];                 // Offset:   16 Size:    68
  float fEdgeSharpness;              // Offset:   84 Size:     4
};

//CB_DL : 1289.shdr.src
struct CB_DL {

  float3 time;                       // Offset:    0 Size:    12 [unused]
  uint customUInt;                   // Offset:   12 Size:     4 [unused]
  float4 screenSize;                 // Offset:   16 Size:    16
  float4x4 viewMatrix;               // Offset:   32 Size:    64 [unused]
  float4x4 projMatrix;               // Offset:   96 Size:    64 [unused]
  float4x4 viewProjMatrix;           // Offset:  160 Size:    64 [unused]
  float4x4 crViewProjMatrix;         // Offset:  224 Size:    64 [unused]
  float4x4 prevViewProjMatrix;       // Offset:  288 Size:    64 [unused]
};

//CBSnowField3Geometry : 406.shdr.src
struct CBSnowField3Geometry {

  float3 fWorldPositionMin;          // Offset:    0 Size:    12
  // align: 12 to 16
  ubyte align0[4];
  float3 fWorldPositionMax;          // Offset:   16 Size:    12
  float fShovelCornerBlendRate;      // Offset:   28 Size:     4
  float4 fSDRange[10];               // Offset:   32 Size:   160
  uint iSDSubdiv;                    // Offset:  192 Size:     4
  uint iSDSubdivLevel0;              // Offset:  196 Size:     4
  float2 fSDSubdiv;                  // Offset:  200 Size:     8
  float2 fSDSubdivLevel0;            // Offset:  208 Size:     8
  uint iInnerSubdiv;                 // Offset:  216 Size:     4 [unused]
  // align: 220 to 224
  ubyte align1[4];
  float2 fInnerSubdiv;               // Offset:  224 Size:     8 [unused]
  float fEdgeHeightBlendRate;        // Offset:  232 Size:     4 [unused]
  float fEdgesPerScreenHeight;       // Offset:  236 Size:     4 [unused]
};

//CBShapeMesh : 9990.shdr.src
struct CBShapeMesh {

  uint iVertexNum;                   // Offset:    0 Size:     4
  uint iVertexOffset;                // Offset:    4 Size:     4
  uint iVertexStride;                // Offset:    8 Size:     4
  uint iPositionOffset;              // Offset:   12 Size:     4
  uint iNormalOffset;                // Offset:   16 Size:     4
  uint iTangentOffset;               // Offset:   20 Size:     4
  uint iWeightsOffset;               // Offset:   24 Size:     4
  uint iJointsOffset;                // Offset:   28 Size:     4
  uint iOutputVertexOffset;          // Offset:   32 Size:     4
};

//CBNormalRecalc : 1309.shdr.src
struct CBNormalRecalc {

  uint iIBOffset;                    // Offset:    0 Size:     4
  uint iSkinningVertexBase;          // Offset:    4 Size:     4
  uint iTriangleCount;               // Offset:    8 Size:     4
  uint iVertexOffset;                // Offset:   12 Size:     4
  uint iRedirectOffset;              // Offset:   16 Size:     4
};

//CBMhSky2Sun : 5052.shdr.src
struct CBMhSky2Sun {

  row_major float4x4 fRotMatrix;     // Offset:    0 Size:    64
  float2 fSize;                      // Offset:   64 Size:     8
  float fIntensity;                  // Offset:   72 Size:     4 [unused]
  // align: 76 to 80
  ubyte align0[4];
  float4 fSkySunMapFactor;           // Offset:   80 Size:    16 [unused]
  float fBloomThreshold;             // Offset:   96 Size:     4 [unused]
  bool bSkySunIsRenderingWater;      // Offset:  100 Size:     4 [unused]
  // align: 104 to 112
  ubyte align1[8];
  float3 fSkySunWaterReflectionFactor;// Offset:  112 Size:    12 [unused]
  float fBloomTransparencyCoefficient;// Offset:  124 Size:     4 [unused]
  float2 fRenderTargetInverseSize;   // Offset:  128 Size:     8 [unused]
};

//CBAmbientOccluder : 9159.shdr.src
struct CBAmbientOccluder {

  float2 fSceneTextureScale;         // Offset:    0 Size:     8
  float fIntensity;                  // Offset:    8 Size:     4 [unused]
  float fTransparency;               // Offset:   12 Size:     4
};

//CBMhMaterialEMSLocal__disclosure : 1379.shdr.src
struct CBMhMaterialEMSLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  // align: 52 to 64
  ubyte align0[12];
  float4 fUVTransformA;              // Offset:   64 Size:    16
  float4 fBaseMapMod__uiUNorm;       // Offset:   80 Size:    16 [unused]
  float4 fBaseMapModLimitMax__uiUNorm;// Offset:   96 Size:    16 [unused]
  float4 fBaseMapModLimitMin__uiUNorm;// Offset:  112 Size:    16 [unused]
  float4 fFurParam__uiUNorm;         // Offset:  128 Size:    16 [unused]
  float fFurTile;                    // Offset:  144 Size:     4 [unused]
  bool bFurLong;                     // Offset:  148 Size:     4 [unused]
  // align: 152 to 160
  ubyte align1[8];
  float3 fPattern_color__uiColor;    // Offset:  160 Size:    12 [unused]
  float fFilmThickness__uiUNorm;     // Offset:  172 Size:     4 [unused]
  float fFilmBlend__uiUNorm;         // Offset:  176 Size:     4 [unused]
  float fFilmIOR__uiUNorm;           // Offset:  180 Size:     4 [unused]
  bool bBaseColorEmissive;           // Offset:  184 Size:     4 [unused]
  bool bUseCMM;                      // Offset:  188 Size:     4 [unused]
  float fMummyTile;                  // Offset:  192 Size:     4 [unused]
  float2 fMummyBlend__uiUNorm;       // Offset:  196 Size:     8 [unused]
  // align: 204 to 208
  ubyte align2[4];
  float4 fMummyColor__uiColor;       // Offset:  208 Size:    16 [unused]
  float4 fMummyMatControl__uiUNorm;  // Offset:  224 Size:    16 [unused]
  float3 fMummyEmitColor__uiColor;   // Offset:  240 Size:    12 [unused]
};

//CBMhMaterialGlobal : 9960.shdr.src
struct CBMhMaterialGlobal {

  float fMaterialWetBlend;           // Offset:    0 Size:     4
  float fMaterialWetRoughness;       // Offset:    4 Size:     4
  bool bMaterialCustomLighting;      // Offset:    8 Size:     4 [unused]
  uint iMaterialCustomLightingGBufferIdMask;// Offset:   12 Size:     4 [unused]
  float fMaterialHiddenSurfaceDrawIntensity;// Offset:   16 Size:     4 [unused]
};

//CBLUTBlending : 1388.shdr.src
struct CBLUTBlending {

  float fLUTBlend;                   // Offset:    0 Size:     4
  float fVfxLUTBlend;                // Offset:    4 Size:     4
  bool bIsBlend;                     // Offset:    8 Size:     4
  bool bIsVfxBlend;                  // Offset:   12 Size:     4
};

//CBVRRecompute : 8315.shdr.src
struct CBVRRecompute {

  float fDepthTreshold;              // Offset:    0 Size:     4
  float fAngleTreshold;              // Offset:    4 Size:     4
  float fMaxDepth;                   // Offset:    8 Size:     4
  // align: 12 to 16
  ubyte align0[4];
  float3 fDepthTreshold2;            // Offset:   16 Size:    12 [unused]
  // align: 28 to 32
  ubyte align1[4];
  float3 fAngleTreshold2;            // Offset:   32 Size:    12 [unused]
  // align: 44 to 48
  ubyte align2[4];
  float3 fMaxDepth2;                 // Offset:   48 Size:    12 [unused]
};

//CBMhMaterialStdLocal__disclosure : 4437.shdr.src
struct CBMhMaterialStdLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fDetailNormalBlend__uiUNorm; // Offset:   48 Size:     4 [unused]
  // align: 52 to 64
  ubyte align0[12];
  float4 fUVTransformA;              // Offset:   64 Size:    16
  float4 fUVTransformB;              // Offset:   80 Size:    16 [unused]
  float4 fBaseMapModulation__uiUNorm;// Offset:   96 Size:    16 [unused]
  float fTranslucency__uiUNorm;      // Offset:  112 Size:     4 [unused]
  float3 fEmissiveBlendColor__uiColor;// Offset:  116 Size:    12 [unused]
  float fEmissiveBlendColorBlend__uiUNorm;// Offset:  128 Size:     4 [unused]
  float3 fEmissiveBlendRimParam;     // Offset:  132 Size:    12 [unused]
  bool bSpecialBlend;                // Offset:  144 Size:     4 [unused]
  float fFurNormalBlend__uiUNorm;    // Offset:  148 Size:     4 [unused]
  float fFurHeight__uiUNorm;         // Offset:  152 Size:     4 [unused]
  float fFurMapBlend__uiUNorm;       // Offset:  156 Size:     4 [unused]
  float fFurEdgeBlend__uiUNorm;      // Offset:  160 Size:     4 [unused]
  float fFurTile;                    // Offset:  164 Size:     4 [unused]
  bool bFakeRefraction;              // Offset:  168 Size:     4 [unused]
  float fRefraction__uiUNorm;        // Offset:  172 Size:     4 [unused]
  float3 fWetBlendDir__uiDirection;  // Offset:  176 Size:    12 [unused]
  float fWetBlendPlaneNormal__uiUNorm;// Offset:  188 Size:     4 [unused]
  float3 fWetBlendOp;                // Offset:  192 Size:    12 [unused]
  bool bWetNormalBlend;              // Offset:  204 Size:     4 [unused]
  float2 fWetNormalBlendRange__uiUNorm;// Offset:  208 Size:     8 [unused]
  float fVolumeBlend__uiSNorm;       // Offset:  216 Size:     4 [unused]
};

//CBDOFFilter : 9040.shdr.src
struct CBDOFFilter {

  float2 fDOFPoissonOffsets[8];      // Offset:    0 Size:   120 [unused]
  float2 fDOFPixelSizeLow;           // Offset:  120 Size:     8 [unused]
  float2 fDOFPixelSizeHigh;          // Offset:  128 Size:     8 [unused]
  // align: 136 to 144
  ubyte align0[8];
  float3 fDOFGradateColor;           // Offset:  144 Size:    12 [unused]
  float fDOFFocus;                   // Offset:  156 Size:     4
  float fDOFNear;                    // Offset:  160 Size:     4 [unused]
  float fDOFFar;                     // Offset:  164 Size:     4 [unused]
  float fDOFNearLimit;               // Offset:  168 Size:     4
  float fDOFFarLimit;                // Offset:  172 Size:     4
  float fDOFCoCScale;                // Offset:  176 Size:     4 [unused]
  float fDOFCoCBias;                 // Offset:  180 Size:     4 [unused]
  float fDOFRadiusScale;             // Offset:  184 Size:     4 [unused]
  float fDOFCorrectParamNear;        // Offset:  188 Size:     4
  float fDOFCorrectParamFar;         // Offset:  192 Size:     4
  // align: 196 to 208
  ubyte align1[12];
  float4 fDOFVelocityFactor;         // Offset:  208 Size:    16 [unused]
};

//CBImagePlane : 1497.shdr.src
struct CBImagePlane {

  float4 fImagePlaneColor;           // Offset:    0 Size:    16
  row_major float4x4 fImagePlaneUVTransform;// Offset:   16 Size:    64 [unused]
  uint fImagePlaneTechnique;         // Offset:   80 Size:     4
  uint fBlendType;                   // Offset:   84 Size:     4
  bool bIsScreenPass;                // Offset:   88 Size:     4
  float fGamma;                      // Offset:   92 Size:     4
};

//CBImagePlane2 : 1496.shdr.src
struct CBImagePlane2 {

  float2 fFilterUVMin;               // Offset:    0 Size:     8
  float2 fFilterUVMax;               // Offset:    8 Size:     8
};

//CBHazeFilter : 1524.shdr.src
struct CBHazeFilter {

  uint iHazeTech;                    // Offset:    0 Size:     4
  float fHazeFilterStart;            // Offset:    4 Size:     4
  float fHazeFilterInverseRange;     // Offset:    8 Size:     4
  float fHazeFilterHeightStart;      // Offset:   12 Size:     4
  float fHazeFilterHeightInverseRange;// Offset:   16 Size:     4
  // align: 20 to 32
  ubyte align0[12];
  float4 fHazeFilterUVWOffset;       // Offset:   32 Size:    16
  float fHazeFilterScale;            // Offset:   48 Size:     4
};

//CBMhMaterialVfxVATDistLocal__disclosure : 1608.shdr.src
struct CBMhMaterialVfxVATDistLocal__disclosure {

  float3 fBaseMapFactor__uiColor;    // Offset:    0 Size:    12 [unused]
  // align: 12 to 16
  ubyte align0[4];
  float3 fDistortionFactor__uiColor; // Offset:   16 Size:    12 [unused]
  // align: 28 to 32
  ubyte align1[4];
  float3 fCubeMapFactor__uiColor;    // Offset:   32 Size:    12 [unused]
  // align: 44 to 48
  ubyte align2[4];
  float4 fUVTransformA;              // Offset:   48 Size:    16 [unused]
  float4 fUVTransformB;              // Offset:   64 Size:    16
  float4 fUVTransformC;              // Offset:   80 Size:    16 [unused]
  float fMetalic__uiUNorm;           // Offset:   96 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:  100 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:  104 Size:     4 [unused]
  float fSpecularFactor;             // Offset:  108 Size:     4 [unused]
  float fOpacityFactor;              // Offset:  112 Size:     4 [unused]
  float fVertexOpacityFactor;        // Offset:  116 Size:     4 [unused]
  float fVolumeBlend__uiSNorm;       // Offset:  120 Size:     4 [unused]
  float fWN_RimRate__uiUNorm;        // Offset:  124 Size:     4 [unused]
  float fWN_RimOpacityPow;           // Offset:  128 Size:     4 [unused]
  float fPN_RimRate__uiUNorm;        // Offset:  132 Size:     4 [unused]
  float fPN_RimOpacityPow;           // Offset:  136 Size:     4 [unused]
  float fRimOpacityFactor;           // Offset:  140 Size:     4 [unused]
  float fNormalBlend__uiUNorm;       // Offset:  144 Size:     4 [unused]
  float fRaflectionRate__uiUNorm;    // Offset:  148 Size:     4 [unused]
  float fDistortionScale__uiUNorm;   // Offset:  152 Size:     4 [unused]
  float fDistortionPow;              // Offset:  156 Size:     4 [unused]
  float fFlowSpeed;                  // Offset:  160 Size:     4 [unused]
  float fFlowStrength;               // Offset:  164 Size:     4 [unused]
  float fDispFactor;                 // Offset:  168 Size:     4
  float fDiffuseChroma__uiUNorm;     // Offset:  172 Size:     4 [unused]
  float fSpecularChroma__uiUNorm;    // Offset:  176 Size:     4 [unused]
  float fInnerOffsetScale;           // Offset:  180 Size:     4
  float fVelocityAttn;               // Offset:  184 Size:     4 [unused]
  float fNormalDecalBlend__uiUNorm;  // Offset:  188 Size:     4 [unused]
  bool bSceneEnvMap;                 // Offset:  192 Size:     4 [unused]
  bool bEnableOpaque;                // Offset:  196 Size:     4 [unused]
  bool bVertexColor;                 // Offset:  200 Size:     4 [unused]
};

//CBBokehComposite : 6050.shdr.src
struct CBBokehComposite {

  float fBokehMipBias;               // Offset:    0 Size:     4
  float fBokehMipScale;              // Offset:    4 Size:     4
  float fBokehAlphaScale;            // Offset:    8 Size:     4
  float fBokehRangeScale;            // Offset:   12 Size:     4 [unused]
  float fBokehDitherScale;           // Offset:   16 Size:     4 [unused]
  int iBokehSampleCount;             // Offset:   20 Size:     4
  // align: 24 to 32
  ubyte align0[8];
  float2 fBokehTap[25];              // Offset:   32 Size:   392
};

//CBDecal : 8234.shdr.src
struct CBDecal {

  uint iDecalMode;                   // Offset:    0 Size:     4 [unused]
  float fDecalMetallic;              // Offset:    4 Size:     4
  float fDecalRoughness;             // Offset:    8 Size:     4
  float fDecalNonMetallicFresnel;    // Offset:   12 Size:     4
  float fDecalLimitAngle;            // Offset:   16 Size:     4
};

//CBMhMaterialFakeLensLocal__disclosure : 1686.shdr.src
struct CBMhMaterialFakeLensLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fDetailNormalBlend__uiUNorm; // Offset:   48 Size:     4 [unused]
  // align: 52 to 64
  ubyte align0[12];
  float4 fUVTransformA;              // Offset:   64 Size:    16
  float4 fUVTransformB;              // Offset:   80 Size:    16 [unused]
  float fTranslucency__uiUNorm;      // Offset:   96 Size:     4 [unused]
  float fOffset_A__uiUNorm;          // Offset:  100 Size:     4 [unused]
  float fOffset_B__uiUNorm;          // Offset:  104 Size:     4 [unused]
  // align: 108 to 112
  ubyte align1[4];
  float3 fCoating_A__uiColor;        // Offset:  112 Size:    12 [unused]
  // align: 124 to 128
  ubyte align2[4];
  float3 fCoating_B__uiColor;        // Offset:  128 Size:    12 [unused]
  // align: 140 to 144
  ubyte align3[4];
  float3 fCoating_C__uiColor;        // Offset:  144 Size:    12 [unused]
  // align: 156 to 160
  ubyte align4[4];
  float3 fCoating_D__uiColor;        // Offset:  160 Size:    12 [unused]
  float fWakuIntensity__uiUNorm;     // Offset:  172 Size:     4 [unused]
  float fWakuSize__uiUNorm;          // Offset:  176 Size:     4 [unused]
};

//CBFilter2 : 9498.shdr.src
struct CBFilter2 {

  float2 fFilterUVMin;               // Offset:    0 Size:     8
  float2 fFilterUVMax;               // Offset:    8 Size:     8
  float fFilterSampleOffsets[11];    // Offset:   16 Size:   164
  // align: 180 to 192
  ubyte align0[12];
  float fFilterSampleWeights[11];    // Offset:  192 Size:   164
  float fFilterThreshold;            // Offset:  356 Size:     4 [unused]
};

//CBMhMaterialVfxDispWaveLocal__disclosure : 1772.shdr.src
struct CBMhMaterialVfxDispWaveLocal__disclosure {

  float4 fUVTransformA;              // Offset:    0 Size:    16
  float4 fUVTransformB;              // Offset:   16 Size:    16
  float3 fAdditionalRot;             // Offset:   32 Size:    12
  // align: 44 to 48
  ubyte align0[4];
  float3 fWaveAxis__uiSNorm;         // Offset:   48 Size:    12
  // align: 60 to 64
  ubyte align1[4];
  float3 fWaveScale__uiUNorm;        // Offset:   64 Size:    12
  float fWaveAngle;                  // Offset:   76 Size:     4
  float fDetailDisplacement;         // Offset:   80 Size:     4
  float fYAxisDepth;                 // Offset:   84 Size:     4
  float fWhiteWaterPow;              // Offset:   88 Size:     4 [unused]
  float fFitRange;                   // Offset:   92 Size:     4
  float4 fBaseMapFactor__uiColor;    // Offset:   96 Size:    16 [unused]
  float3 fDistortionFactor__uiColor; // Offset:  112 Size:    12 [unused]
  // align: 124 to 128
  ubyte align2[4];
  float3 fCubeMapFactor__uiColor;    // Offset:  128 Size:    12 [unused]
  float fNormalFactor__uiUNorm;      // Offset:  140 Size:     4 [unused]
  float fRaflectionAngle__uiSNorm;   // Offset:  144 Size:     4 [unused]
  float fDistortionAngle;            // Offset:  148 Size:     4 [unused]
  float fDistortion;                 // Offset:  152 Size:     4 [unused]
  float fOpacityFactor;              // Offset:  156 Size:     4 [unused]
  float fVolumeBlend__uiSNorm;       // Offset:  160 Size:     4 [unused]
  float fMetalic__uiUNorm;           // Offset:  164 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:  168 Size:     4 [unused]
  float fSpecularFactor;             // Offset:  172 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:  176 Size:     4 [unused]
  float fDiffuseChroma__uiUNorm;     // Offset:  180 Size:     4 [unused]
  float fSpecularChroma__uiUNorm;    // Offset:  184 Size:     4 [unused]
  bool bSceneEnvMap;                 // Offset:  188 Size:     4 [unused]
  float fInnerOffsetScale;           // Offset:  192 Size:     4
  float fVelocityAttn;               // Offset:  196 Size:     4 [unused]
  float fNormalDecalBlend__uiUNorm;  // Offset:  200 Size:     4 [unused]
};

//CBMhMaterialFlowDirLocal__disclosure : 1883.shdr.src
struct CBMhMaterialFlowDirLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fDetailNormalBlend__uiUNorm; // Offset:   48 Size:     4 [unused]
  // align: 52 to 64
  ubyte align0[12];
  float4 fUVTransformA;              // Offset:   64 Size:    16
  float4 fUVTransformB;              // Offset:   80 Size:    16 [unused]
  float fTranslucency__uiUNorm;      // Offset:   96 Size:     4 [unused]
  float3 fEmissiveBlendColor__uiColor;// Offset:  100 Size:    12 [unused]
  float fEmissiveBlendColorBlend__uiUNorm;// Offset:  112 Size:     4 [unused]
  float3 fEmissiveBlendRimParam;     // Offset:  116 Size:    12 [unused]
  float3 fFlowDirDir__uiDirection;   // Offset:  128 Size:    12
  float fFlowDirUVPhaseShift__uiUNorm;// Offset:  140 Size:     4
  bool bFlowDirLocalSpace;           // Offset:  144 Size:     4
  float fFlowDirFlowSpeed__uiUNorm;  // Offset:  148 Size:     4
};

//CBCreateMipmap : 9166.shdr.src
struct CBCreateMipmap {

  uint4 iRegion;                     // Offset:    0 Size:    16
};

//CBWater : 6095.shdr.src
struct CBWater {

  row_major float4x4 cWorldMat;      // Offset:    0 Size:    64
  bool cLodEnabled;                  // Offset:   64 Size:     4 [unused]
  float3 cAxisX;                     // Offset:   68 Size:    12 [unused]
  float3 cAxisZ;                     // Offset:   80 Size:    12 [unused]
  float cWorldScaleY;                // Offset:   92 Size:     4 [unused]
  float cVsSubdivInv;                // Offset:   96 Size:     4
  float cTsSubdivInv;                // Offset:  100 Size:     4 [unused]
  float cAttenuation;                // Offset:  104 Size:     4 [unused]
  uint cTest;                        // Offset:  108 Size:     4 [unused]
  uint cNumWaveFunctionParam;        // Offset:  112 Size:     4 [unused]
};

//CBMhMaterialEM103Local__disclosure : 2008.shdr.src
struct CBMhMaterialEM103Local__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  bool bBaseColorEmissive;           // Offset:   52 Size:     4 [unused]
  float2 fPaintUVTile;               // Offset:   56 Size:     8 [unused]
  float fAddNormalBlend__uiUNorm;    // Offset:   64 Size:     4 [unused]
  // align: 68 to 80
  ubyte align0[12];
  float4 fAddNormalMaskA__uiSNorm;   // Offset:   80 Size:    16 [unused]
  float4 fAddNormalMaskB__uiSNorm;   // Offset:   96 Size:    16 [unused]
  float fAddNormalMaskC__uiUNorm;    // Offset:  112 Size:     4 [unused]
  float fAddNormalMaskD__uiUNorm;    // Offset:  116 Size:     4 [unused]
  bool bBackFaceShading;             // Offset:  120 Size:     4 [unused]
  bool bBackFaceNormalFilp;          // Offset:  124 Size:     4 [unused]
  float3 fKizuColor__uiColor;        // Offset:  128 Size:    12 [unused]
  // align: 140 to 144
  ubyte align1[4];
  float2 fKizuUVOffset__uiUNorm;     // Offset:  144 Size:     8 [unused]
  float fKizuMultiply;               // Offset:  152 Size:     4 [unused]
  bool bLegendary;                   // Offset:  156 Size:     4 [unused]
  float4 fLegendColor__uiColor;      // Offset:  160 Size:    16 [unused]
  float2 fLegendMetalMask__uiUNorm;  // Offset:  176 Size:     8 [unused]
  float fLegendRoughness;            // Offset:  184 Size:     4 [unused]
  // align: 188 to 192
  ubyte align2[4];
  float3 fLegendFilm__uiUNorm;       // Offset:  192 Size:    12 [unused]
  float fLegendSSSMask__uiUNorm;     // Offset:  204 Size:     4 [unused]
  float3 fLegendHSV__uiSNorm;        // Offset:  208 Size:    12 [unused]
  float fLegendFilmIOR__uiUNorm;     // Offset:  220 Size:     4 [unused]
  float fPartsMaskA__uiUNorm;        // Offset:  224 Size:     4 [unused]
  float fPartsMaskB__uiUNorm;        // Offset:  228 Size:     4 [unused]
  float fPartsMaskC__uiUNorm;        // Offset:  232 Size:     4 [unused]
  float fPartsMaskD__uiUNorm;        // Offset:  236 Size:     4 [unused]
  float fPartsMaskX__uiUNorm;        // Offset:  240 Size:     4 [unused]
  float fPartsMaskY__uiUNorm;        // Offset:  244 Size:     4 [unused]
  float fPartsMaskZ__uiUNorm;        // Offset:  248 Size:     4 [unused]
  float fPartsMaskW__uiUNorm;        // Offset:  252 Size:     4 [unused]
  bool bUseOffset;                   // Offset:  256 Size:     4
  float fOffsetScale;                // Offset:  260 Size:     4
  bool bTranslucentOffset;           // Offset:  264 Size:     4
  bool bAntiSSSEmit;                 // Offset:  268 Size:     4 [unused]
  float3 fFlowDirDir__uiDirection;   // Offset:  272 Size:    12 [unused]
  // align: 284 to 288
  ubyte align3[4];
  float4 fFlowControl__uiUNorm;      // Offset:  288 Size:    16 [unused]
  float fFlowTile;                   // Offset:  304 Size:     4 [unused]
  // align: 308 to 320
  ubyte align4[12];
  float4 fFlowColor__uiColor;        // Offset:  320 Size:    16 [unused]
  float4 fFlowMatControl__uiUNorm;   // Offset:  336 Size:    16 [unused]
  float fFilmThickness__uiUNorm;     // Offset:  352 Size:     4 [unused]
  float fFilmBlend__uiUNorm;         // Offset:  356 Size:     4 [unused]
  float fFilmIOR__uiUNorm;           // Offset:  360 Size:     4 [unused]
  float fRefraction__uiUNorm;        // Offset:  364 Size:     4 [unused]
  float fRefractionBlend__uiUNorm;   // Offset:  368 Size:     4 [unused]
  float fAlbedoBlend__uiUNorm;       // Offset:  372 Size:     4 [unused]
  bool bPartsAlpha;                  // Offset:  376 Size:     4 [unused]
  // align: 380 to 384
  ubyte align5[4];
  float4 fBlendBaseMapFactor__uiColor;// Offset:  384 Size:    16 [unused]
  float4 fBlendMatFactor;            // Offset:  400 Size:    16 [unused]
  bool bUseBlendDisplace;            // Offset:  416 Size:     4
  float fVAnimV__uiUNorm;            // Offset:  420 Size:     4
  float fVAnimPosScale;              // Offset:  424 Size:     4
  bool bInvertX;                     // Offset:  428 Size:     4
  float fAnimEmitMin;                // Offset:  432 Size:     4 [unused]
  float fAnimEmitSpeed;              // Offset:  436 Size:     4 [unused]
  bool bUseWaveEmit;                 // Offset:  440 Size:     4 [unused]
  float fAnimEmitWave;               // Offset:  444 Size:     4 [unused]
  float fRimAlphaPower__uiSNorm;     // Offset:  448 Size:     4 [unused]
  float fRimTranslucency__uiUNorm;   // Offset:  452 Size:     4 [unused]
  float fRimNormal__uiUNorm;         // Offset:  456 Size:     4 [unused]
  float fSnowUVTile;                 // Offset:  460 Size:     4 [unused]
  float4 fSnowBlendColor__uiColor;   // Offset:  464 Size:    16
  float4 fSnowMatControl__uiUNorm;   // Offset:  480 Size:    16 [unused]
  float fMaterialSnowBlendB;         // Offset:  496 Size:     4
  // align: 500 to 512
  ubyte align6[12];
  float4 fSnowControl;               // Offset:  512 Size:    16
};

//CBPrimGpuSystem : 9490.shdr.src
struct CBPrimGpuSystem {

  uint iEmitterCount;                // Offset:    0 Size:     4
  uint iTotalSpawnCount;             // Offset:    4 Size:     4 [unused]
  uint iTotalParticleMax;            // Offset:    8 Size:     4 [unused]
  uint iResetUnusedIndexHead;        // Offset:   12 Size:     4 [unused]
  uint iResetUnusedIndexCount;       // Offset:   16 Size:     4 [unused]
  float3 fMainCameraDir;             // Offset:   20 Size:    12 [unused]
  uint iGpuStateFlags;               // Offset:   32 Size:     4 [unused]
  uint iGpuUpdateCounter;            // Offset:   36 Size:     4 [unused]
  // align: 40 to 48
  ubyte align0[8];
  float3 gCollisionSpaceAABBMin;     // Offset:   48 Size:    12 [unused]
  // align: 60 to 64
  ubyte align1[4];
  float3 gCollisionSpaceSizeInv;     // Offset:   64 Size:    12 [unused]
  uint gCollisionSpaceDivideX;       // Offset:   76 Size:     4 [unused]
  uint gCollisionSpaceDivideY;       // Offset:   80 Size:     4 [unused]
  uint gCollisionSpaceDivideZ;       // Offset:   84 Size:     4 [unused]
  float gCollisionSpring;            // Offset:   88 Size:     4 [unused]
  float gForceWindScale;             // Offset:   92 Size:     4 [unused]
  float gForceWindMass;              // Offset:   96 Size:     4 [unused]
  float gForceWindCurve;             // Offset:  100 Size:     4 [unused]
};

//CBVR_Debug : 202.shdr.src
struct CBVR_Debug {

  uint iMode;                        // Offset:    0 Size:     4
};

//CBBitonicSort : 8000.shdr.src
struct CBBitonicSort {

  uint iSortArrayLength;             // Offset:    0 Size:     4
  uint iCompareFlipSize;             // Offset:    4 Size:     4
  uint iCompareStride;               // Offset:    8 Size:     4 [unused]
  uint iCompareDir;                  // Offset:   12 Size:     4
};

//CBTSAO : 5754.shdr.src
struct CBTSAO {

  uint4 iDepthRegion;                // Offset:    0 Size:    16
  float4 projConstant;               // Offset:   16 Size:    16 [unused]
  float4 fJitters;                   // Offset:   32 Size:    16 [unused]
  float3 clipConstant;               // Offset:   48 Size:    12 [unused]
  // align: 60 to 64
  ubyte align0[4];
  float2 fOriginalInverseSize;       // Offset:   64 Size:     8 [unused]
  float fEdgeCoef;                   // Offset:   72 Size:     4 [unused]
  float projScale;                   // Offset:   76 Size:     4 [unused]
  float radius;                      // Offset:   80 Size:     4 [unused]
  float bias;                        // Offset:   84 Size:     4 [unused]
  float intensity;                   // Offset:   88 Size:     4 [unused]
  float fAcceptThresholdCoef;        // Offset:   92 Size:     4 [unused]
  float fRenderTargetSizeScale;      // Offset:   96 Size:     4 [unused]
};

//CBMhMaterialDynamicSnow__disclosure : 2134.shdr.src
struct CBMhMaterialDynamicSnow__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   32 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fDetailNormalBlend__uiUNorm; // Offset:   48 Size:     4 [unused]
  // align: 52 to 64
  ubyte align0[12];
  float4 fUVTransformA;              // Offset:   64 Size:    16 [unused]
  float4 fUVTransformB;              // Offset:   80 Size:    16 [unused]
  float fTranslucency__uiUNorm;      // Offset:   96 Size:     4 [unused]
  float fEdgesPerScreenHeight;       // Offset:  100 Size:     4 [unused]
  // align: 104 to 112
  ubyte align1[8];
  float3 fWorldPositionMax;          // Offset:  112 Size:    12
  // align: 124 to 128
  ubyte align2[4];
  float3 fWorldPositionMin;          // Offset:  128 Size:    12
  float fHeightScale;                // Offset:  140 Size:     4 [unused]
  float4 fVertexColorMapMask__uiUNorm;// Offset:  144 Size:    16 [unused]
  float fTessLevel;                  // Offset:  160 Size:     4 [unused]
};

//CBGodRaysFilter : 779.shdr.src
struct CBGodRaysFilter {

  float3 fGodRaysOrigin;             // Offset:    0 Size:    12
  float fGodRaysMaskWeight;          // Offset:   12 Size:     4
  float3 fGodRaysWorldOrigin;        // Offset:   16 Size:    12
  float fGodRaysMaskRadius;          // Offset:   28 Size:     4
  float fGodRaysDecay;               // Offset:   32 Size:     4 [unused]
  float fGodRaysThreshold;           // Offset:   36 Size:     4
  float fGodRaysSamples;             // Offset:   40 Size:     4 [unused]
  float fGodRaysGamma;               // Offset:   44 Size:     4 [unused]
  float4 fGodRaysColor;              // Offset:   48 Size:    16 [unused]
  float fGodRaysShadowThreshold;     // Offset:   64 Size:     4
  float fGodRaysBlurWidthScale;      // Offset:   68 Size:     4 [unused]
  float fGodRaysBlurWidthOffset;     // Offset:   72 Size:     4 [unused]
};

//CBBloomSample : 2158.shdr.src
struct CBBloomSample {

  float4 fBloomFilterRegion;         // Offset:    0 Size:    16
};

//CBMhDecal : 8234.shdr.src
struct CBMhDecal {

  int iDecalShadingMode;             // Offset:    0 Size:     4
  int iDecalBlendMode;               // Offset:    4 Size:     4
  float fDecalNormalBlendRate;       // Offset:    8 Size:     4 [unused]
  bool fDecalAlphaTest;              // Offset:   12 Size:     4
  float fDecalAlphaTestRef;          // Offset:   16 Size:     4
  bool bDecalAlphaMapUVFix;          // Offset:   20 Size:     4
  // align: 24 to 32
  ubyte align0[8];
  float3 fDecalEmissiveMapFactor;    // Offset:   32 Size:    12
  float fDecalTransparency;          // Offset:   44 Size:     4
  bool2 fDecalFlipUV;                // Offset:   48 Size:     8
  // align: 56 to 64
  ubyte align1[8];
  bool3 bDecalNormalMapFlip;         // Offset:   64 Size:    12
  bool bDecalFlowMap;                // Offset:   76 Size:     4
  float fDecalFlowTime;              // Offset:   80 Size:     4
  float fDecalFlowStrength;          // Offset:   84 Size:     4
  // align: 88 to 96
  ubyte align2[8];
  float4 fDecalUVTransform;          // Offset:   96 Size:    16
  float2 fDecalAlphaCorrectionMinMax;// Offset:  112 Size:     8
  float fDecalBlendFactorIntensity;  // Offset:  120 Size:     4
  int iDecalAlphaMapChannel;         // Offset:  124 Size:     4
  float fDecalEdgeFade;              // Offset:  128 Size:     4
  float2 fDecalDistanceFadeRange;    // Offset:  132 Size:     8
  bool bDecalEmissiveBoost;          // Offset:  140 Size:     4
  float2 fDecalEmissiveBoostParam;   // Offset:  144 Size:     8
  float fDecalNormalBlendPow;        // Offset:  152 Size:     4 [unused]
  bool bDecalNormalBC5;              // Offset:  156 Size:     4
  bool bDecalDistortionEnable;       // Offset:  160 Size:     4
  bool bDecalDistortionScreenFade;   // Offset:  164 Size:     4
  float fDecalDistortion;            // Offset:  168 Size:     4
  float fDecalDistortionAngle;       // Offset:  172 Size:     4
  float3 fDecalDistortionColor;      // Offset:  176 Size:    12
  float fDecalDistanceFade;          // Offset:  188 Size:     4
};

//CBMhDecalSM : 8234.shdr.src
struct CBMhDecalSM {

  float fFireFactor;                 // Offset:    0 Size:     4
  float fFireLifeFactor;             // Offset:    4 Size:     4
  float fFireAlphaFactor;            // Offset:    8 Size:     4
  float fFireColorRate;              // Offset:   12 Size:     4
  bool bFireLighting;                // Offset:   16 Size:     4
  float3 fFireColor;                 // Offset:   20 Size:    12
  float fSmokeFactor;                // Offset:   32 Size:     4
  float fSmokeLifeFactor;            // Offset:   36 Size:     4
  bool bSmokeLighting;               // Offset:   40 Size:     4
  // align: 44 to 48
  ubyte align0[4];
  float3 fSmokeColor;                // Offset:   48 Size:    12
  float fWaterColorRate;             // Offset:   60 Size:     4
  float3 fWaterColorSpecular;        // Offset:   64 Size:    12
  // align: 76 to 80
  ubyte align1[4];
  float3 fWaterColorSheet;           // Offset:   80 Size:    12
  float fWaterIntensitySpecular;     // Offset:   92 Size:     4
  float fWaterLerpGtoB;              // Offset:   96 Size:     4
  float fWaterIntensitySheet;        // Offset:  100 Size:     4
  float fWaterSpecularLifeFactor;    // Offset:  104 Size:     4
  float fWaterSheetLifeFactor;       // Offset:  108 Size:     4
  float fWaterGtoBLifeFactor;        // Offset:  112 Size:     4
  float fWaterIntensityCubeMap;      // Offset:  116 Size:     4
  float fWaterNormalSharpness;       // Offset:  120 Size:     4
  float fWaterIntensityAlpha;        // Offset:  124 Size:     4
};

//CBDebug : 5060.shdr.src
struct CBDebug {

  int iDebugView;                    // Offset:    0 Size:     4
  int iDebugViewChannel;             // Offset:    4 Size:     4
  int iDebugLightMaxCount;           // Offset:    8 Size:     4 [unused]
  float fDebugViewBgAlpha;           // Offset:   12 Size:     4 [unused]
  float fDebugViewFgAlpha;           // Offset:   16 Size:     4 [unused]
  float2 fDebugViewScaling;          // Offset:   20 Size:     8
};

//CBMhSky2VS : 2210.shdr.src
struct CBMhSky2VS {

  row_major float3x4 fSkyWorld;      // Offset:    0 Size:    48
};

//CBMhMaterialEM100_01Local__disclosure : 2276.shdr.src
struct CBMhMaterialEM100_01Local__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  bool bBaseColorEmissive;           // Offset:   52 Size:     4 [unused]
  float2 fPaintUVTile;               // Offset:   56 Size:     8 [unused]
  float fAddNormalBlend__uiUNorm;    // Offset:   64 Size:     4 [unused]
  // align: 68 to 80
  ubyte align0[12];
  float4 fAddNormalMaskA__uiSNorm;   // Offset:   80 Size:    16 [unused]
  float4 fAddNormalMaskB__uiSNorm;   // Offset:   96 Size:    16 [unused]
  float fAddNormalMaskC__uiUNorm;    // Offset:  112 Size:     4 [unused]
  float fAddNormalMaskD__uiUNorm;    // Offset:  116 Size:     4 [unused]
  bool bBackFaceShading;             // Offset:  120 Size:     4 [unused]
  bool bBackFaceNormalFilp;          // Offset:  124 Size:     4 [unused]
  float3 fKizuColor__uiColor;        // Offset:  128 Size:    12 [unused]
  // align: 140 to 144
  ubyte align1[4];
  float2 fKizuUVOffset__uiUNorm;     // Offset:  144 Size:     8 [unused]
  float fKizuMultiply;               // Offset:  152 Size:     4 [unused]
  bool bLegendary;                   // Offset:  156 Size:     4 [unused]
  float4 fLegendColor__uiColor;      // Offset:  160 Size:    16 [unused]
  float2 fLegendMetalMask__uiUNorm;  // Offset:  176 Size:     8 [unused]
  float fLegendRoughness;            // Offset:  184 Size:     4 [unused]
  // align: 188 to 192
  ubyte align2[4];
  float3 fLegendFilm__uiUNorm;       // Offset:  192 Size:    12 [unused]
  float fLegendSSSMask__uiUNorm;     // Offset:  204 Size:     4 [unused]
  float3 fLegendHSV__uiSNorm;        // Offset:  208 Size:    12 [unused]
  float fLegendFilmIOR__uiUNorm;     // Offset:  220 Size:     4 [unused]
  float fPartsMaskA__uiUNorm;        // Offset:  224 Size:     4 [unused]
  float fPartsMaskB__uiUNorm;        // Offset:  228 Size:     4 [unused]
  float fPartsMaskC__uiUNorm;        // Offset:  232 Size:     4 [unused]
  float fPartsMaskD__uiUNorm;        // Offset:  236 Size:     4 [unused]
  float fPartsMaskX__uiUNorm;        // Offset:  240 Size:     4 [unused]
  float fPartsMaskY__uiUNorm;        // Offset:  244 Size:     4 [unused]
  float fPartsMaskZ__uiUNorm;        // Offset:  248 Size:     4 [unused]
  float fPartsMaskW__uiUNorm;        // Offset:  252 Size:     4 [unused]
  bool bUseOffset;                   // Offset:  256 Size:     4
  float fOffsetScale;                // Offset:  260 Size:     4
  bool bTranslucentOffset;           // Offset:  264 Size:     4
  bool bAntiSSSEmit;                 // Offset:  268 Size:     4 [unused]
  float3 fFlowDirDir__uiDirection;   // Offset:  272 Size:    12 [unused]
  // align: 284 to 288
  ubyte align3[4];
  float4 fFlowControl__uiUNorm;      // Offset:  288 Size:    16 [unused]
  float fFlowTile;                   // Offset:  304 Size:     4 [unused]
  // align: 308 to 320
  ubyte align4[12];
  float4 fFlowColor__uiColor;        // Offset:  320 Size:    16 [unused]
  float4 fFlowMatControl__uiUNorm;   // Offset:  336 Size:    16 [unused]
  float4 fMaskBlend__uiUNorm;        // Offset:  352 Size:    16 [unused]
  float2 fMaskBlend_A__uiUNorm;      // Offset:  368 Size:     8 [unused]
  float2 fMaskBlend_B__uiUNorm;      // Offset:  376 Size:     8 [unused]
  float fFilmThickness__uiUNorm;     // Offset:  384 Size:     4 [unused]
  float fFilmBlend__uiUNorm;         // Offset:  388 Size:     4 [unused]
  float fFilmIOR__uiUNorm;           // Offset:  392 Size:     4 [unused]
  float fRefraction__uiUNorm;        // Offset:  396 Size:     4 [unused]
  float fRefractionBlend__uiUNorm;   // Offset:  400 Size:     4 [unused]
  float fVPushScale;                 // Offset:  404 Size:     4
  // align: 408 to 416
  ubyte align5[8];
  float3 fVPushRatio;                // Offset:  416 Size:    12
  // align: 428 to 432
  ubyte align6[4];
  float3 fVpivot;                    // Offset:  432 Size:    12
  float fVPushBlend__uiUNorm;        // Offset:  444 Size:     4
  float fAnimEmitMin;                // Offset:  448 Size:     4 [unused]
  float fAnimEmitSpeed;              // Offset:  452 Size:     4 [unused]
  bool bUseWaveEmit;                 // Offset:  456 Size:     4 [unused]
  float fAnimEmitWave;               // Offset:  460 Size:     4 [unused]
  float4 fAnimEmitControl__uiUNorm;  // Offset:  464 Size:    16 [unused]
  float4 fFurParam__uiUNorm;         // Offset:  480 Size:    16 [unused]
  float fFurTile;                    // Offset:  496 Size:     4 [unused]
  float fAlbedoBlend__uiSNorm;       // Offset:  500 Size:     4 [unused]
  bool bAlbedoOverUVsecondary;       // Offset:  504 Size:     4 [unused]
  float fRimAlphaPower__uiSNorm;     // Offset:  508 Size:     4 [unused]
  float fRimTranslucency__uiUNorm;   // Offset:  512 Size:     4 [unused]
  float fRimNormal__uiUNorm;         // Offset:  516 Size:     4 [unused]
  float fSnowUVTile;                 // Offset:  520 Size:     4 [unused]
  // align: 524 to 528
  ubyte align7[4];
  float4 fSnowBlendColor__uiColor;   // Offset:  528 Size:    16
  float4 fSnowMatControl__uiUNorm;   // Offset:  544 Size:    16 [unused]
  float fMaterialSnowBlendB;         // Offset:  560 Size:     4
  // align: 564 to 576
  ubyte align8[12];
  float4 fSnowControl;               // Offset:  576 Size:    16
};

//CBGodRaysConfiguration : 779.shdr.src
struct CBGodRaysConfiguration {

  bool isUseOcclusionFactorFromTexture;// Offset:    0 Size:     4 [unused]
  bool isUseAlphaOcclusion;          // Offset:    4 Size:     4 [unused]
  bool isUseScaleOcclusion;          // Offset:    8 Size:     4 [unused]
  bool isGrayColor;                  // Offset:   12 Size:     4
  int iThreshold;                    // Offset:   16 Size:     4
};

//CBSSSSS : 8506.shdr.src
struct CBSSSSS {

  float fBlurMaxDist;                // Offset:    0 Size:     4
  float fBlurEdgeSharpness;          // Offset:    4 Size:     4 [unused]
  uint iDiviserFactor;               // Offset:    8 Size:     4
};

//CBSSSSS_Profile : 2306.shdr.src
struct CBSSSSS_Profile {

  float4 fRGBBlurWeight[16];         // Offset:    0 Size:   256
  float4 fBlurOffset[8];             // Offset:  256 Size:   128
  float4 fBlurTargetDist;            // Offset:  384 Size:    16
};

//CBNewDOFFilter2 : 9528.shdr.src
struct CBNewDOFFilter2 {

  float coc_bias;                    // Offset:    0 Size:     4
  float coc_scale;                   // Offset:    4 Size:     4
  float pcoc;                        // Offset:    8 Size:     4 [unused]
  float quad_reduction_threshold;    // Offset:   12 Size:     4 [unused]
  float quater_resolution_threshold; // Offset:   16 Size:     4 [unused]
  float near_blur_scaler;            // Offset:   20 Size:     4 [unused]
  float depth_adjuist_factor;        // Offset:   24 Size:     4 [unused]
  float bokeh_intensity_threshold;   // Offset:   28 Size:     4 [unused]
  float bokeh_shape_factor;          // Offset:   32 Size:     4 [unused]
  float dof_single_pixel_radius;     // Offset:   36 Size:     4 [unused]
  float depth_scale_foreground;      // Offset:   40 Size:     4 [unused]
  float dof_aspect;                  // Offset:   44 Size:     4 [unused]
  bool far_ignore;                   // Offset:   48 Size:     4
  bool near_ignore;                  // Offset:   52 Size:     4
  float far_coef;                    // Offset:   56 Size:     4
  float near_coef;                   // Offset:   60 Size:     4
  float out_alpha;                   // Offset:   64 Size:     4 [unused]
  float fVignettingOffset;           // Offset:   68 Size:     4 [unused]
  float fVignettingPow;              // Offset:   72 Size:     4 [unused]
  bool bVignetting;                  // Offset:   76 Size:     4 [unused]
  float fVignettingEllipticity;      // Offset:   80 Size:     4 [unused]
  float3 fVignettingColor;           // Offset:   84 Size:    12 [unused]
};

//CBMaterialDebug : 2321.shdr.src
struct CBMaterialDebug {

  uint iMaterialDebugView;           // Offset:    0 Size:     4
  bool bMaterialDebugZeroCheck;      // Offset:    4 Size:     4
  // align: 8 to 16
  ubyte align0[8];
  float4 fMaterialDebugColor;        // Offset:   16 Size:    16
};

//CBAtmosphere : 8399.shdr.src
struct CBAtmosphere {

  float3 fLightColor;                // Offset:    0 Size:    12
  // align: 12 to 16
  ubyte align0[4];
  float3 fLightDir;                  // Offset:   16 Size:    12
  float fEarthRadius;                // Offset:   28 Size:     4
  float fHeightOffset;               // Offset:   32 Size:     4
  float fAtmosphereHeight;           // Offset:   36 Size:     4
  float fAtmosphereScaleHeight;      // Offset:   40 Size:     4 [unused]
  // align: 44 to 48
  ubyte align1[4];
  float3 fAtmosphereRayleighK;       // Offset:   48 Size:    12
  // align: 60 to 64
  ubyte align2[4];
  float3 fAtmospherePhaseK;          // Offset:   64 Size:    12
  float fAerosolEffect;              // Offset:   76 Size:     4 [unused]
  float fAerosolHeight;              // Offset:   80 Size:     4
  float fAerosolScaleHeight;         // Offset:   84 Size:     4 [unused]
  float fAerosolMieK;                // Offset:   88 Size:     4
  float fAerosolPhaseK;              // Offset:   92 Size:     4
  float2 fAerosolEccentricity;       // Offset:   96 Size:     8
};

//CBPrimitiveMetaDataOcclusion : 5746.shdr.src
struct CBPrimitiveMetaDataOcclusion {

  float4 fPrimOcclusionSphere;       // Offset:    0 Size:    16
};

//CBSparkleParam : 3733.shdr.src
struct CBSparkleParam {

  float4 fSparkleLightDir;           // Offset:    0 Size:    16
  float fSparkleSize;                // Offset:   16 Size:     4
};

//CBDevelopFlags : 7526.shdr.src
struct CBDevelopFlags {

  int iDispChannel;                  // Offset:    0 Size:     4
  int iDispCubeFace;                 // Offset:    4 Size:     4
  int iDispMode;                     // Offset:    8 Size:     4
  float fDispMipLevel;               // Offset:   12 Size:     4
  float fDispArraySlice;             // Offset:   16 Size:     4
};

//CBMhMaterialEM100Local__disclosure : 2483.shdr.src
struct CBMhMaterialEM100Local__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  bool bBaseColorEmissive;           // Offset:   52 Size:     4 [unused]
  float2 fPaintUVTile;               // Offset:   56 Size:     8 [unused]
  float fAddNormalBlend__uiUNorm;    // Offset:   64 Size:     4 [unused]
  // align: 68 to 80
  ubyte align0[12];
  float4 fAddNormalMaskA__uiSNorm;   // Offset:   80 Size:    16 [unused]
  float4 fAddNormalMaskB__uiSNorm;   // Offset:   96 Size:    16 [unused]
  float fAddNormalMaskC__uiUNorm;    // Offset:  112 Size:     4 [unused]
  float fAddNormalMaskD__uiUNorm;    // Offset:  116 Size:     4 [unused]
  bool bBackFaceShading;             // Offset:  120 Size:     4 [unused]
  bool bBackFaceNormalFilp;          // Offset:  124 Size:     4 [unused]
  float3 fKizuColor__uiColor;        // Offset:  128 Size:    12 [unused]
  // align: 140 to 144
  ubyte align1[4];
  float2 fKizuUVOffset__uiUNorm;     // Offset:  144 Size:     8 [unused]
  float fKizuMultiply;               // Offset:  152 Size:     4 [unused]
  bool bLegendary;                   // Offset:  156 Size:     4 [unused]
  float4 fLegendColor__uiColor;      // Offset:  160 Size:    16 [unused]
  float2 fLegendMetalMask__uiUNorm;  // Offset:  176 Size:     8 [unused]
  float fLegendRoughness;            // Offset:  184 Size:     4 [unused]
  // align: 188 to 192
  ubyte align2[4];
  float3 fLegendFilm__uiUNorm;       // Offset:  192 Size:    12 [unused]
  float fLegendSSSMask__uiUNorm;     // Offset:  204 Size:     4 [unused]
  float3 fLegendHSV__uiSNorm;        // Offset:  208 Size:    12 [unused]
  float fLegendFilmIOR__uiUNorm;     // Offset:  220 Size:     4 [unused]
  float fPartsMaskA__uiUNorm;        // Offset:  224 Size:     4 [unused]
  float fPartsMaskB__uiUNorm;        // Offset:  228 Size:     4 [unused]
  float fPartsMaskC__uiUNorm;        // Offset:  232 Size:     4 [unused]
  float fPartsMaskD__uiUNorm;        // Offset:  236 Size:     4 [unused]
  float fPartsMaskX__uiUNorm;        // Offset:  240 Size:     4 [unused]
  float fPartsMaskY__uiUNorm;        // Offset:  244 Size:     4 [unused]
  float fPartsMaskZ__uiUNorm;        // Offset:  248 Size:     4 [unused]
  float fPartsMaskW__uiUNorm;        // Offset:  252 Size:     4 [unused]
  bool bUseOffset;                   // Offset:  256 Size:     4
  float fOffsetScale;                // Offset:  260 Size:     4
  bool bTranslucentOffset;           // Offset:  264 Size:     4
  bool bAntiSSSEmit;                 // Offset:  268 Size:     4 [unused]
  float3 fFlowDirDir__uiDirection;   // Offset:  272 Size:    12 [unused]
  // align: 284 to 288
  ubyte align3[4];
  float4 fFlowControl__uiUNorm;      // Offset:  288 Size:    16 [unused]
  float fFlowTile;                   // Offset:  304 Size:     4 [unused]
  // align: 308 to 320
  ubyte align4[12];
  float4 fFlowColor__uiColor;        // Offset:  320 Size:    16 [unused]
  float4 fFlowMatControl__uiUNorm;   // Offset:  336 Size:    16 [unused]
  float4 fMaskBlend__uiUNorm;        // Offset:  352 Size:    16 [unused]
  float2 fMaskBlend_A__uiUNorm;      // Offset:  368 Size:     8 [unused]
  float2 fMaskBlend_B__uiUNorm;      // Offset:  376 Size:     8 [unused]
  float fFilmThickness__uiUNorm;     // Offset:  384 Size:     4 [unused]
  float fFilmBlend__uiUNorm;         // Offset:  388 Size:     4 [unused]
  float fFilmIOR__uiUNorm;           // Offset:  392 Size:     4 [unused]
  float fRefraction__uiUNorm;        // Offset:  396 Size:     4 [unused]
  float fRefractionBlend__uiUNorm;   // Offset:  400 Size:     4 [unused]
  float fAnimEmitMin;                // Offset:  404 Size:     4 [unused]
  float fAnimEmitSpeed;              // Offset:  408 Size:     4 [unused]
  bool bUseWaveEmit;                 // Offset:  412 Size:     4 [unused]
  float fAnimEmitWave;               // Offset:  416 Size:     4 [unused]
  // align: 420 to 432
  ubyte align5[12];
  float4 fFurParam__uiUNorm;         // Offset:  432 Size:    16 [unused]
  float fFurTile;                    // Offset:  448 Size:     4 [unused]
  bool bUseFlipUV;                   // Offset:  452 Size:     4 [unused]
  float fRimAlphaPower__uiSNorm;     // Offset:  456 Size:     4 [unused]
  float fRimTranslucency__uiUNorm;   // Offset:  460 Size:     4 [unused]
  float fRimNormal__uiUNorm;         // Offset:  464 Size:     4 [unused]
  float fSnowUVTile;                 // Offset:  468 Size:     4 [unused]
  // align: 472 to 480
  ubyte align6[8];
  float4 fSnowBlendColor__uiColor;   // Offset:  480 Size:    16
  float4 fSnowMatControl__uiUNorm;   // Offset:  496 Size:    16 [unused]
  float fMaterialSnowBlendB;         // Offset:  512 Size:     4
  // align: 516 to 528
  ubyte align7[12];
  float4 fSnowControl;               // Offset:  528 Size:    16
};

//CBMhMaterialLandscapeLocal__disclosure : 2566.shdr.src
struct CBMhMaterialLandscapeLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fDetailNormalBlend__uiUNorm; // Offset:   48 Size:     4 [unused]
  // align: 52 to 64
  ubyte align0[12];
  float4 fUVTransformA;              // Offset:   64 Size:    16 [unused]
  float4 fUVTransformB;              // Offset:   80 Size:    16 [unused]
  float fTranslucency__uiUNorm;      // Offset:   96 Size:     4 [unused]
  // align: 100 to 112
  ubyte align1[12];
  float4 fUVTransformC;              // Offset:  112 Size:    16 [unused]
  float4 fUVTransformD;              // Offset:  128 Size:    16 [unused]
  float4 fUVTransformE;              // Offset:  144 Size:    16 [unused]
  float fParallaxFactor__uiUNorm;    // Offset:  160 Size:     4 [unused]
  float fParallaxMinSampleNum__uiUNorm;// Offset:  164 Size:     4 [unused]
  float fParallaxMaxSampleNum__uiUNorm;// Offset:  168 Size:     4 [unused]
  float fBlendHeightMin__uiUNorm;    // Offset:  172 Size:     4 [unused]
  float fBlendHeightMax__uiUNorm;    // Offset:  176 Size:     4 [unused]
  float fParallaxAttenDistanceBegin; // Offset:  180 Size:     4 [unused]
  float fParallaxAttenDistanceEnd;   // Offset:  184 Size:     4 [unused]
  float fParallaxVertexOffset;       // Offset:  188 Size:     4
  bool bSpecialBlend;                // Offset:  192 Size:     4 [unused]
  bool bWetNormalBlend;              // Offset:  196 Size:     4 [unused]
  float2 fWetNormalBlendRange__uiUNorm;// Offset:  200 Size:     8 [unused]
};

//CBLightShaft_LightParam : 2569.shdr.src
struct CBLightShaft_LightParam {

  float3 fLightShaftPosition;        // Offset:    0 Size:    12
  float fLightShaftBoundingRadius;   // Offset:   12 Size:     4
  float3 fLightShaftDirection;       // Offset:   16 Size:    12
  float fLightShaftFalloff;          // Offset:   28 Size:     4
  uint fLightShaftMisc;              // Offset:   32 Size:     4
  float3 fLightShaftAttenuation;     // Offset:   36 Size:    12
  float3 fLightShaftColor;           // Offset:   48 Size:    12
  float fLightShaftMinRoughness;     // Offset:   60 Size:     4 [unused]
  row_major float4x4 fLightShaftShadowMat;// Offset:   64 Size:    64
  float4 fLightShaftShadowExtra;     // Offset:  128 Size:    16
  uint fLightShaftShadowMapSize;     // Offset:  144 Size:     4
  uint3 fLightShaftShadowMapRegion;  // Offset:  148 Size:    12
};

//CBMhMaterialLandscapeFlowLocal__disclosure : 2653.shdr.src
struct CBMhMaterialLandscapeFlowLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fDetailNormalBlend__uiUNorm; // Offset:   48 Size:     4 [unused]
  // align: 52 to 64
  ubyte align0[12];
  float4 fUVTransformA;              // Offset:   64 Size:    16 [unused]
  float4 fUVTransformB;              // Offset:   80 Size:    16 [unused]
  float fTranslucency__uiUNorm;      // Offset:   96 Size:     4 [unused]
  // align: 100 to 112
  ubyte align1[12];
  float4 fUVTransformC;              // Offset:  112 Size:    16 [unused]
  float4 fUVTransformD;              // Offset:  128 Size:    16 [unused]
  float4 fUVTransformE;              // Offset:  144 Size:    16 [unused]
  float fParallaxFactor__uiUNorm;    // Offset:  160 Size:     4 [unused]
  float fParallaxMinSampleNum__uiUNorm;// Offset:  164 Size:     4 [unused]
  float fParallaxMaxSampleNum__uiUNorm;// Offset:  168 Size:     4 [unused]
  float fBlendHeightMin__uiUNorm;    // Offset:  172 Size:     4 [unused]
  float fBlendHeightMax__uiUNorm;    // Offset:  176 Size:     4 [unused]
  float fParallaxAttenDistanceBegin; // Offset:  180 Size:     4 [unused]
  float fParallaxAttenDistanceEnd;   // Offset:  184 Size:     4 [unused]
  float fParallaxVertexOffset;       // Offset:  188 Size:     4
  bool bSpecialBlend;                // Offset:  192 Size:     4 [unused]
  bool bWetNormalBlend;              // Offset:  196 Size:     4 [unused]
  float2 fWetNormalBlendRange__uiUNorm;// Offset:  200 Size:     8 [unused]
  float3 fFlowDirDir__uiDirection;   // Offset:  208 Size:    12 [unused]
  // align: 220 to 224
  ubyte align2[4];
  float2 fFlowDirUVPhaseShift__uiUNorm;// Offset:  224 Size:     8 [unused]
  float fFlowDirFlowSpeed__uiUNorm;  // Offset:  232 Size:     4 [unused]
  bool bFlowDirVfxNormalBlend;       // Offset:  236 Size:     4 [unused]
};

//CBHermiteCurve : 2660.shdr.src
struct CBHermiteCurve {

  float4 fHermiteParam[8];           // Offset:    0 Size:   128
};

//CBErrorUnit : 2668.shdr.src
struct CBErrorUnit {

  uint2 iErrorUnitAddress;           // Offset:    0 Size:     8
  uint iErrorUnitPass;               // Offset:    8 Size:     4
  uint iErrorUnitPrio;               // Offset:   12 Size:     4
};

//CBSnowFieldBake : 425.shdr.src
struct CBSnowFieldBake {

  uint iSnowFieldBakeAttr;           // Offset:    0 Size:     4
};

//CBHeightToNormal : 6337.shdr.src
struct CBHeightToNormal {

  float fFactor;                     // Offset:    0 Size:     4
};

//CBColorCorrectCube : 9089.shdr.src
struct CBColorCorrectCube {

  float fLinearFactor;               // Offset:    0 Size:     4
  float fDepthNear;                  // Offset:    4 Size:     4 [unused]
  float fDepthFar;                   // Offset:    8 Size:     4 [unused]
};

//CBPrimCopyState : 9816.shdr.src
struct CBPrimCopyState {

  float fNormalSlope;                // Offset:    0 Size:     4
};

//CBColorCorrect : 2810.shdr.src
struct CBColorCorrect {

  row_major float4x4 fMatrix;        // Offset:    0 Size:    64
  float fBlendRate;                  // Offset:   64 Size:     4
  float fVignettingOffset;           // Offset:   68 Size:     4
  float fVignettingPow;              // Offset:   72 Size:     4
  bool bToneCurve;                   // Offset:   76 Size:     4
  bool bVignetting;                  // Offset:   80 Size:     4
  bool bVignettingEllipse;           // Offset:   84 Size:     4
  float fScreenAlpha;                // Offset:   88 Size:     4
};

//CBMhMaterialEM115Local__disclosure : 2874.shdr.src
struct CBMhMaterialEM115Local__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  bool bBaseColorEmissive;           // Offset:   52 Size:     4 [unused]
  float2 fPaintUVTile;               // Offset:   56 Size:     8 [unused]
  float fAddNormalBlend__uiUNorm;    // Offset:   64 Size:     4 [unused]
  // align: 68 to 80
  ubyte align0[12];
  float4 fAddNormalMaskA__uiSNorm;   // Offset:   80 Size:    16 [unused]
  float4 fAddNormalMaskB__uiSNorm;   // Offset:   96 Size:    16 [unused]
  float fAddNormalMaskC__uiUNorm;    // Offset:  112 Size:     4 [unused]
  float fAddNormalMaskD__uiUNorm;    // Offset:  116 Size:     4 [unused]
  bool bBackFaceShading;             // Offset:  120 Size:     4 [unused]
  bool bBackFaceNormalFilp;          // Offset:  124 Size:     4 [unused]
  float3 fKizuColor__uiColor;        // Offset:  128 Size:    12 [unused]
  // align: 140 to 144
  ubyte align1[4];
  float2 fKizuUVOffset__uiUNorm;     // Offset:  144 Size:     8 [unused]
  float fKizuMultiply;               // Offset:  152 Size:     4 [unused]
  bool bLegendary;                   // Offset:  156 Size:     4 [unused]
  float4 fLegendColor__uiColor;      // Offset:  160 Size:    16 [unused]
  float2 fLegendMetalMask__uiUNorm;  // Offset:  176 Size:     8 [unused]
  float fLegendRoughness;            // Offset:  184 Size:     4 [unused]
  // align: 188 to 192
  ubyte align2[4];
  float3 fLegendFilm__uiUNorm;       // Offset:  192 Size:    12 [unused]
  float fLegendSSSMask__uiUNorm;     // Offset:  204 Size:     4 [unused]
  float3 fLegendHSV__uiSNorm;        // Offset:  208 Size:    12 [unused]
  float fLegendFilmIOR__uiUNorm;     // Offset:  220 Size:     4 [unused]
  float fPartsMaskA__uiUNorm;        // Offset:  224 Size:     4 [unused]
  float fPartsMaskB__uiUNorm;        // Offset:  228 Size:     4 [unused]
  float fPartsMaskC__uiUNorm;        // Offset:  232 Size:     4 [unused]
  float fPartsMaskD__uiUNorm;        // Offset:  236 Size:     4 [unused]
  float fPartsMaskX__uiUNorm;        // Offset:  240 Size:     4 [unused]
  float fPartsMaskY__uiUNorm;        // Offset:  244 Size:     4 [unused]
  float fPartsMaskZ__uiUNorm;        // Offset:  248 Size:     4 [unused]
  float fPartsMaskW__uiUNorm;        // Offset:  252 Size:     4 [unused]
  bool bUseOffset;                   // Offset:  256 Size:     4
  float fOffsetScale;                // Offset:  260 Size:     4
  bool bTranslucentOffset;           // Offset:  264 Size:     4
  bool bAntiSSSEmit;                 // Offset:  268 Size:     4 [unused]
  float3 fFlowDirDir__uiDirection;   // Offset:  272 Size:    12 [unused]
  // align: 284 to 288
  ubyte align3[4];
  float4 fFlowControl__uiUNorm;      // Offset:  288 Size:    16 [unused]
  float fFlowTile;                   // Offset:  304 Size:     4 [unused]
  // align: 308 to 320
  ubyte align4[12];
  float4 fFlowColor__uiColor;        // Offset:  320 Size:    16 [unused]
  float4 fFlowMatControl__uiUNorm;   // Offset:  336 Size:    16 [unused]
  float4 fDisplaceControl;           // Offset:  352 Size:    16
  float fDispSpeed;                  // Offset:  368 Size:     4
  // align: 372 to 384
  ubyte align5[12];
  float4 fBlendBaseMapFactor__uiColor;// Offset:  384 Size:    16 [unused]
  bool bUseSpecialMode;              // Offset:  400 Size:     4 [unused]
  float fFilmThickness__uiUNorm;     // Offset:  404 Size:     4 [unused]
  float fFilmBlend__uiUNorm;         // Offset:  408 Size:     4 [unused]
  float fFilmIOR__uiUNorm;           // Offset:  412 Size:     4 [unused]
  float fRefraction__uiUNorm;        // Offset:  416 Size:     4 [unused]
  float fRefractionBlend__uiUNorm;   // Offset:  420 Size:     4 [unused]
  float fAnimEmitMin;                // Offset:  424 Size:     4 [unused]
  float fAnimEmitSpeed;              // Offset:  428 Size:     4 [unused]
  bool bUseWaveEmit;                 // Offset:  432 Size:     4 [unused]
  float fAnimEmitWave;               // Offset:  436 Size:     4 [unused]
  // align: 440 to 448
  ubyte align6[8];
  float4 fFurParam__uiUNorm;         // Offset:  448 Size:    16 [unused]
  float fFurTile;                    // Offset:  464 Size:     4 [unused]
  float fRimAlphaPower__uiSNorm;     // Offset:  468 Size:     4 [unused]
  float fRimTranslucency__uiUNorm;   // Offset:  472 Size:     4 [unused]
  float fRimNormal__uiUNorm;         // Offset:  476 Size:     4 [unused]
  float fSnowUVTile;                 // Offset:  480 Size:     4 [unused]
  // align: 484 to 496
  ubyte align7[12];
  float4 fSnowBlendColor__uiColor;   // Offset:  496 Size:    16
  float4 fSnowMatControl__uiUNorm;   // Offset:  512 Size:    16 [unused]
  float fMaterialSnowBlendB;         // Offset:  528 Size:     4
  // align: 532 to 544
  ubyte align8[12];
  float4 fSnowControl;               // Offset:  544 Size:    16
};

//CBMhMaterialFakeEyeLocal__disclosure : 2953.shdr.src
struct CBMhMaterialFakeEyeLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fDetailNormalBlend__uiUNorm; // Offset:   48 Size:     4 [unused]
  // align: 52 to 64
  ubyte align0[12];
  float4 fUVTransformA;              // Offset:   64 Size:    16
  float4 fUVTransformB;              // Offset:   80 Size:    16 [unused]
  float fTranslucency__uiUNorm;      // Offset:   96 Size:     4 [unused]
  float fParallaxFactor__uiUNorm;    // Offset:  100 Size:     4
  float fUV_Blend__uiUNorm;          // Offset:  104 Size:     4
  bool bBaseColorEmissive;           // Offset:  108 Size:     4 [unused]
};

//CBWaterWaveMaterial : 8116.shdr.src
struct CBWaterWaveMaterial {

  row_major float4x4 fReflectionViewProj;// Offset:    0 Size:    64 [unused]
  float2 fUserNormalTiling;          // Offset:   64 Size:     8
  float fUserNormalIntensity;        // Offset:   72 Size:     4
  float fUserNormalMoveSpeed;        // Offset:   76 Size:     4
  float2 fUserNormalMoveDirection;   // Offset:   80 Size:     8
  float2 fUserNormal2Tiling;         // Offset:   88 Size:     8
  float fUserNormal2Intensity;       // Offset:   96 Size:     4
  float fUserNormal2MoveSpeed;       // Offset:  100 Size:     4
  float2 fUserNormal2MoveDirection;  // Offset:  104 Size:     8
  float fInvDepthMax;                // Offset:  112 Size:     4
  float fReflectionDistortion;       // Offset:  116 Size:     4 [unused]
  float fFresnelBias;                // Offset:  120 Size:     4
  float fHorizonBias;                // Offset:  124 Size:     4
  float3 fExtinctionCoefficient;     // Offset:  128 Size:    12
  float fMurkiness;                  // Offset:  140 Size:     4
  float3 fWaterColor;                // Offset:  144 Size:    12
  float fRefractionDistortion;       // Offset:  156 Size:     4
  float2 fCausticsTiling;            // Offset:  160 Size:     8
  float fCausticsIntensity;          // Offset:  168 Size:     4
  float fCausticsMoveSpeed;          // Offset:  172 Size:     4
  float2 fCausticsMoveDirection;     // Offset:  176 Size:     8
  float fCausticsDensityLow;         // Offset:  184 Size:     4
  float fRefactionIndex;             // Offset:  188 Size:     4
  float2 fSlopeVariance;             // Offset:  192 Size:     8
  float2 fSunlightReflectanceRange;  // Offset:  200 Size:     8
  float fReflectanceBiasRate;        // Offset:  208 Size:     4
  float fInvDepthFade;               // Offset:  212 Size:     4
  float fSunlightReflectionIntensity;// Offset:  216 Size:     4
  float fCubemapBlendRate;           // Offset:  220 Size:     4
  uint iLightGroup;                  // Offset:  224 Size:     4
};

//CBStarrySky : 8773.shdr.src
struct CBStarrySky {

  row_major float4x4 fRotMatrix;     // Offset:    0 Size:    64 [unused]
  float2 fSize;                      // Offset:   64 Size:     8
  float fFactor;                     // Offset:   72 Size:     4 [unused]
  float fIntensity;                  // Offset:   76 Size:     4 [unused]
  float fScintillation;              // Offset:   80 Size:     4 [unused]
};

//CBMhMaterialEM109Local__disclosure : 3105.shdr.src
struct CBMhMaterialEM109Local__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  bool bBaseColorEmissive;           // Offset:   52 Size:     4 [unused]
  float2 fPaintUVTile;               // Offset:   56 Size:     8 [unused]
  float fAddNormalBlend__uiUNorm;    // Offset:   64 Size:     4 [unused]
  // align: 68 to 80
  ubyte align0[12];
  float4 fAddNormalMaskA__uiSNorm;   // Offset:   80 Size:    16 [unused]
  float4 fAddNormalMaskB__uiSNorm;   // Offset:   96 Size:    16 [unused]
  float fAddNormalMaskC__uiUNorm;    // Offset:  112 Size:     4 [unused]
  float fAddNormalMaskD__uiUNorm;    // Offset:  116 Size:     4 [unused]
  bool bBackFaceShading;             // Offset:  120 Size:     4 [unused]
  bool bBackFaceNormalFilp;          // Offset:  124 Size:     4 [unused]
  float3 fKizuColor__uiColor;        // Offset:  128 Size:    12 [unused]
  // align: 140 to 144
  ubyte align1[4];
  float2 fKizuUVOffset__uiUNorm;     // Offset:  144 Size:     8 [unused]
  float fKizuMultiply;               // Offset:  152 Size:     4 [unused]
  bool bLegendary;                   // Offset:  156 Size:     4 [unused]
  float4 fLegendColor__uiColor;      // Offset:  160 Size:    16 [unused]
  float2 fLegendMetalMask__uiUNorm;  // Offset:  176 Size:     8 [unused]
  float fLegendRoughness;            // Offset:  184 Size:     4 [unused]
  // align: 188 to 192
  ubyte align2[4];
  float3 fLegendFilm__uiUNorm;       // Offset:  192 Size:    12 [unused]
  float fLegendSSSMask__uiUNorm;     // Offset:  204 Size:     4 [unused]
  float3 fLegendHSV__uiSNorm;        // Offset:  208 Size:    12 [unused]
  float fLegendFilmIOR__uiUNorm;     // Offset:  220 Size:     4 [unused]
  float fPartsMaskA__uiUNorm;        // Offset:  224 Size:     4 [unused]
  float fPartsMaskB__uiUNorm;        // Offset:  228 Size:     4 [unused]
  float fPartsMaskC__uiUNorm;        // Offset:  232 Size:     4 [unused]
  float fPartsMaskD__uiUNorm;        // Offset:  236 Size:     4 [unused]
  float fPartsMaskX__uiUNorm;        // Offset:  240 Size:     4 [unused]
  float fPartsMaskY__uiUNorm;        // Offset:  244 Size:     4 [unused]
  float fPartsMaskZ__uiUNorm;        // Offset:  248 Size:     4 [unused]
  float fPartsMaskW__uiUNorm;        // Offset:  252 Size:     4 [unused]
  bool bUseOffset;                   // Offset:  256 Size:     4
  float fOffsetScale;                // Offset:  260 Size:     4
  bool bTranslucentOffset;           // Offset:  264 Size:     4
  bool bAntiSSSEmit;                 // Offset:  268 Size:     4 [unused]
  float3 fFlowDirDir__uiDirection;   // Offset:  272 Size:    12 [unused]
  // align: 284 to 288
  ubyte align3[4];
  float4 fFlowControl__uiUNorm;      // Offset:  288 Size:    16 [unused]
  float fFlowTile;                   // Offset:  304 Size:     4 [unused]
  // align: 308 to 320
  ubyte align4[12];
  float4 fFlowColor__uiColor;        // Offset:  320 Size:    16 [unused]
  float4 fFlowMatControl__uiUNorm;   // Offset:  336 Size:    16 [unused]
  float4 fDisplaceControl;           // Offset:  352 Size:    16
  float fDispSpeed;                  // Offset:  368 Size:     4
  float fFilmThickness__uiUNorm;     // Offset:  372 Size:     4 [unused]
  float fFilmBlend__uiUNorm;         // Offset:  376 Size:     4 [unused]
  float fFilmIOR__uiUNorm;           // Offset:  380 Size:     4 [unused]
  float fRefraction__uiUNorm;        // Offset:  384 Size:     4 [unused]
  float fRefractionBlend__uiUNorm;   // Offset:  388 Size:     4 [unused]
  bool bUseBlendDisplace;            // Offset:  392 Size:     4
  float fVAnimV__uiUNorm;            // Offset:  396 Size:     4
  float fVAnimPosScale;              // Offset:  400 Size:     4
  bool bInvertX;                     // Offset:  404 Size:     4
  float fAnimEmitMin;                // Offset:  408 Size:     4 [unused]
  float fAnimEmitSpeed;              // Offset:  412 Size:     4 [unused]
  bool bUseWaveEmit;                 // Offset:  416 Size:     4 [unused]
  float fAnimEmitWave;               // Offset:  420 Size:     4 [unused]
  // align: 424 to 432
  ubyte align5[8];
  float4 fFurParam__uiUNorm;         // Offset:  432 Size:    16 [unused]
  float fFurTile;                    // Offset:  448 Size:     4 [unused]
  float fRimAlphaPower__uiSNorm;     // Offset:  452 Size:     4 [unused]
  float fRimTranslucency__uiUNorm;   // Offset:  456 Size:     4 [unused]
  float fRimNormal__uiUNorm;         // Offset:  460 Size:     4 [unused]
  float fSnowUVTile;                 // Offset:  464 Size:     4 [unused]
  // align: 468 to 480
  ubyte align6[12];
  float4 fSnowBlendColor__uiColor;   // Offset:  480 Size:    16
  float4 fSnowMatControl__uiUNorm;   // Offset:  496 Size:    16 [unused]
  float fMaterialSnowBlendB;         // Offset:  512 Size:     4
  // align: 516 to 528
  ubyte align7[12];
  float4 fSnowControl;               // Offset:  528 Size:    16
};

//CBUpdateBufferFromMeshConditions : 9491.shdr.src
struct CBUpdateBufferFromMeshConditions {

  float3 fConditionsBlendAxis;       // Offset:    0 Size:    12
  float fConditionsBlendHeightLimit; // Offset:   12 Size:     4
  float fConditionsBlendHeightLimitOffset;// Offset:   16 Size:     4
  float fConditionsBlendAngleLimit;  // Offset:   20 Size:     4
  float fConditionsBlendAngleScale;  // Offset:   24 Size:     4
  float fConditionsBlendAdd;         // Offset:   28 Size:     4
};

//CBMhMaterialSZK001Local__disclosure : 3171.shdr.src
struct CBMhMaterialSZK001Local__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  bool bBaseColorEmissive;           // Offset:   52 Size:     4 [unused]
  float2 fPaintUVTile;               // Offset:   56 Size:     8 [unused]
  float fAddNormalBlend__uiUNorm;    // Offset:   64 Size:     4 [unused]
  // align: 68 to 80
  ubyte align0[12];
  float4 fAddNormalMaskA__uiSNorm;   // Offset:   80 Size:    16 [unused]
  float4 fAddNormalMaskB__uiSNorm;   // Offset:   96 Size:    16 [unused]
  float fAddNormalMaskC__uiUNorm;    // Offset:  112 Size:     4 [unused]
  float fAddNormalMaskD__uiUNorm;    // Offset:  116 Size:     4 [unused]
  bool bBackFaceShading;             // Offset:  120 Size:     4 [unused]
  bool bBackFaceNormalFilp;          // Offset:  124 Size:     4 [unused]
  float3 fKizuColor__uiColor;        // Offset:  128 Size:    12 [unused]
  // align: 140 to 144
  ubyte align1[4];
  float2 fKizuUVOffset__uiUNorm;     // Offset:  144 Size:     8 [unused]
  float fKizuMultiply;               // Offset:  152 Size:     4 [unused]
  bool bLegendary;                   // Offset:  156 Size:     4 [unused]
  float4 fLegendColor__uiColor;      // Offset:  160 Size:    16 [unused]
  float2 fLegendMetalMask__uiUNorm;  // Offset:  176 Size:     8 [unused]
  float fLegendRoughness;            // Offset:  184 Size:     4 [unused]
  // align: 188 to 192
  ubyte align2[4];
  float3 fLegendFilm__uiUNorm;       // Offset:  192 Size:    12 [unused]
  float fLegendSSSMask__uiUNorm;     // Offset:  204 Size:     4 [unused]
  float3 fLegendHSV__uiSNorm;        // Offset:  208 Size:    12 [unused]
  float fLegendFilmIOR__uiUNorm;     // Offset:  220 Size:     4 [unused]
  float fPartsMaskA__uiUNorm;        // Offset:  224 Size:     4 [unused]
  float fPartsMaskB__uiUNorm;        // Offset:  228 Size:     4 [unused]
  float fPartsMaskC__uiUNorm;        // Offset:  232 Size:     4 [unused]
  float fPartsMaskD__uiUNorm;        // Offset:  236 Size:     4 [unused]
  float fPartsMaskX__uiUNorm;        // Offset:  240 Size:     4 [unused]
  float fPartsMaskY__uiUNorm;        // Offset:  244 Size:     4 [unused]
  float fPartsMaskZ__uiUNorm;        // Offset:  248 Size:     4 [unused]
  float fPartsMaskW__uiUNorm;        // Offset:  252 Size:     4 [unused]
  bool bUseOffset;                   // Offset:  256 Size:     4
  float fOffsetScale;                // Offset:  260 Size:     4
  bool bTranslucentOffset;           // Offset:  264 Size:     4
  bool bAntiSSSEmit;                 // Offset:  268 Size:     4 [unused]
  float3 fFlowDirDir__uiDirection;   // Offset:  272 Size:    12 [unused]
  // align: 284 to 288
  ubyte align3[4];
  float4 fFlowControl__uiUNorm;      // Offset:  288 Size:    16 [unused]
  float fFlowTile;                   // Offset:  304 Size:     4 [unused]
  // align: 308 to 320
  ubyte align4[12];
  float4 fFlowColor__uiColor;        // Offset:  320 Size:    16 [unused]
  float4 fFlowMatControl__uiUNorm;   // Offset:  336 Size:    16 [unused]
  float fFilmThickness__uiUNorm;     // Offset:  352 Size:     4 [unused]
  float fFilmBlend__uiUNorm;         // Offset:  356 Size:     4 [unused]
  float fFilmIOR__uiUNorm;           // Offset:  360 Size:     4 [unused]
  float fRefraction__uiUNorm;        // Offset:  364 Size:     4 [unused]
  float fRefractionBlend__uiUNorm;   // Offset:  368 Size:     4 [unused]
  float fAnimEmitMin;                // Offset:  372 Size:     4 [unused]
  float fAnimEmitSpeed;              // Offset:  376 Size:     4 [unused]
  bool bUseWaveEmit;                 // Offset:  380 Size:     4 [unused]
  float fAnimEmitWave;               // Offset:  384 Size:     4 [unused]
  // align: 388 to 400
  ubyte align5[12];
  float4 fFurParam__uiUNorm;         // Offset:  400 Size:    16 [unused]
  float fFurTile;                    // Offset:  416 Size:     4 [unused]
  float fAlbedoBlend__uiUNorm;       // Offset:  420 Size:     4 [unused]
  // align: 424 to 432
  ubyte align6[8];
  float4 fBlendBaseMapFactor__uiColor;// Offset:  432 Size:    16 [unused]
  float4 fBlendMatFactor;            // Offset:  448 Size:    16 [unused]
  bool bAlbedoOverUVsecondary;       // Offset:  464 Size:     4 [unused]
  bool bUseSpecialMode;              // Offset:  468 Size:     4 [unused]
  float fRimAlphaPower__uiSNorm;     // Offset:  472 Size:     4 [unused]
  float fRimTranslucency__uiUNorm;   // Offset:  476 Size:     4 [unused]
  float fRimNormal__uiUNorm;         // Offset:  480 Size:     4 [unused]
  float fSnowUVTile;                 // Offset:  484 Size:     4 [unused]
  // align: 488 to 496
  ubyte align7[8];
  float4 fSnowBlendColor__uiColor;   // Offset:  496 Size:    16
  float4 fSnowMatControl__uiUNorm;   // Offset:  512 Size:    16 [unused]
  float fMaterialSnowBlendB;         // Offset:  528 Size:     4
  // align: 532 to 544
  ubyte align8[12];
  float4 fSnowControl;               // Offset:  544 Size:    16
};

//CBLGTPRBGen : 9361.shdr.src
struct CBLGTPRBGen {

  uint iCurrentIndex;                // Offset:    0 Size:     4
  uint iWindowType;                  // Offset:    4 Size:     4
};

//CBLUTMaking : 4731.shdr.src
struct CBLUTMaking {

  uint iLUTSize;                     // Offset:    0 Size:     4
  uint iMaxWidth;                    // Offset:    4 Size:     4
  float fMaxLuminance;               // Offset:    8 Size:     4
  bool bIsPQToLinear;                // Offset:   12 Size:     4
};

//CBSnowPreProcess : 8591.shdr.src
struct CBSnowPreProcess {

  float fNoiseBlendSVScale;          // Offset:    0 Size:     4
  float fNoiseHeightScale;           // Offset:    4 Size:     4
  float fNoiseBlendBias;             // Offset:    8 Size:     4
};

//CBBloomSettings : 3946.shdr.src
struct CBBloomSettings {

  float4 AdjustParams;               // Offset:    0 Size:    16
  float4 CenterAndScale;             // Offset:   16 Size:    16 [unused]
  float4 Coefficient;                // Offset:   32 Size:    16 [unused]
  float4 TexHalfSizes;               // Offset:   48 Size:    16 [unused]
};

//CBPrimitiveDebug : 3249.shdr.src
struct CBPrimitiveDebug {

  float3 fWorldOffset;               // Offset:    0 Size:    12
};

//CBWaterDebug : 576.shdr.src
struct CBWaterDebug {

  int iWaterDebugMode;               // Offset:    0 Size:     4
};

//CBSnowField2Debug : 326.shdr.src
struct CBSnowField2Debug {

  uint iSnowField2DebugType;         // Offset:    0 Size:     4
};

//CBMaterialSnow__disclosure : 3370.shdr.src
struct CBMaterialSnow__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   32 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fEdgesPerScreenHeight;       // Offset:   48 Size:     4 [unused]
  float3 fWorldPositionMax;          // Offset:   52 Size:    12
  float3 fWorldPositionMin;          // Offset:   64 Size:    12
  float fHeightScale;                // Offset:   76 Size:     4 [unused]
};

//CBGUIDevelop : 334.shdr.src
struct CBGUIDevelop {

  float3 fGUIOverlapDrawColor;       // Offset:    0 Size:    12
};

//CBToneMapping : 3371.shdr.src
struct CBToneMapping {

  uint iToneMapType;                 // Offset:    0 Size:     4
  bool bLuminanceVersion;            // Offset:    4 Size:     4
  float fShouldStr;                  // Offset:    8 Size:     4
  float fLinearStr;                  // Offset:   12 Size:     4
  float fIntermediate;               // Offset:   16 Size:     4
  float fS1;                         // Offset:   20 Size:     4
  float fS2;                         // Offset:   24 Size:     4
  float fS3;                         // Offset:   28 Size:     4
  float fS4;                         // Offset:   32 Size:     4
  uint iLUTSize;                     // Offset:   36 Size:     4
  bool bIsLinearToPQ;                // Offset:   40 Size:     4
  bool bIsPQToLinear;                // Offset:   44 Size:     4
  bool bEnableColorGrading;          // Offset:   48 Size:     4
};

//CB_TemporalAA : 6076.shdr.src
struct CB_TemporalAA {

  float2 fReprojectionOffset;        // Offset:    0 Size:     8
  float2 fReprojectionScale;         // Offset:    8 Size:     8
  float2 fTemporalOffset;            // Offset:   16 Size:     8
  float2 fTemporalScale;             // Offset:   24 Size:     8
  float2 fTemporalClampMin;          // Offset:   32 Size:     8
  float2 fTemporalClampMax;          // Offset:   40 Size:     8
  float fBlendRate;                  // Offset:   48 Size:     4
  bool bVelocityBase;                // Offset:   52 Size:     4
};

//CBMhMaterialNPCEyeLocal__disclosure : 3419.shdr.src
struct CBMhMaterialNPCEyeLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  bool bBaseColorEmissive;           // Offset:   52 Size:     4 [unused]
  bool bBackFaceNormalFilp;          // Offset:   56 Size:     4 [unused]
  float fAnimEmitMin;                // Offset:   60 Size:     4 [unused]
  float fAnimEmitSpeed;              // Offset:   64 Size:     4 [unused]
  float fParallaxFactor__uiUNorm;    // Offset:   68 Size:     4
  float fDetailNormalBlend__uiUNorm; // Offset:   72 Size:     4 [unused]
  // align: 76 to 80
  ubyte align0[4];
  float4 fUVTransformDetailNormal;   // Offset:   80 Size:    16 [unused]
};

//CBSpeedTreeLocalWind : 7364.shdr.src
struct CBSpeedTreeLocalWind {

  struct CBSpeedTreeLocalWind_SpeedTreeLocalWind
  {
      float3 pos;                    // Offset:    0
      float radius;                  // Offset:   12
      float3 dir;                    // Offset:   16
      float strength;                // Offset:   28
      float oscillateStrength;       // Offset:   32
      float oscillateSpeed;          // Offset:   36
      uint moveType;                 // Offset:   40
      float padding;                 // Offset:   44
  } gSpeedTreeLocalWindBuffer[128];  // Offset:    0 Size:  6144
};

//CBGodRaysIterator : 6159.shdr.src
struct CBGodRaysIterator {

  float4 fGodRayParams[8];           // Offset:    0 Size:   128
};

//CBCAS : 9471.shdr.src
struct CBCAS {

  uint4 iConst0;                     // Offset:    0 Size:    16 [unused]
  uint4 iConst1;                     // Offset:   16 Size:    16
};

//CBSnowFieldGeometry : 9892.shdr.src
struct CBSnowFieldGeometry {

  float fEdgesPerScreenHeight;       // Offset:    0 Size:     4 [unused]
  float3 fWorldPositionMax;          // Offset:    4 Size:    12
  float3 fWorldPositionMin;          // Offset:   16 Size:    12
  float fShovelCornerBlendRate;      // Offset:   28 Size:     4
};

//CBSnowShoveler : 3494.shdr.src
struct CBSnowShoveler {

  float4 fMinMaxRangeWorldY;         // Offset:    0 Size:    16
};

//CBSnowFall : 3494.shdr.src
struct CBSnowFall {

  float SnowAmount;                  // Offset:    0 Size:     4
};

//CBMhMaterialEM002Local__disclosure : 3581.shdr.src
struct CBMhMaterialEM002Local__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  bool bBaseColorEmissive;           // Offset:   52 Size:     4 [unused]
  float2 fPaintUVTile;               // Offset:   56 Size:     8 [unused]
  float fAddNormalBlend__uiUNorm;    // Offset:   64 Size:     4 [unused]
  // align: 68 to 80
  ubyte align0[12];
  float4 fAddNormalMaskA__uiSNorm;   // Offset:   80 Size:    16 [unused]
  float4 fAddNormalMaskB__uiSNorm;   // Offset:   96 Size:    16 [unused]
  float fAddNormalMaskC__uiUNorm;    // Offset:  112 Size:     4 [unused]
  float fAddNormalMaskD__uiUNorm;    // Offset:  116 Size:     4 [unused]
  bool bBackFaceShading;             // Offset:  120 Size:     4 [unused]
  bool bBackFaceNormalFilp;          // Offset:  124 Size:     4 [unused]
  float3 fKizuColor__uiColor;        // Offset:  128 Size:    12 [unused]
  // align: 140 to 144
  ubyte align1[4];
  float2 fKizuUVOffset__uiUNorm;     // Offset:  144 Size:     8 [unused]
  float fKizuMultiply;               // Offset:  152 Size:     4 [unused]
  bool bLegendary;                   // Offset:  156 Size:     4 [unused]
  float4 fLegendColor__uiColor;      // Offset:  160 Size:    16 [unused]
  float2 fLegendMetalMask__uiUNorm;  // Offset:  176 Size:     8 [unused]
  float fLegendRoughness;            // Offset:  184 Size:     4 [unused]
  // align: 188 to 192
  ubyte align2[4];
  float3 fLegendFilm__uiUNorm;       // Offset:  192 Size:    12 [unused]
  float fLegendSSSMask__uiUNorm;     // Offset:  204 Size:     4 [unused]
  float3 fLegendHSV__uiSNorm;        // Offset:  208 Size:    12 [unused]
  float fLegendFilmIOR__uiUNorm;     // Offset:  220 Size:     4 [unused]
  float fPartsMaskA__uiUNorm;        // Offset:  224 Size:     4 [unused]
  float fPartsMaskB__uiUNorm;        // Offset:  228 Size:     4 [unused]
  float fPartsMaskC__uiUNorm;        // Offset:  232 Size:     4 [unused]
  float fPartsMaskD__uiUNorm;        // Offset:  236 Size:     4 [unused]
  float fPartsMaskX__uiUNorm;        // Offset:  240 Size:     4 [unused]
  float fPartsMaskY__uiUNorm;        // Offset:  244 Size:     4 [unused]
  float fPartsMaskZ__uiUNorm;        // Offset:  248 Size:     4 [unused]
  float fPartsMaskW__uiUNorm;        // Offset:  252 Size:     4 [unused]
  bool bUseOffset;                   // Offset:  256 Size:     4
  float fOffsetScale;                // Offset:  260 Size:     4
  bool bTranslucentOffset;           // Offset:  264 Size:     4
  bool bAntiSSSEmit;                 // Offset:  268 Size:     4 [unused]
  float3 fFlowDirDir__uiDirection;   // Offset:  272 Size:    12 [unused]
  // align: 284 to 288
  ubyte align3[4];
  float4 fFlowControl__uiUNorm;      // Offset:  288 Size:    16 [unused]
  float fFlowTile;                   // Offset:  304 Size:     4 [unused]
  // align: 308 to 320
  ubyte align4[12];
  float4 fFlowColor__uiColor;        // Offset:  320 Size:    16 [unused]
  float4 fFlowMatControl__uiUNorm;   // Offset:  336 Size:    16 [unused]
  float4 fMaskBlend__uiUNorm;        // Offset:  352 Size:    16 [unused]
  float2 fMaskBlend_A__uiUNorm;      // Offset:  368 Size:     8 [unused]
  float2 fMaskBlend_B__uiUNorm;      // Offset:  376 Size:     8 [unused]
  float fFilmThickness__uiUNorm;     // Offset:  384 Size:     4 [unused]
  float fFilmBlend__uiUNorm;         // Offset:  388 Size:     4 [unused]
  float fFilmIOR__uiUNorm;           // Offset:  392 Size:     4 [unused]
  float fRefraction__uiUNorm;        // Offset:  396 Size:     4 [unused]
  float fRefractionBlend__uiUNorm;   // Offset:  400 Size:     4 [unused]
  float fAnimEmitMin;                // Offset:  404 Size:     4 [unused]
  float fAnimEmitSpeed;              // Offset:  408 Size:     4 [unused]
  bool bUseWaveEmit;                 // Offset:  412 Size:     4 [unused]
  float fAnimEmitWave;               // Offset:  416 Size:     4 [unused]
  float fRimAlphaPower__uiSNorm;     // Offset:  420 Size:     4 [unused]
  float fRimTranslucency__uiUNorm;   // Offset:  424 Size:     4 [unused]
  float fRimNormal__uiUNorm;         // Offset:  428 Size:     4 [unused]
  float fSnowUVTile;                 // Offset:  432 Size:     4 [unused]
  // align: 436 to 448
  ubyte align5[12];
  float4 fSnowBlendColor__uiColor;   // Offset:  448 Size:    16
  float4 fSnowMatControl__uiUNorm;   // Offset:  464 Size:    16 [unused]
  float fMaterialSnowBlendB;         // Offset:  480 Size:     4
  // align: 484 to 496
  ubyte align6[12];
  float4 fSnowControl;               // Offset:  496 Size:    16
};

//CBMhMaterialNPCHairLocal__disclosure : 3686.shdr.src
struct CBMhMaterialNPCHairLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  bool bBaseColorEmissive;           // Offset:   52 Size:     4 [unused]
  bool bBackFaceNormalFilp;          // Offset:   56 Size:     4 [unused]
  float fAnimEmitMin;                // Offset:   60 Size:     4 [unused]
  float fAnimEmitSpeed;              // Offset:   64 Size:     4 [unused]
  // align: 68 to 80
  ubyte align0[12];
  float4 fPrimaryColor__uiColor;     // Offset:   80 Size:    16 [unused]
  float4 fSecondaryColor__uiColor;   // Offset:   96 Size:    16 [unused]
  float fPrimaryExpo__uiUNorm;       // Offset:  112 Size:     4 [unused]
  float fSecondaryExpo__uiUNorm;     // Offset:  116 Size:     4 [unused]
  float fPrimaryShift__uiSNorm;      // Offset:  120 Size:     4 [unused]
  float fSecondaryShift__uiSNorm;    // Offset:  124 Size:     4 [unused]
  float fShininess;                  // Offset:  128 Size:     4 [unused]
  float3 fFakeLight__uiDirection;    // Offset:  132 Size:    12 [unused]
  float fFurNMHeight;                // Offset:  144 Size:     4 [unused]
  // align: 148 to 160
  ubyte align1[12];
  float4 fFurParam__uiUNorm;         // Offset:  160 Size:    16 [unused]
  float fFurTile;                    // Offset:  176 Size:     4 [unused]
  // align: 180 to 192
  ubyte align2[12];
  float4 fVertexAO__uiColor;         // Offset:  192 Size:    16 [unused]
  float fVColorNormalBlend__uiUNorm; // Offset:  208 Size:     4
  float fRimWidth__uiUNorm;          // Offset:  212 Size:     4 [unused]
  float fRimNormalBlend__uiUNorm;    // Offset:  216 Size:     4 [unused]
  bool bUseRimTranslucency;          // Offset:  220 Size:     4 [unused]
  bool bUseOffset;                   // Offset:  224 Size:     4
  float fInnerOffsetScale;           // Offset:  228 Size:     4
  float fDetailNormalBlend__uiUNorm; // Offset:  232 Size:     4 [unused]
  // align: 236 to 240
  ubyte align3[4];
  float4 fUVTransformDetailNormal;   // Offset:  240 Size:    16 [unused]
};

//CBBokehAutoFocus : 3713.shdr.src
struct CBBokehAutoFocus {

  uint2 SelectedFocusPoint;          // Offset:    0 Size:     8
};

//CBTexturePosScaleFactor : 5740.shdr.src
struct CBTexturePosScaleFactor {

  float4 drawStage;                  // Offset:    0 Size:    16
  float4 sceneFFTStage;              // Offset:   16 Size:    16 [unused]
  float4 kernelFFTStage;             // Offset:   32 Size:    16 [unused]
};

//CBMhMaterialSimpleLocal__disclosure : 3785.shdr.src
struct CBMhMaterialSimpleLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  // align: 52 to 64
  ubyte align0[12];
  float4 fUVTransformA;              // Offset:   64 Size:    16
};

//CBMhMaterialPLSkinLocal__disclosure : 3848.shdr.src
struct CBMhMaterialPLSkinLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  bool bBaseColorEmissive;           // Offset:   52 Size:     4 [unused]
  bool bBackFaceNormalFilp;          // Offset:   56 Size:     4 [unused]
  float fAnimEmitMin;                // Offset:   60 Size:     4 [unused]
  float fAnimEmitSpeed;              // Offset:   64 Size:     4 [unused]
  float2 fAddColorUV__uiUNorm;       // Offset:   68 Size:     8 [unused]
  bool bUseCMM;                      // Offset:   76 Size:     4 [unused]
  float4 fAddColorA__uiColor;        // Offset:   80 Size:    16 [unused]
  float4 fAddColorB__uiColor;        // Offset:   96 Size:    16 [unused]
  float fDetailNormalBlend__uiUNorm; // Offset:  112 Size:     4 [unused]
  // align: 116 to 128
  ubyte align0[12];
  float4 fUVTransformDetailNormal;   // Offset:  128 Size:    16 [unused]
};

//CBSnowHeightPick : 389.shdr.src
struct CBSnowHeightPick {

  uint WriteOffset;                  // Offset:    0 Size:     4
  uint SnowPickRenderFrame;          // Offset:    4 Size:     4
  uint PickRequestCount;             // Offset:    8 Size:     4
  // align: 12 to 16
  ubyte align0[4];
  int4 PickPositionArray[31];        // Offset:   16 Size:   496
};

//CBNormalMerge : 3941.shdr.src
struct CBNormalMerge {

  uint iNmSrcOffset;                 // Offset:    0 Size:     4 [unused]
  uint iNmVertexCount;               // Offset:    4 Size:     4
  uint iNmDestOffset;                // Offset:    8 Size:     4
  uint iNmDestStride;                // Offset:   12 Size:     4
  uint iNmRedirectOffset;            // Offset:   16 Size:     4
  bool iNmBlendFlag;                 // Offset:   20 Size:     4
  uint iNmStride;                    // Offset:   24 Size:     4
  uint iNmOffset;                    // Offset:   28 Size:     4
  uint iNmRateOffset;                // Offset:   32 Size:     4
};

//CBMhMaterialStdBlendNoFurLocal__disclosure : 4004.shdr.src
struct CBMhMaterialStdBlendNoFurLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fDetailNormalBlend__uiUNorm; // Offset:   48 Size:     4 [unused]
  // align: 52 to 64
  ubyte align0[12];
  float4 fUVTransformA;              // Offset:   64 Size:    16
  float4 fUVTransformB;              // Offset:   80 Size:    16 [unused]
  float fTranslucency__uiUNorm;      // Offset:   96 Size:     4 [unused]
  float3 fEmissiveBlendColor__uiColor;// Offset:  100 Size:    12 [unused]
  float fEmissiveBlendColorBlend__uiUNorm;// Offset:  112 Size:     4 [unused]
  float3 fEmissiveBlendRimParam;     // Offset:  116 Size:    12 [unused]
  float4 fBlendBaseMapFactor__uiColor;// Offset:  128 Size:    16 [unused]
  float3 fBlendEmissiveMapFactor__uiColor;// Offset:  144 Size:    12 [unused]
  float fBlendMetalic__uiUNorm;      // Offset:  156 Size:     4 [unused]
  float fBlendRoughness__uiUNorm;    // Offset:  160 Size:     4 [unused]
  float fBlendDetailNormalBlend__uiUNorm;// Offset:  164 Size:     4 [unused]
  float fBlendSubSurfaceBlend__uiUNorm;// Offset:  168 Size:     4 [unused]
  // align: 172 to 176
  ubyte align1[4];
  float4 fBlendUVTransformA;         // Offset:  176 Size:    16 [unused]
  float4 fBlendUVTransformB;         // Offset:  192 Size:    16 [unused]
  float3 fBlendDir__uiDirection;     // Offset:  208 Size:    12 [unused]
  float fBlendPlaneNormal__uiUNorm;  // Offset:  220 Size:     4 [unused]
  float3 fBlendOp;                   // Offset:  224 Size:    12 [unused]
  bool bUseUVSecondaryMtA;           // Offset:  236 Size:     4
  bool bUseUVSecondaryMtB;           // Offset:  240 Size:     4 [unused]
  bool bUseUVSecondaryMtBM;          // Offset:  244 Size:     4 [unused]
  // align: 248 to 256
  ubyte align2[8];
  float3 fWetBlendDir__uiDirection;  // Offset:  256 Size:    12 [unused]
  float fWetBlendPlaneNormal__uiUNorm;// Offset:  268 Size:     4 [unused]
  float3 fWetBlendOp;                // Offset:  272 Size:    12 [unused]
  bool bSpecialBlend;                // Offset:  284 Size:     4 [unused]
  bool bWetNormalBlend;              // Offset:  288 Size:     4 [unused]
  float2 fWetNormalBlendRange__uiUNorm;// Offset:  292 Size:     8 [unused]
};

//CBDecalCommon : 40.shdr.src
struct CBDecalCommon {

  float4 fDecalColor;                // Offset:    0 Size:    16
  float3 fDecalCenter;               // Offset:   16 Size:    12
  // align: 28 to 32
  ubyte align0[4];
  float3 fDecalRange;                // Offset:   32 Size:    12
  // align: 44 to 48
  ubyte align1[4];
  float4 fDecalUVRange;              // Offset:   48 Size:    16
  float3 fDecalTangent;              // Offset:   64 Size:    12
  // align: 76 to 80
  ubyte align2[4];
  float3 fDecalBinormal;             // Offset:   80 Size:    12
};

//CBGUINoiseAndFade : 4032.shdr.src
struct CBGUINoiseAndFade {

  float4 fGUINoiseOffset;            // Offset:    0 Size:    16
  float4 fGUINoiseAndFadeParam;      // Offset:   16 Size:    16
  float4 fGUIFadeColor;              // Offset:   32 Size:    16
};

//CBMhMaterialEM063Local__disclosure : 4092.shdr.src
struct CBMhMaterialEM063Local__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  bool bBaseColorEmissive;           // Offset:   52 Size:     4 [unused]
  float2 fPaintUVTile;               // Offset:   56 Size:     8 [unused]
  float fAddNormalBlend__uiUNorm;    // Offset:   64 Size:     4 [unused]
  // align: 68 to 80
  ubyte align0[12];
  float4 fAddNormalMaskA__uiSNorm;   // Offset:   80 Size:    16 [unused]
  float4 fAddNormalMaskB__uiSNorm;   // Offset:   96 Size:    16 [unused]
  float fAddNormalMaskC__uiUNorm;    // Offset:  112 Size:     4 [unused]
  float fAddNormalMaskD__uiUNorm;    // Offset:  116 Size:     4 [unused]
  bool bBackFaceShading;             // Offset:  120 Size:     4 [unused]
  bool bBackFaceNormalFilp;          // Offset:  124 Size:     4 [unused]
  float3 fKizuColor__uiColor;        // Offset:  128 Size:    12 [unused]
  // align: 140 to 144
  ubyte align1[4];
  float2 fKizuUVOffset__uiUNorm;     // Offset:  144 Size:     8 [unused]
  float fKizuMultiply;               // Offset:  152 Size:     4 [unused]
  bool bLegendary;                   // Offset:  156 Size:     4 [unused]
  float4 fLegendColor__uiColor;      // Offset:  160 Size:    16 [unused]
  float2 fLegendMetalMask__uiUNorm;  // Offset:  176 Size:     8 [unused]
  float fLegendRoughness;            // Offset:  184 Size:     4 [unused]
  // align: 188 to 192
  ubyte align2[4];
  float3 fLegendFilm__uiUNorm;       // Offset:  192 Size:    12 [unused]
  float fLegendSSSMask__uiUNorm;     // Offset:  204 Size:     4 [unused]
  float3 fLegendHSV__uiSNorm;        // Offset:  208 Size:    12 [unused]
  float fLegendFilmIOR__uiUNorm;     // Offset:  220 Size:     4 [unused]
  float fPartsMaskA__uiUNorm;        // Offset:  224 Size:     4 [unused]
  float fPartsMaskB__uiUNorm;        // Offset:  228 Size:     4 [unused]
  float fPartsMaskC__uiUNorm;        // Offset:  232 Size:     4 [unused]
  float fPartsMaskD__uiUNorm;        // Offset:  236 Size:     4 [unused]
  float fPartsMaskX__uiUNorm;        // Offset:  240 Size:     4 [unused]
  float fPartsMaskY__uiUNorm;        // Offset:  244 Size:     4 [unused]
  float fPartsMaskZ__uiUNorm;        // Offset:  248 Size:     4 [unused]
  float fPartsMaskW__uiUNorm;        // Offset:  252 Size:     4 [unused]
  bool bUseOffset;                   // Offset:  256 Size:     4
  float fOffsetScale;                // Offset:  260 Size:     4
  bool bTranslucentOffset;           // Offset:  264 Size:     4
  bool bAntiSSSEmit;                 // Offset:  268 Size:     4 [unused]
  float3 fFlowDirDir__uiDirection;   // Offset:  272 Size:    12 [unused]
  // align: 284 to 288
  ubyte align3[4];
  float4 fFlowControl__uiUNorm;      // Offset:  288 Size:    16 [unused]
  float fFlowTile;                   // Offset:  304 Size:     4 [unused]
  // align: 308 to 320
  ubyte align4[12];
  float4 fFlowColor__uiColor;        // Offset:  320 Size:    16 [unused]
  float4 fFlowMatControl__uiUNorm;   // Offset:  336 Size:    16 [unused]
  float fFilmThickness__uiUNorm;     // Offset:  352 Size:     4 [unused]
  float fFilmBlend__uiUNorm;         // Offset:  356 Size:     4 [unused]
  float fFilmIOR__uiUNorm;           // Offset:  360 Size:     4 [unused]
  float fRefraction__uiUNorm;        // Offset:  364 Size:     4 [unused]
  float fRefractionBlend__uiUNorm;   // Offset:  368 Size:     4 [unused]
  float fAlbedoBlend__uiUNorm;       // Offset:  372 Size:     4 [unused]
  bool bPartsAlpha;                  // Offset:  376 Size:     4 [unused]
  // align: 380 to 384
  ubyte align5[4];
  float4 fBlendBaseMapFactor__uiColor;// Offset:  384 Size:    16 [unused]
  float4 fBlendMatFactor;            // Offset:  400 Size:    16 [unused]
  float fMaskSpeed;                  // Offset:  416 Size:     4 [unused]
  float fMaskWave;                   // Offset:  420 Size:     4 [unused]
  float fMaskDistortion;             // Offset:  424 Size:     4 [unused]
  float fAnimEmitMin;                // Offset:  428 Size:     4 [unused]
  float fAnimEmitSpeed;              // Offset:  432 Size:     4 [unused]
  bool bUseWaveEmit;                 // Offset:  436 Size:     4 [unused]
  float fAnimEmitWave;               // Offset:  440 Size:     4 [unused]
  float fRimAlphaPower__uiSNorm;     // Offset:  444 Size:     4 [unused]
  float fRimTranslucency__uiUNorm;   // Offset:  448 Size:     4 [unused]
  float fRimNormal__uiUNorm;         // Offset:  452 Size:     4 [unused]
  float fSnowUVTile;                 // Offset:  456 Size:     4 [unused]
  // align: 460 to 464
  ubyte align6[4];
  float4 fSnowBlendColor__uiColor;   // Offset:  464 Size:    16
  float4 fSnowMatControl__uiUNorm;   // Offset:  480 Size:    16 [unused]
  float fMaterialSnowBlendB;         // Offset:  496 Size:     4
  // align: 500 to 512
  ubyte align7[12];
  float4 fSnowControl;               // Offset:  512 Size:    16
};

//CBMhSkyVS : 7177.shdr.src
struct CBMhSkyVS {

  row_major float3x4 fSkyWorld;      // Offset:    0 Size:    48
};

//CBMhSkyLpPS : 4517.shdr.src
struct CBMhSkyLpPS {

  float3 fSkyGlobalIntensity;        // Offset:    0 Size:    12 [unused]
  // align: 12 to 16
  ubyte align0[4];
  float4 fSkySunMapFactor;           // Offset:   16 Size:    16 [unused]
  float4 fSkyStarrySkyMapFactor;     // Offset:   32 Size:    16 [unused]
  float2 fSkySunUVOffset;            // Offset:   48 Size:     8 [unused]
  float2 fSkyGlobalCloudSpeed;       // Offset:   56 Size:     8 [unused]
  float3 fSkyWaterReflectionFactor;  // Offset:   64 Size:    12 [unused]
  float fSkyBlend;                   // Offset:   76 Size:     4 [unused]
  bool bSkyIsRenderingWater;         // Offset:   80 Size:     4 [unused]
  bool bSkyFog;                      // Offset:   84 Size:     4 [unused]
  // align: 88 to 96
  ubyte align1[8];
  float4 fSkyBaseMapFactor;          // Offset:   96 Size:    16 [unused]
  float4 fSkyCloudMapFactor0;        // Offset:  112 Size:    16 [unused]
  float4 fSkyCloudMapFactor1;        // Offset:  128 Size:    16 [unused]
  float4 fSkyCloudMapFactor2;        // Offset:  144 Size:    16 [unused]
  float4 fSkyCloudMapFactor3;        // Offset:  160 Size:    16 [unused]
  float2 fSkyCloudSpeed0;            // Offset:  176 Size:     8 [unused]
  float2 fSkyCloudSpeed1;            // Offset:  184 Size:     8 [unused]
  float2 fSkyCloudSpeed2;            // Offset:  192 Size:     8 [unused]
  float2 fSkyCloudSpeed3;            // Offset:  200 Size:     8 [unused]
  float4 fSkyBlendBaseMapFactor;     // Offset:  208 Size:    16 [unused]
  float4 fSkyBlendCloudMapFactor0;   // Offset:  224 Size:    16 [unused]
  float4 fSkyBlendCloudMapFactor1;   // Offset:  240 Size:    16 [unused]
  float4 fSkyBlendCloudMapFactor2;   // Offset:  256 Size:    16 [unused]
  float4 fSkyBlendCloudMapFactor3;   // Offset:  272 Size:    16 [unused]
  float2 fSkyBlendCloudSpeed0;       // Offset:  288 Size:     8 [unused]
  float2 fSkyBlendCloudSpeed1;       // Offset:  296 Size:     8 [unused]
  float2 fSkyBlendCloudSpeed2;       // Offset:  304 Size:     8 [unused]
  float2 fSkyBlendCloudSpeed3;       // Offset:  312 Size:     8 [unused]
  uint2 iSkyAddress;                 // Offset:  320 Size:     8
};

//CBSnowFieldPreDepth : 4152.shdr.src
struct CBSnowFieldPreDepth {

  float4 fSnowFieldPreDepthRegion;   // Offset:    0 Size:    16
  float2 fSnowFieldPreDepthRegionY;  // Offset:   16 Size:     8
  uint iSnowFieldPreDepthCount;      // Offset:   24 Size:     4
  float fSnowFieldBasePositionY;     // Offset:   28 Size:     4
  float4 fSnowFieldPreDepthBoundings[16];// Offset:   32 Size:   256
  float4 fSnowFieldPreDepthMinMaxY[16];// Offset:  288 Size:   256
  float4 fSnowFieldResolution;       // Offset:  544 Size:    16
};

//CBSpeedTreeCollision__disclosure : 7364.shdr.src
struct CBSpeedTreeCollision__disclosure {

  float fLocalHeightAdjust;          // Offset:    0 Size:     4
  float fLocalWindOverallFactor;     // Offset:    4 Size:     4
  float fLocalWindBranchlFactor;     // Offset:    8 Size:     4
  float fLocalWindLeafFactor;        // Offset:   12 Size:     4
  float fFacingLeavesShadowFactor__uiUNorm;// Offset:   16 Size:     4
  float fWindOneSidedBias;           // Offset:   20 Size:     4
  bool bWindOneSidedUvFlip;          // Offset:   24 Size:     4
  bool bSpeedTreeLodSmooth;          // Offset:   28 Size:     4
};

//CBSpeedTreePrimitiveInfo : 8768.shdr.src
struct CBSpeedTreePrimitiveInfo {

  uint4 iPrimitiveInfo;              // Offset:    0 Size:    16
};

//CBSpeedTreeSystem : 7364.shdr.src
struct CBSpeedTreeSystem {

  float4 fSpeedTreeSystemParam;      // Offset:    0 Size:    16
  uint3 iSpeedTreeSystemParam;       // Offset:   16 Size:    12 [unused]
};

//CBMhMaterialSpeedTreeStdBlendLocal__disclosure : 8071.shdr.src
struct CBMhMaterialSpeedTreeStdBlendLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fDetailNormalBlend__uiUNorm; // Offset:   48 Size:     4 [unused]
  // align: 52 to 64
  ubyte align0[12];
  float4 fUVTransformA;              // Offset:   64 Size:    16
  float4 fUVTransformB;              // Offset:   80 Size:    16 [unused]
  float fTranslucency__uiUNorm;      // Offset:   96 Size:     4 [unused]
  // align: 100 to 112
  ubyte align1[12];
  float4 fBlendBaseMapFactor__uiColor;// Offset:  112 Size:    16 [unused]
  float3 fBlendEmissiveMapFactor__uiColor;// Offset:  128 Size:    12 [unused]
  float fBlendMetalic__uiUNorm;      // Offset:  140 Size:     4 [unused]
  float fBlendRoughness__uiUNorm;    // Offset:  144 Size:     4 [unused]
  float fBlendDetailNormalBlend__uiUNorm;// Offset:  148 Size:     4 [unused]
  float fBlendSubSurfaceBlend__uiUNorm;// Offset:  152 Size:     4 [unused]
  float fBlendRoughnessThreshold__uiUNorm;// Offset:  156 Size:     4 [unused]
  float fBlendRoughnessFillValue__uiUNorm;// Offset:  160 Size:     4 [unused]
  // align: 164 to 176
  ubyte align2[12];
  float4 fBlendUVTransformA;         // Offset:  176 Size:    16 [unused]
  float4 fBlendUVTransformB;         // Offset:  192 Size:    16 [unused]
  bool bUseUVSecondaryMtA;           // Offset:  208 Size:     4
  bool bUseUVSecondaryMtB;           // Offset:  212 Size:     4 [unused]
  bool bUseUVSecondaryMtBM;          // Offset:  216 Size:     4 [unused]
  bool bUseUVSecondaryDetailNMtA;    // Offset:  220 Size:     4 [unused]
  bool bUseUVSecondaryDetailNMtB;    // Offset:  224 Size:     4 [unused]
  bool bLightProbeEmissive;          // Offset:  228 Size:     4 [unused]
  // align: 232 to 240
  ubyte align3[8];
  float3 fEmissiveBlendColor__uiColor;// Offset:  240 Size:    12 [unused]
  float fEmissiveBlendColorBlend__uiUNorm;// Offset:  252 Size:     4 [unused]
  float3 fEmissiveBlendRimParam;     // Offset:  256 Size:    12 [unused]
  bool bSpecialBlend;                // Offset:  268 Size:     4 [unused]
  bool bWetNormalBlend;              // Offset:  272 Size:     4 [unused]
  float2 fWetNormalBlendRange__uiUNorm;// Offset:  276 Size:     8 [unused]
};

//CBSpeedTree : 7364.shdr.src
struct CBSpeedTree {

  float2 fSpeedTreeParam;            // Offset:    0 Size:     8
  // align: 8 to 16
  ubyte align0[8];
  int3 iSpeedTreeParam;              // Offset:   16 Size:    12
};

//CBSpeedTreeGlobalWind : 7364.shdr.src
struct CBSpeedTreeGlobalWind {

  struct CBSpeedTreeGlobalWind_SpeedTreeGlobalWind
  {
      row_major uint4x4 fBillboardTexCoords[3];// Offset:    0
      float4 fWindVector;            // Offset:  192
      float4 fWindGlobal;            // Offset:  208
      float4 fWindBranch;            // Offset:  224
      float4 fWindBranchTwitch;      // Offset:  240
      float4 fWindLeaf1Tumble;       // Offset:  256
      float4 fWindLeaf2Tumble;       // Offset:  272
      float3 fWindBranchAnchor;      // Offset:  288
      float fWindBranchAdherences_x; // Offset:  300
      float fWindBranchAdherences_y; // Offset:  304
      float fWindBranchAdherences_z; // Offset:  308
      float fWindFrondRipple_x;      // Offset:  312
      float fWindFrondRipple_y;      // Offset:  316
      float fWindFrondRipple_z;      // Offset:  320
      float3 fWindLeaf1Twitch;       // Offset:  324
      float3 fWindLeaf2Twitch;       // Offset:  336
      float fLocalGlobalDistance;    // Offset:  348
      float2 fWindLeaf1Ripple;       // Offset:  352
      float2 fWindLeaf2Ripple;       // Offset:  360
      float2 fWindBranchWhip;        // Offset:  368
      float2 fWindTurbulences;       // Offset:  376
      float2 fLocalBranchDistance;   // Offset:  384
      uint iWindAttr;                // Offset:  392
      float padding_0;               // Offset:  396
  } gSpeedTreeGlobalWindBuffer[160]; // Offset:    0 Size: 64000
};

//CBSpeedTreeGlobalWindPF : 7324.shdr.src
struct CBSpeedTreeGlobalWindPF {

  struct CBSpeedTreeGlobalWindPF_SpeedTreeGlobalWind
  {
      row_major uint4x4 fBillboardTexCoords[3];// Offset:    0
      float4 fWindVector;            // Offset:  192
      float4 fWindGlobal;            // Offset:  208
      float4 fWindBranch;            // Offset:  224
      float4 fWindBranchTwitch;      // Offset:  240
      float4 fWindLeaf1Tumble;       // Offset:  256
      float4 fWindLeaf2Tumble;       // Offset:  272
      float3 fWindBranchAnchor;      // Offset:  288
      float fWindBranchAdherences_x; // Offset:  300
      float fWindBranchAdherences_y; // Offset:  304
      float fWindBranchAdherences_z; // Offset:  308
      float fWindFrondRipple_x;      // Offset:  312
      float fWindFrondRipple_y;      // Offset:  316
      float fWindFrondRipple_z;      // Offset:  320
      float3 fWindLeaf1Twitch;       // Offset:  324
      float3 fWindLeaf2Twitch;       // Offset:  336
      float fLocalGlobalDistance;    // Offset:  348
      float2 fWindLeaf1Ripple;       // Offset:  352
      float2 fWindLeaf2Ripple;       // Offset:  360
      float2 fWindBranchWhip;        // Offset:  368
      float2 fWindTurbulences;       // Offset:  376
      float2 fLocalBranchDistance;   // Offset:  384
      uint iWindAttr;                // Offset:  392
      float padding_0;               // Offset:  396
  } gSpeedTreeGlobalWindBufferPF[160];// Offset:    0 Size: 64000
};

//CBSpeedTreeLocalWindPF : 7324.shdr.src
struct CBSpeedTreeLocalWindPF {

  struct CBSpeedTreeLocalWindPF_SpeedTreeLocalWind
  {
      float3 pos;                    // Offset:    0
      float radius;                  // Offset:   12
      float3 dir;                    // Offset:   16
      float strength;                // Offset:   28
      float oscillateStrength;       // Offset:   32
      float oscillateSpeed;          // Offset:   36
      uint moveType;                 // Offset:   40
      float padding;                 // Offset:   44
  } gSpeedTreeLocalWindBufferPF[128];// Offset:    0 Size:  6144
};

//CBGlobalIllumination : 8864.shdr.src
struct CBGlobalIllumination {

  float fSpecularIntensity;          // Offset:    0 Size:     4
  float fSpecularTemporalBlendRate;  // Offset:    4 Size:     4
  float fSpecularDifference;         // Offset:    8 Size:     4 [unused]
};

//CBMhMaterialEM024Local__disclosure : 488.shdr.src
struct CBMhMaterialEM024Local__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  bool bBaseColorEmissive;           // Offset:   52 Size:     4 [unused]
  float2 fPaintUVTile;               // Offset:   56 Size:     8 [unused]
  float fAddNormalBlend__uiUNorm;    // Offset:   64 Size:     4 [unused]
  // align: 68 to 80
  ubyte align0[12];
  float4 fAddNormalMaskA__uiSNorm;   // Offset:   80 Size:    16 [unused]
  float4 fAddNormalMaskB__uiSNorm;   // Offset:   96 Size:    16 [unused]
  float fAddNormalMaskC__uiUNorm;    // Offset:  112 Size:     4 [unused]
  float fAddNormalMaskD__uiUNorm;    // Offset:  116 Size:     4 [unused]
  bool bBackFaceShading;             // Offset:  120 Size:     4 [unused]
  bool bBackFaceNormalFilp;          // Offset:  124 Size:     4 [unused]
  float3 fKizuColor__uiColor;        // Offset:  128 Size:    12 [unused]
  // align: 140 to 144
  ubyte align1[4];
  float2 fKizuUVOffset__uiUNorm;     // Offset:  144 Size:     8 [unused]
  float fKizuMultiply;               // Offset:  152 Size:     4 [unused]
  bool bLegendary;                   // Offset:  156 Size:     4 [unused]
  float4 fLegendColor__uiColor;      // Offset:  160 Size:    16 [unused]
  float2 fLegendMetalMask__uiUNorm;  // Offset:  176 Size:     8 [unused]
  float fLegendRoughness;            // Offset:  184 Size:     4 [unused]
  // align: 188 to 192
  ubyte align2[4];
  float3 fLegendFilm__uiUNorm;       // Offset:  192 Size:    12 [unused]
  float fLegendSSSMask__uiUNorm;     // Offset:  204 Size:     4 [unused]
  float3 fLegendHSV__uiSNorm;        // Offset:  208 Size:    12 [unused]
  float fLegendFilmIOR__uiUNorm;     // Offset:  220 Size:     4 [unused]
  float fPartsMaskA__uiUNorm;        // Offset:  224 Size:     4 [unused]
  float fPartsMaskB__uiUNorm;        // Offset:  228 Size:     4 [unused]
  float fPartsMaskC__uiUNorm;        // Offset:  232 Size:     4 [unused]
  float fPartsMaskD__uiUNorm;        // Offset:  236 Size:     4 [unused]
  float fPartsMaskX__uiUNorm;        // Offset:  240 Size:     4 [unused]
  float fPartsMaskY__uiUNorm;        // Offset:  244 Size:     4 [unused]
  float fPartsMaskZ__uiUNorm;        // Offset:  248 Size:     4 [unused]
  float fPartsMaskW__uiUNorm;        // Offset:  252 Size:     4 [unused]
  bool bUseOffset;                   // Offset:  256 Size:     4
  float fOffsetScale;                // Offset:  260 Size:     4
  bool bTranslucentOffset;           // Offset:  264 Size:     4
  bool bAntiSSSEmit;                 // Offset:  268 Size:     4 [unused]
  float3 fFlowDirDir__uiDirection;   // Offset:  272 Size:    12 [unused]
  // align: 284 to 288
  ubyte align3[4];
  float4 fFlowControl__uiUNorm;      // Offset:  288 Size:    16 [unused]
  float fFlowTile;                   // Offset:  304 Size:     4 [unused]
  // align: 308 to 320
  ubyte align4[12];
  float4 fFlowColor__uiColor;        // Offset:  320 Size:    16 [unused]
  float4 fFlowMatControl__uiUNorm;   // Offset:  336 Size:    16 [unused]
  float4 fMaskBlend__uiUNorm;        // Offset:  352 Size:    16 [unused]
  float2 fMaskBlend_A__uiUNorm;      // Offset:  368 Size:     8 [unused]
  float2 fMaskBlend_B__uiUNorm;      // Offset:  376 Size:     8 [unused]
  float fFilmThickness__uiUNorm;     // Offset:  384 Size:     4 [unused]
  float fFilmBlend__uiUNorm;         // Offset:  388 Size:     4 [unused]
  float fFilmIOR__uiUNorm;           // Offset:  392 Size:     4 [unused]
  float fRefraction__uiUNorm;        // Offset:  396 Size:     4 [unused]
  float fRefractionBlend__uiUNorm;   // Offset:  400 Size:     4 [unused]
  float fAnimEmitMin;                // Offset:  404 Size:     4 [unused]
  float fAnimEmitSpeed;              // Offset:  408 Size:     4 [unused]
  bool bUseWaveEmit;                 // Offset:  412 Size:     4 [unused]
  float fAnimEmitWave;               // Offset:  416 Size:     4 [unused]
  float fRimAlphaPower__uiSNorm;     // Offset:  420 Size:     4 [unused]
  float fRimTranslucency__uiUNorm;   // Offset:  424 Size:     4 [unused]
  float fRimNormal__uiUNorm;         // Offset:  428 Size:     4 [unused]
  float fSnowUVTile;                 // Offset:  432 Size:     4 [unused]
  // align: 436 to 448
  ubyte align5[12];
  float4 fSnowBlendColor__uiColor;   // Offset:  448 Size:    16
  float4 fSnowMatControl__uiUNorm;   // Offset:  464 Size:    16 [unused]
  float fMaterialSnowBlendB;         // Offset:  480 Size:     4
  // align: 484 to 496
  ubyte align6[12];
  float4 fSnowControl;               // Offset:  496 Size:    16
};

//CBMhMaterialVfxWaterLocal__disclosure : 4332.shdr.src
struct CBMhMaterialVfxWaterLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fDistortionFactor__uiColor; // Offset:   16 Size:    12 [unused]
  // align: 28 to 32
  ubyte align0[4];
  float3 fCubeMapFactor__uiColor;    // Offset:   32 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   44 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   48 Size:     4 [unused]
  float VertexPow;                   // Offset:   52 Size:     4 [unused]
  float fOpacityFactor;              // Offset:   56 Size:     4 [unused]
  float fVertexOpacityFactor;        // Offset:   60 Size:     4 [unused]
  float fNormalFactor__uiUNorm;      // Offset:   64 Size:     4 [unused]
  // align: 68 to 80
  ubyte align1[12];
  float4 fUVTransformA;              // Offset:   80 Size:    16 [unused]
  float fVolumeBlend__uiSNorm;       // Offset:   96 Size:     4 [unused]
  bool bVertexColor;                 // Offset:  100 Size:     4 [unused]
  float fSpecularFactor;             // Offset:  104 Size:     4 [unused]
  float fRaflectionAngle__uiSNorm;   // Offset:  108 Size:     4 [unused]
  float fDistortionAngle;            // Offset:  112 Size:     4 [unused]
  float fDistortion;                 // Offset:  116 Size:     4 [unused]
  float fRimRate;                    // Offset:  120 Size:     4 [unused]
  float fRimOpacityPow;              // Offset:  124 Size:     4 [unused]
  float fRimOpacityFactor;           // Offset:  128 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:  132 Size:     4 [unused]
  bool bSceneEnvMap;                 // Offset:  136 Size:     4 [unused]
  float fDiffuseChroma__uiUNorm;     // Offset:  140 Size:     4 [unused]
  float fSpecularChroma__uiUNorm;    // Offset:  144 Size:     4 [unused]
  float fInnerOffsetScale;           // Offset:  148 Size:     4
  float fVelocityAttn;               // Offset:  152 Size:     4 [unused]
  float fNormalDecalBlend__uiUNorm;  // Offset:  156 Size:     4 [unused]
};

//CBMhMaterialIvyFloorLocal__disclosure : 4445.shdr.src
struct CBMhMaterialIvyFloorLocal__disclosure {

  float fWaveLength;                 // Offset:    0 Size:     4
  float fSinkLength;                 // Offset:    4 Size:     4
  float fLocalWindWeight;            // Offset:    8 Size:     4
  bool bDriftIceMode;                // Offset:   12 Size:     4
  float fIceConstSinkLength;         // Offset:   16 Size:     4
  float fIceMaxSlant;                // Offset:   20 Size:     4
  float fIceSlantRange;              // Offset:   24 Size:     4
};

//CBMhMaterialIvyFloor : 4445.shdr.src
struct CBMhMaterialIvyFloor {

  int iIvyFloorWindIndex;            // Offset:    0 Size:     4
  int iIvyFloorWindIndexPF;          // Offset:    4 Size:     4 [unused]
  uint2 iIvyFloorId;                 // Offset:    8 Size:     8
  float fIvyFloorWindScale;          // Offset:   16 Size:     4
};

//CBGUIDistanceField : 4448.shdr.src
struct CBGUIDistanceField {

  float3 fGUIDFParam0;               // Offset:    0 Size:    12
  // align: 12 to 16
  ubyte align0[4];
  float4 fGUIDFColor0;               // Offset:   16 Size:    16
  float3 fGUIDFParam1;               // Offset:   32 Size:    12
  // align: 44 to 48
  ubyte align1[4];
  float4 fGUIDFColor1;               // Offset:   48 Size:    16
};

//CBMhMaterialEC021Local__disclosure : 4489.shdr.src
struct CBMhMaterialEC021Local__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  // align: 52 to 64
  ubyte align0[12];
  float4 fUVTransformA;              // Offset:   64 Size:    16
  bool bUseColorMask;                // Offset:   80 Size:     4 [unused]
  // align: 84 to 96
  ubyte align1[12];
  float4 fAddColorA__uiColor;        // Offset:   96 Size:    16 [unused]
  float4 fAddColorB__uiColor;        // Offset:  112 Size:    16 [unused]
  float4 fAddColorC__uiColor;        // Offset:  128 Size:    16 [unused]
  float4 fAddColorD__uiColor;        // Offset:  144 Size:    16 [unused]
  float4 fBaseMapMod__uiUNorm;       // Offset:  160 Size:    16 [unused]
  float4 fBaseMapModLimitMax__uiUNorm;// Offset:  176 Size:    16 [unused]
  float4 fBaseMapModLimitMin__uiUNorm;// Offset:  192 Size:    16 [unused]
  float3 fEmissiveBlendColor__uiColor;// Offset:  208 Size:    12 [unused]
  float fEmissiveBlendColorBlend__uiUNorm;// Offset:  220 Size:     4 [unused]
  float3 fEmissiveBlendRimParam;     // Offset:  224 Size:    12 [unused]
  float fFilmThickness__uiUNorm;     // Offset:  236 Size:     4 [unused]
  float fFilmBlend__uiUNorm;         // Offset:  240 Size:     4 [unused]
  float fFilmIOR__uiUNorm;           // Offset:  244 Size:     4 [unused]
  bool bBaseColorEmissive;           // Offset:  248 Size:     4 [unused]
  // align: 252 to 256
  ubyte align2[4];
  float4 fFurParam__uiUNorm;         // Offset:  256 Size:    16 [unused]
  float fFurTile;                    // Offset:  272 Size:     4 [unused]
  float fFinWave;                    // Offset:  276 Size:     4 [unused]
  float fFinSpeed;                   // Offset:  280 Size:     4 [unused]
  // align: 284 to 288
  ubyte align3[4];
  float3 fFinColor__uiColor;         // Offset:  288 Size:    12 [unused]
};

//CBMhMaterialSpeedTreeStdFurLocal__disclosure : 4572.shdr.src
struct CBMhMaterialSpeedTreeStdFurLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fDetailNormalBlend__uiUNorm; // Offset:   48 Size:     4 [unused]
  // align: 52 to 64
  ubyte align0[12];
  float4 fUVTransformA;              // Offset:   64 Size:    16
  float4 fUVTransformB;              // Offset:   80 Size:    16 [unused]
  float4 fBaseMapModulation__uiUNorm;// Offset:   96 Size:    16 [unused]
  float fTranslucency__uiUNorm;      // Offset:  112 Size:     4 [unused]
  bool bLightProbeEmissive;          // Offset:  116 Size:     4 [unused]
  // align: 120 to 128
  ubyte align1[8];
  float3 fEmissiveBlendColor__uiColor;// Offset:  128 Size:    12 [unused]
  float fEmissiveBlendColorBlend__uiUNorm;// Offset:  140 Size:     4 [unused]
  float3 fEmissiveBlendRimParam;     // Offset:  144 Size:    12 [unused]
  bool bSpecialBlend;                // Offset:  156 Size:     4 [unused]
  float fRoughnessThreshold__uiUNorm;// Offset:  160 Size:     4 [unused]
  float fRoughnessFillValue__uiUNorm;// Offset:  164 Size:     4 [unused]
  bool bWetNormalBlend;              // Offset:  168 Size:     4 [unused]
  // align: 172 to 176
  ubyte align2[4];
  float2 fWetNormalBlendRange__uiUNorm;// Offset:  176 Size:     8 [unused]
  float fFurNormalBlend__uiUNorm;    // Offset:  184 Size:     4 [unused]
  float fFurHeight__uiUNorm;         // Offset:  188 Size:     4 [unused]
  float fFurMapBlend__uiUNorm;       // Offset:  192 Size:     4 [unused]
  float fFurEdgeBlend__uiUNorm;      // Offset:  196 Size:     4 [unused]
  float fFurTile;                    // Offset:  200 Size:     4 [unused]
};

//CBCSClear : 4584.shdr.src
struct CBCSClear {

  uint iSize;                        // Offset:    0 Size:     4
};

//CBGUIIcon : 4605.shdr.src
struct CBGUIIcon {

  float4 fGUINoiseColor;             // Offset:    0 Size:    16
  float4 fGUIEmissiveColor;          // Offset:   16 Size:    16
  float3 fGUISpecularColor;          // Offset:   32 Size:    12
  // align: 44 to 48
  ubyte align0[4];
  float3 fGUIIconLightColor;         // Offset:   48 Size:    12
  // align: 60 to 64
  ubyte align1[4];
  float3 fGUIIconLightDir;           // Offset:   64 Size:    12
};

//CBMhMaterialSlantFloorLocal__disclosure : 4643.shdr.src
struct CBMhMaterialSlantFloorLocal__disclosure {

  float fSinkLength;                 // Offset:    0 Size:     4
  float fConstSinkLength;            // Offset:    4 Size:     4
  float fMaxSlant;                   // Offset:    8 Size:     4
  float fSlantRange;                 // Offset:   12 Size:     4
};

//CBMhMaterialSlantFloor : 4643.shdr.src
struct CBMhMaterialSlantFloor {

  int iSlantFloorWindIndex;          // Offset:    0 Size:     4
  float fSlantFloorWindScale;        // Offset:    4 Size:     4
};

//CBMhSky2GBuffer : 4667.shdr.src
struct CBMhSky2GBuffer {

  uint iSkyGBufferId;                // Offset:    0 Size:     4
};

//CBLuminanceDebugDisp : 4673.shdr.src
struct CBLuminanceDebugDisp {

  uint iLuminanceDispMode;           // Offset:    0 Size:     4
  // align: 4 to 16
  ubyte align0[12];
  float4 fLuminanceDebugDispColor;   // Offset:   16 Size:    16
  float2 fLuminanceDebugDispMinMax;  // Offset:   32 Size:     8
};

//CBOutline : 7518.shdr.src
struct CBOutline {

  float4 fLineColor;                 // Offset:    0 Size:    16 [unused]
  uint iTargetID;                    // Offset:   16 Size:     4 [unused]
  uint iSampleCount;                 // Offset:   20 Size:     4 [unused]
  uint iMarkerNum;                   // Offset:   24 Size:     4
  // align: 28 to 32
  ubyte align0[4];
  float4 fMarkerPosition[3];         // Offset:   32 Size:    48 [unused]
  float fRadius;                     // Offset:   80 Size:     4 [unused]
  float fFadeStartLength;            // Offset:   84 Size:     4 [unused]
  float fBlinkSpeed;                 // Offset:   88 Size:     4 [unused]
  float fBlinkMin;                   // Offset:   92 Size:     4 [unused]
  bool bDepthTest;                   // Offset:   96 Size:     4 [unused]
};

//CBMhMaterialEM125Local__disclosure : 4823.shdr.src
struct CBMhMaterialEM125Local__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  bool bBaseColorEmissive;           // Offset:   52 Size:     4 [unused]
  float2 fPaintUVTile;               // Offset:   56 Size:     8 [unused]
  float fAddNormalBlend__uiUNorm;    // Offset:   64 Size:     4 [unused]
  // align: 68 to 80
  ubyte align0[12];
  float4 fAddNormalMaskA__uiSNorm;   // Offset:   80 Size:    16 [unused]
  float4 fAddNormalMaskB__uiSNorm;   // Offset:   96 Size:    16 [unused]
  float fAddNormalMaskC__uiUNorm;    // Offset:  112 Size:     4 [unused]
  float fAddNormalMaskD__uiUNorm;    // Offset:  116 Size:     4 [unused]
  bool bBackFaceShading;             // Offset:  120 Size:     4 [unused]
  bool bBackFaceNormalFilp;          // Offset:  124 Size:     4 [unused]
  float3 fKizuColor__uiColor;        // Offset:  128 Size:    12 [unused]
  // align: 140 to 144
  ubyte align1[4];
  float2 fKizuUVOffset__uiUNorm;     // Offset:  144 Size:     8 [unused]
  float fKizuMultiply;               // Offset:  152 Size:     4 [unused]
  bool bLegendary;                   // Offset:  156 Size:     4 [unused]
  float4 fLegendColor__uiColor;      // Offset:  160 Size:    16 [unused]
  float2 fLegendMetalMask__uiUNorm;  // Offset:  176 Size:     8 [unused]
  float fLegendRoughness;            // Offset:  184 Size:     4 [unused]
  // align: 188 to 192
  ubyte align2[4];
  float3 fLegendFilm__uiUNorm;       // Offset:  192 Size:    12 [unused]
  float fLegendSSSMask__uiUNorm;     // Offset:  204 Size:     4 [unused]
  float3 fLegendHSV__uiSNorm;        // Offset:  208 Size:    12 [unused]
  float fLegendFilmIOR__uiUNorm;     // Offset:  220 Size:     4 [unused]
  float fPartsMaskA__uiUNorm;        // Offset:  224 Size:     4 [unused]
  float fPartsMaskB__uiUNorm;        // Offset:  228 Size:     4 [unused]
  float fPartsMaskC__uiUNorm;        // Offset:  232 Size:     4 [unused]
  float fPartsMaskD__uiUNorm;        // Offset:  236 Size:     4 [unused]
  float fPartsMaskX__uiUNorm;        // Offset:  240 Size:     4 [unused]
  float fPartsMaskY__uiUNorm;        // Offset:  244 Size:     4 [unused]
  float fPartsMaskZ__uiUNorm;        // Offset:  248 Size:     4 [unused]
  float fPartsMaskW__uiUNorm;        // Offset:  252 Size:     4 [unused]
  bool bUseOffset;                   // Offset:  256 Size:     4
  float fOffsetScale;                // Offset:  260 Size:     4
  bool bTranslucentOffset;           // Offset:  264 Size:     4
  bool bAntiSSSEmit;                 // Offset:  268 Size:     4 [unused]
  float3 fFlowDirDir__uiDirection;   // Offset:  272 Size:    12 [unused]
  // align: 284 to 288
  ubyte align3[4];
  float4 fFlowControl__uiUNorm;      // Offset:  288 Size:    16 [unused]
  float fFlowTile;                   // Offset:  304 Size:     4 [unused]
  // align: 308 to 320
  ubyte align4[12];
  float4 fFlowColor__uiColor;        // Offset:  320 Size:    16 [unused]
  float4 fFlowMatControl__uiUNorm;   // Offset:  336 Size:    16 [unused]
  float4 fMaskBlend__uiUNorm;        // Offset:  352 Size:    16 [unused]
  float2 fMaskBlend_A__uiUNorm;      // Offset:  368 Size:     8 [unused]
  float2 fMaskBlend_B__uiUNorm;      // Offset:  376 Size:     8 [unused]
  float fFilmThickness__uiUNorm;     // Offset:  384 Size:     4 [unused]
  float fFilmBlend__uiUNorm;         // Offset:  388 Size:     4 [unused]
  float fFilmIOR__uiUNorm;           // Offset:  392 Size:     4 [unused]
  float fRefraction__uiUNorm;        // Offset:  396 Size:     4 [unused]
  float fRefractionBlend__uiUNorm;   // Offset:  400 Size:     4 [unused]
  float fAnimEmitMin;                // Offset:  404 Size:     4 [unused]
  float fAnimEmitSpeed;              // Offset:  408 Size:     4 [unused]
  bool bUseWaveEmit;                 // Offset:  412 Size:     4 [unused]
  float fAnimEmitWave;               // Offset:  416 Size:     4 [unused]
  float fRimAlphaPower__uiSNorm;     // Offset:  420 Size:     4 [unused]
  float fRimTranslucency__uiUNorm;   // Offset:  424 Size:     4 [unused]
  float fRimNormal__uiUNorm;         // Offset:  428 Size:     4 [unused]
  float fFinWave;                    // Offset:  432 Size:     4 [unused]
  float fFinSpeed;                   // Offset:  436 Size:     4 [unused]
  float fFinSpectral__uiUNorm;       // Offset:  440 Size:     4 [unused]
  // align: 444 to 448
  ubyte align5[4];
  float3 fFinColor__uiColor;         // Offset:  448 Size:    12 [unused]
  float fFinWaveB;                   // Offset:  460 Size:     4 [unused]
  float fFinSpeedB;                  // Offset:  464 Size:     4 [unused]
  float fFinSpectralB__uiUNorm;      // Offset:  468 Size:     4 [unused]
  // align: 472 to 480
  ubyte align6[8];
  float3 fFinColorB__uiColor;        // Offset:  480 Size:    12 [unused]
  float fBaseColorSaturation__uiUNorm;// Offset:  492 Size:     4 [unused]
  float3 fSaturationColor__uiColor;  // Offset:  496 Size:    12 [unused]
  bool bUseFullNormal;               // Offset:  508 Size:     4 [unused]
  float fSnowUVTile;                 // Offset:  512 Size:     4 [unused]
  // align: 516 to 528
  ubyte align7[12];
  float4 fSnowBlendColor__uiColor;   // Offset:  528 Size:    16
  float4 fSnowMatControl__uiUNorm;   // Offset:  544 Size:    16 [unused]
  float fMaterialSnowBlendB;         // Offset:  560 Size:     4
  // align: 564 to 576
  ubyte align8[12];
  float4 fSnowControl;               // Offset:  576 Size:    16
};

//CB_BGTexture : 4843.shdr.src
struct CB_BGTexture {

  float4 fBGTextureColor;            // Offset:    0 Size:    16
};

//CBMhMaterialFakeInnerEmitLocal__disclosure : 4951.shdr.src
struct CBMhMaterialFakeInnerEmitLocal__disclosure {

  float3 fEmissiveMapFactor__uiColor;// Offset:    0 Size:    12 [unused]
  float fInnerOffsetScale;           // Offset:   12 Size:     4
  float fRimAlphaPower__uiUNorm;     // Offset:   16 Size:     4 [unused]
  float fVolumeBlend__uiSNorm;       // Offset:   20 Size:     4 [unused]
};

//CBBlink : 491.shdr.src
struct CBBlink {

  float fOffset;                     // Offset:    0 Size:     4
  float fPow;                        // Offset:    4 Size:     4
  // align: 8 to 16
  ubyte align0[8];
  float3 fColor;                     // Offset:   16 Size:    12
  float fBlinkRate;                  // Offset:   28 Size:     4
  float fHeightOffset;               // Offset:   32 Size:     4
};

//CBMhMaterialEM011Local__disclosure : 5017.shdr.src
struct CBMhMaterialEM011Local__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  bool bBaseColorEmissive;           // Offset:   52 Size:     4 [unused]
  float2 fPaintUVTile;               // Offset:   56 Size:     8 [unused]
  float fAddNormalBlend__uiUNorm;    // Offset:   64 Size:     4 [unused]
  // align: 68 to 80
  ubyte align0[12];
  float4 fAddNormalMaskA__uiSNorm;   // Offset:   80 Size:    16 [unused]
  float4 fAddNormalMaskB__uiSNorm;   // Offset:   96 Size:    16 [unused]
  float fAddNormalMaskC__uiUNorm;    // Offset:  112 Size:     4 [unused]
  float fAddNormalMaskD__uiUNorm;    // Offset:  116 Size:     4 [unused]
  bool bBackFaceShading;             // Offset:  120 Size:     4 [unused]
  bool bBackFaceNormalFilp;          // Offset:  124 Size:     4 [unused]
  float3 fKizuColor__uiColor;        // Offset:  128 Size:    12 [unused]
  // align: 140 to 144
  ubyte align1[4];
  float2 fKizuUVOffset__uiUNorm;     // Offset:  144 Size:     8 [unused]
  float fKizuMultiply;               // Offset:  152 Size:     4 [unused]
  bool bLegendary;                   // Offset:  156 Size:     4 [unused]
  float4 fLegendColor__uiColor;      // Offset:  160 Size:    16 [unused]
  float2 fLegendMetalMask__uiUNorm;  // Offset:  176 Size:     8 [unused]
  float fLegendRoughness;            // Offset:  184 Size:     4 [unused]
  // align: 188 to 192
  ubyte align2[4];
  float3 fLegendFilm__uiUNorm;       // Offset:  192 Size:    12 [unused]
  float fLegendSSSMask__uiUNorm;     // Offset:  204 Size:     4 [unused]
  float3 fLegendHSV__uiSNorm;        // Offset:  208 Size:    12 [unused]
  float fLegendFilmIOR__uiUNorm;     // Offset:  220 Size:     4 [unused]
  float fPartsMaskA__uiUNorm;        // Offset:  224 Size:     4 [unused]
  float fPartsMaskB__uiUNorm;        // Offset:  228 Size:     4 [unused]
  float fPartsMaskC__uiUNorm;        // Offset:  232 Size:     4 [unused]
  float fPartsMaskD__uiUNorm;        // Offset:  236 Size:     4 [unused]
  float fPartsMaskX__uiUNorm;        // Offset:  240 Size:     4 [unused]
  float fPartsMaskY__uiUNorm;        // Offset:  244 Size:     4 [unused]
  float fPartsMaskZ__uiUNorm;        // Offset:  248 Size:     4 [unused]
  float fPartsMaskW__uiUNorm;        // Offset:  252 Size:     4 [unused]
  bool bUseOffset;                   // Offset:  256 Size:     4
  float fOffsetScale;                // Offset:  260 Size:     4
  bool bTranslucentOffset;           // Offset:  264 Size:     4
  bool bAntiSSSEmit;                 // Offset:  268 Size:     4 [unused]
  float3 fFlowDirDir__uiDirection;   // Offset:  272 Size:    12 [unused]
  // align: 284 to 288
  ubyte align3[4];
  float4 fFlowControl__uiUNorm;      // Offset:  288 Size:    16 [unused]
  float fFlowTile;                   // Offset:  304 Size:     4 [unused]
  // align: 308 to 320
  ubyte align4[12];
  float4 fFlowColor__uiColor;        // Offset:  320 Size:    16 [unused]
  float4 fFlowMatControl__uiUNorm;   // Offset:  336 Size:    16 [unused]
  float4 fDisplaceControl;           // Offset:  352 Size:    16
  float fDispSpeed;                  // Offset:  368 Size:     4
  float fFilmThickness__uiUNorm;     // Offset:  372 Size:     4 [unused]
  float fFilmBlend__uiUNorm;         // Offset:  376 Size:     4 [unused]
  float fFilmIOR__uiUNorm;           // Offset:  380 Size:     4 [unused]
  float fRefraction__uiUNorm;        // Offset:  384 Size:     4 [unused]
  float fRefractionBlend__uiUNorm;   // Offset:  388 Size:     4 [unused]
  float fAnimEmitMin;                // Offset:  392 Size:     4 [unused]
  float fAnimEmitSpeed;              // Offset:  396 Size:     4 [unused]
  bool bUseWaveEmit;                 // Offset:  400 Size:     4 [unused]
  float fAnimEmitWave;               // Offset:  404 Size:     4 [unused]
  // align: 408 to 416
  ubyte align5[8];
  float4 fFurParam__uiUNorm;         // Offset:  416 Size:    16 [unused]
  float fFurTile;                    // Offset:  432 Size:     4 [unused]
  float fRimAlphaPower__uiSNorm;     // Offset:  436 Size:     4 [unused]
  float fRimTranslucency__uiUNorm;   // Offset:  440 Size:     4 [unused]
  float fRimNormal__uiUNorm;         // Offset:  444 Size:     4 [unused]
  float fSnowUVTile;                 // Offset:  448 Size:     4 [unused]
  // align: 452 to 464
  ubyte align6[12];
  float4 fSnowBlendColor__uiColor;   // Offset:  464 Size:    16
  float4 fSnowMatControl__uiUNorm;   // Offset:  480 Size:    16 [unused]
  float fMaterialSnowBlendB;         // Offset:  496 Size:     4
  // align: 500 to 512
  ubyte align7[12];
  float4 fSnowControl;               // Offset:  512 Size:    16
};

//CBMhMaterialNPCFaceLocal__disclosure : 5133.shdr.src
struct CBMhMaterialNPCFaceLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  bool bBaseColorEmissive;           // Offset:   52 Size:     4 [unused]
  bool bBackFaceNormalFilp;          // Offset:   56 Size:     4 [unused]
  float fAnimEmitMin;                // Offset:   60 Size:     4 [unused]
  float fAnimEmitSpeed;              // Offset:   64 Size:     4 [unused]
  float2 fAddColorUV__uiUNorm;       // Offset:   68 Size:     8 [unused]
  // align: 76 to 80
  ubyte align0[4];
  float4 fAddNormalMaskA__uiUNorm;   // Offset:   80 Size:    16 [unused]
  float4 fAddNormalMaskB__uiUNorm;   // Offset:   96 Size:    16 [unused]
  float4 fAddNormalMaskC__uiUNorm;   // Offset:  112 Size:    16 [unused]
  float4 fAddNormalMaskD__uiUNorm;   // Offset:  128 Size:    16 [unused]
  bool bUseSkin;                     // Offset:  144 Size:     4 [unused]
  float fDetailNormalBlend__uiUNorm; // Offset:  148 Size:     4 [unused]
  // align: 152 to 160
  ubyte align1[8];
  float4 fUVTransformDetailNormal;   // Offset:  160 Size:    16 [unused]
};

//CBMotionBlur : 5151.shdr.src
struct CBMotionBlur {

  int iMotionBlurSampleNum;          // Offset:    0 Size:     4
  float fMotionBlurShutterSpeed;     // Offset:    4 Size:     4
  float fMaxAdditionalVelocity;      // Offset:    8 Size:     4
  // align: 12 to 16
  ubyte align0[4];
  row_major float4x4 fTransform;     // Offset:   16 Size:    64
  float fMotionBlurFurShutterSpeed;  // Offset:   80 Size:     4
};

//CBMhMaterialVfxTornadoLocal__disclosure : 5228.shdr.src
struct CBMhMaterialVfxTornadoLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  // align: 28 to 32
  ubyte align0[4];
  float4 fUVTransformA;              // Offset:   32 Size:    16
  float4 fUVTransformB;              // Offset:   48 Size:    16 [unused]
  float4 fUVTransformC;              // Offset:   64 Size:    16 [unused]
  float fVolumeBlend__uiSNorm;       // Offset:   80 Size:     4 [unused]
  float fVolumeBlendDistance;        // Offset:   84 Size:     4 [unused]
  // align: 88 to 96
  ubyte align1[8];
  float3 fRGBchFactor_uiColor;       // Offset:   96 Size:    12 [unused]
  // align: 108 to 112
  ubyte align2[4];
  float3 fEmissiveRGBchFactor_uiColor;// Offset:  112 Size:    12 [unused]
  float fEmissivePow;                // Offset:  124 Size:     4 [unused]
  float fEmissiveGradationPow;       // Offset:  128 Size:     4 [unused]
  float fOpacityFactor;              // Offset:  132 Size:     4 [unused]
  float fOpacityPow;                 // Offset:  136 Size:     4 [unused]
  float fVerticalOpacityPow;         // Offset:  140 Size:     4 [unused]
  float fVerticalOpacityPowInv;      // Offset:  144 Size:     4 [unused]
  float fNormalFactor__uiUNorm;      // Offset:  148 Size:     4 [unused]
  float fDispFactor;                 // Offset:  152 Size:     4
  float fFresnelPow;                 // Offset:  156 Size:     4 [unused]
  float fFlowSpeed;                  // Offset:  160 Size:     4 [unused]
  float fFlowStrength;               // Offset:  164 Size:     4 [unused]
  float fUVOffsetSpeed;              // Offset:  168 Size:     4
  // align: 172 to 176
  ubyte align3[4];
  float2 fUVOffsetSpeedFactorA;      // Offset:  176 Size:     8
  float2 fUVOffsetSpeedFactorB;      // Offset:  184 Size:     8 [unused]
  float2 fUVOffsetSpeedFactorC;      // Offset:  192 Size:     8 [unused]
  float fAngleFade;                  // Offset:  200 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:  204 Size:     4 [unused]
  float fTotalOpacity__uiUNorm;      // Offset:  208 Size:     4 [unused]
  float fMetalic__uiUNorm;           // Offset:  212 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:  216 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:  220 Size:     4 [unused]
  float fInnerOffsetScale;           // Offset:  224 Size:     4
  float fVelocityAttn;               // Offset:  228 Size:     4 [unused]
  bool bGBufferIdMaskEnable;         // Offset:  232 Size:     4 [unused]
  uint iGBufferIdMask;               // Offset:  236 Size:     4 [unused]
  float fNormalDecalBlend__uiUNorm;  // Offset:  240 Size:     4 [unused]
};

//CBContactShadowInfo : 5469.shdr.src
struct CBContactShadowInfo {

  float4 fContactShadowLengthCoefs;  // Offset:    0 Size:    16 [unused]
  float3 fContactShadowOptimizeParams;// Offset:   16 Size:    12
  // align: 28 to 32
  ubyte align0[4];
  float3 fContactShadowDirection;    // Offset:   32 Size:    12 [unused]
  bool bIsUseNoise;                  // Offset:   44 Size:     4
  bool bIsUseContactShadow;          // Offset:   48 Size:     4
};

//CBMhMaterialNPCEditFaceLocal__disclosure : 5265.shdr.src
struct CBMhMaterialNPCEditFaceLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  bool bBaseColorEmissive;           // Offset:   52 Size:     4 [unused]
  bool bBackFaceNormalFilp;          // Offset:   56 Size:     4 [unused]
  float fAnimEmitMin;                // Offset:   60 Size:     4 [unused]
  float fAnimEmitSpeed;              // Offset:   64 Size:     4 [unused]
  float2 fAddColorUV__uiUNorm;       // Offset:   68 Size:     8 [unused]
  // align: 76 to 80
  ubyte align0[4];
  float4 fAddNormalMaskA__uiUNorm;   // Offset:   80 Size:    16 [unused]
  float4 fAddNormalMaskB__uiUNorm;   // Offset:   96 Size:    16 [unused]
  float4 fAddNormalMaskC__uiUNorm;   // Offset:  112 Size:    16 [unused]
  float4 fAddNormalMaskD__uiUNorm;   // Offset:  128 Size:    16 [unused]
  float2 fPaintMapRC;                // Offset:  144 Size:     8 [unused]
  float fPaintMapNum;                // Offset:  152 Size:     4 [unused]
  // align: 156 to 160
  ubyte align1[4];
  float4 fPaintMapOffset__uiSNorm;   // Offset:  160 Size:    16 [unused]
  float4 fPaintColor__uiColor;       // Offset:  176 Size:    16 [unused]
  float fPaintRoughness__uiUNorm;    // Offset:  192 Size:     4 [unused]
  float fPaintMetal__uiUNorm;        // Offset:  196 Size:     4 [unused]
  float fPaintMapNumB;               // Offset:  200 Size:     4 [unused]
  // align: 204 to 208
  ubyte align2[4];
  float4 fPaintMapOffsetB__uiSNorm;  // Offset:  208 Size:    16 [unused]
  float4 fPaintColorB__uiColor;      // Offset:  224 Size:    16 [unused]
  float fPaintRoughnessB__uiUNorm;   // Offset:  240 Size:     4 [unused]
  float fPaintMetalB__uiUNorm;       // Offset:  244 Size:     4 [unused]
  float fPaintMapNumC;               // Offset:  248 Size:     4 [unused]
  // align: 252 to 256
  ubyte align3[4];
  float4 fPaintMapOffsetC__uiSNorm;  // Offset:  256 Size:    16 [unused]
  float4 fPaintColorC__uiColor;      // Offset:  272 Size:    16 [unused]
  float fPaintRoughnessC__uiUNorm;   // Offset:  288 Size:     4 [unused]
  float fPaintMetalC__uiUNorm;       // Offset:  292 Size:     4 [unused]
  float2 fFaceNormalBlend__uiUNorm;  // Offset:  296 Size:     8
  float fMayuMapNum;                 // Offset:  304 Size:     4 [unused]
  float2 fMayuMapOffset__uiSNorm;    // Offset:  308 Size:     8 [unused]
  // align: 316 to 320
  ubyte align4[4];
  float2 fMayuMapRC;                 // Offset:  320 Size:     8 [unused]
  // align: 328 to 336
  ubyte align5[8];
  float4 fMayuColor__uiColor;        // Offset:  336 Size:    16 [unused]
  bool bPaintEmit;                   // Offset:  352 Size:     4 [unused]
  bool bPaintEmitB;                  // Offset:  356 Size:     4 [unused]
  bool bPaintEmitC;                  // Offset:  360 Size:     4 [unused]
  // align: 364 to 368
  ubyte align6[4];
  float3 fPaintEmitIntensity__uiUNorm;// Offset:  368 Size:    12 [unused]
  float fPaintEmitIntensityMultiply; // Offset:  380 Size:     4 [unused]
  bool bPaintNormal;                 // Offset:  384 Size:     4 [unused]
  bool bPaintShade;                  // Offset:  388 Size:     4 [unused]
  bool bPaintNormalB;                // Offset:  392 Size:     4 [unused]
  bool bPaintShadeB;                 // Offset:  396 Size:     4 [unused]
  bool bPaintNormalC;                // Offset:  400 Size:     4 [unused]
  bool bPaintShadeC;                 // Offset:  404 Size:     4 [unused]
  float fFakeLightBlend;             // Offset:  408 Size:     4 [unused]
  float fFakeLightIntensity;         // Offset:  412 Size:     4 [unused]
  float3 fFakeFaceLight__uiDirection;// Offset:  416 Size:    12 [unused]
  float fFakeShadowIntensity__uiUNorm;// Offset:  428 Size:     4 [unused]
  float fFakeShadowLength;           // Offset:  432 Size:     4 [unused]
  float fDetailNormalBlend__uiUNorm; // Offset:  436 Size:     4 [unused]
  // align: 440 to 448
  ubyte align7[8];
  float4 fUVTransformDetailNormal;   // Offset:  448 Size:    16 [unused]
};

//CBDevelopColorPick : 5273.shdr.src
struct CBDevelopColorPick {

  uint2 mousePos;                    // Offset:    0 Size:     8
  bool gammaCorrect;                 // Offset:    8 Size:     4
};

//CBMhMaterialVfxSandFallLocal__disclosure : 5338.shdr.src
struct CBMhMaterialVfxSandFallLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fCubeMapFactor__uiColor;    // Offset:   16 Size:    12 [unused]
  // align: 28 to 32
  ubyte align0[4];
  float4 fUVTransformA;              // Offset:   32 Size:    16
  float4 fUVTransformB;              // Offset:   48 Size:    16 [unused]
  float fAlbedoBlend;                // Offset:   64 Size:     4 [unused]
  float fOpacityFactor;              // Offset:   68 Size:     4 [unused]
  float fNormalFactor__uiUNorm;      // Offset:   72 Size:     4 [unused]
  float fDetailfNormalFactor__uiUNorm;// Offset:   76 Size:     4 [unused]
  float fDetailNormalBlend__uiUNorm; // Offset:   80 Size:     4 [unused]
  float fRTNormalBlend__uiUNorm;     // Offset:   84 Size:     4 [unused]
  float fMetalic__uiUNorm;           // Offset:   88 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   92 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   96 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:  100 Size:     4 [unused]
  float fRaflectionAngle__uiSNorm;   // Offset:  104 Size:     4 [unused]
  float fFlowSpeed;                  // Offset:  108 Size:     4 [unused]
  float fFlowStrength;               // Offset:  112 Size:     4 [unused]
  float fUVOffsetSpeed;              // Offset:  116 Size:     4
  float2 fUVOffsetSpeedFactorA;      // Offset:  120 Size:     8
  float2 fUVOffsetSpeedFactorB;      // Offset:  128 Size:     8 [unused]
  float fInnerOffsetScale;           // Offset:  136 Size:     4
  float fDispFactor;                 // Offset:  140 Size:     4
  float3 fAdditinalAxis;             // Offset:  144 Size:    12
  bool bSceneEnvMap;                 // Offset:  156 Size:     4 [unused]
  bool bDisplacement;                // Offset:  160 Size:     4
  bool bRTBlend;                     // Offset:  164 Size:     4 [unused]
};

//CBMhMaterialSpeedTreeStdBlendSnowLocal__disclosure : 5395.shdr.src
struct CBMhMaterialSpeedTreeStdBlendSnowLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fDetailNormalBlend__uiUNorm; // Offset:   48 Size:     4 [unused]
  // align: 52 to 64
  ubyte align0[12];
  float4 fUVTransformA;              // Offset:   64 Size:    16
  float4 fUVTransformB;              // Offset:   80 Size:    16 [unused]
  float fTranslucency__uiUNorm;      // Offset:   96 Size:     4 [unused]
  // align: 100 to 112
  ubyte align1[12];
  float4 fBlendBaseMapFactor__uiColor;// Offset:  112 Size:    16 [unused]
  float3 fBlendEmissiveMapFactor__uiColor;// Offset:  128 Size:    12 [unused]
  float fBlendMetalic__uiUNorm;      // Offset:  140 Size:     4 [unused]
  float fBlendRoughness__uiUNorm;    // Offset:  144 Size:     4 [unused]
  float fBlendDetailNormalBlend__uiUNorm;// Offset:  148 Size:     4 [unused]
  float fBlendSubSurfaceBlend__uiUNorm;// Offset:  152 Size:     4 [unused]
  float fBlendRoughnessThreshold__uiUNorm;// Offset:  156 Size:     4 [unused]
  float fBlendRoughnessFillValue__uiUNorm;// Offset:  160 Size:     4 [unused]
  // align: 164 to 176
  ubyte align2[12];
  float4 fBlendUVTransformA;         // Offset:  176 Size:    16 [unused]
  float4 fBlendUVTransformB;         // Offset:  192 Size:    16 [unused]
  bool bUseUVSecondaryMtA;           // Offset:  208 Size:     4
  bool bUseUVSecondaryMtB;           // Offset:  212 Size:     4 [unused]
  bool bUseUVSecondaryMtBM;          // Offset:  216 Size:     4 [unused]
  bool bUseUVSecondaryDetailNMtA;    // Offset:  220 Size:     4 [unused]
  bool bUseUVSecondaryDetailNMtB;    // Offset:  224 Size:     4 [unused]
  bool bLightProbeEmissive;          // Offset:  228 Size:     4 [unused]
  // align: 232 to 240
  ubyte align3[8];
  float3 fEmissiveBlendColor__uiColor;// Offset:  240 Size:    12 [unused]
  float fEmissiveBlendColorBlend__uiUNorm;// Offset:  252 Size:     4 [unused]
  float3 fEmissiveBlendRimParam;     // Offset:  256 Size:    12 [unused]
  bool bSpecialBlend;                // Offset:  268 Size:     4 [unused]
  bool bWetNormalBlend;              // Offset:  272 Size:     4 [unused]
  float2 fWetNormalBlendRange__uiUNorm;// Offset:  276 Size:     8 [unused]
  float fSnowAlphaRef__uiUNorm;      // Offset:  284 Size:     4 [unused]
  float4 fSnowBaseMapFactor__uiColor;// Offset:  288 Size:    16 [unused]
  float3 fSnowEmissiveMapFactor__uiColor;// Offset:  304 Size:    12 [unused]
  float fSnowMetalic__uiUNorm;       // Offset:  316 Size:     4 [unused]
  float fSnowRoughness__uiUNorm;     // Offset:  320 Size:     4 [unused]
  float fSnowDetailNormalBlend__uiUNorm;// Offset:  324 Size:     4 [unused]
  float fSnowSubSurfaceBlend__uiUNorm;// Offset:  328 Size:     4 [unused]
  // align: 332 to 336
  ubyte align4[4];
  float4 fSnowUVTransformA;          // Offset:  336 Size:    16 [unused]
  float4 fSnowUVTransformB;          // Offset:  352 Size:    16 [unused]
  float3 fSnowDir__uiDirection;      // Offset:  368 Size:    12 [unused]
  float fSnowPlaneNormal__uiUNorm;   // Offset:  380 Size:     4 [unused]
  float3 fSnowOp;                    // Offset:  384 Size:    12 [unused]
  bool bUseUVSecondarySnowMt;        // Offset:  396 Size:     4 [unused]
  bool bUseUVSecondarySnowMtBM;      // Offset:  400 Size:     4 [unused]
};

//CBMhMaterialPLEditFaceLocal__disclosure : 5471.shdr.src
struct CBMhMaterialPLEditFaceLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  bool bBaseColorEmissive;           // Offset:   52 Size:     4 [unused]
  bool bBackFaceNormalFilp;          // Offset:   56 Size:     4 [unused]
  float fAnimEmitMin;                // Offset:   60 Size:     4 [unused]
  float fAnimEmitSpeed;              // Offset:   64 Size:     4 [unused]
  float2 fAddColorUV__uiUNorm;       // Offset:   68 Size:     8 [unused]
  // align: 76 to 80
  ubyte align0[4];
  float4 fAddNormalMaskA__uiUNorm;   // Offset:   80 Size:    16 [unused]
  float4 fAddNormalMaskB__uiUNorm;   // Offset:   96 Size:    16 [unused]
  float4 fAddNormalMaskC__uiUNorm;   // Offset:  112 Size:    16 [unused]
  float4 fAddNormalMaskD__uiUNorm;   // Offset:  128 Size:    16 [unused]
  float2 fPaintMapRC;                // Offset:  144 Size:     8 [unused]
  float fPaintMapNum;                // Offset:  152 Size:     4 [unused]
  // align: 156 to 160
  ubyte align1[4];
  float4 fPaintMapOffset__uiSNorm;   // Offset:  160 Size:    16 [unused]
  float4 fPaintColor__uiColor;       // Offset:  176 Size:    16 [unused]
  float fPaintRoughness__uiUNorm;    // Offset:  192 Size:     4 [unused]
  float fPaintMetal__uiUNorm;        // Offset:  196 Size:     4 [unused]
  float fPaintMapNumB;               // Offset:  200 Size:     4 [unused]
  // align: 204 to 208
  ubyte align2[4];
  float4 fPaintMapOffsetB__uiSNorm;  // Offset:  208 Size:    16 [unused]
  float4 fPaintColorB__uiColor;      // Offset:  224 Size:    16 [unused]
  float fPaintRoughnessB__uiUNorm;   // Offset:  240 Size:     4 [unused]
  float fPaintMetalB__uiUNorm;       // Offset:  244 Size:     4 [unused]
  float fPaintMapNumC;               // Offset:  248 Size:     4 [unused]
  // align: 252 to 256
  ubyte align3[4];
  float4 fPaintMapOffsetC__uiSNorm;  // Offset:  256 Size:    16 [unused]
  float4 fPaintColorC__uiColor;      // Offset:  272 Size:    16 [unused]
  float fPaintRoughnessC__uiUNorm;   // Offset:  288 Size:     4 [unused]
  float fPaintMetalC__uiUNorm;       // Offset:  292 Size:     4 [unused]
  float2 fFaceNormalBlend__uiUNorm;  // Offset:  296 Size:     8
  float fMayuMapNum;                 // Offset:  304 Size:     4 [unused]
  float2 fMayuMapOffset__uiSNorm;    // Offset:  308 Size:     8 [unused]
  // align: 316 to 320
  ubyte align4[4];
  float2 fMayuMapRC;                 // Offset:  320 Size:     8 [unused]
  // align: 328 to 336
  ubyte align5[8];
  float4 fMayuColor__uiColor;        // Offset:  336 Size:    16 [unused]
  bool bPaintEmit;                   // Offset:  352 Size:     4 [unused]
  bool bPaintEmitB;                  // Offset:  356 Size:     4 [unused]
  bool bPaintEmitC;                  // Offset:  360 Size:     4 [unused]
  // align: 364 to 368
  ubyte align6[4];
  float3 fPaintEmitIntensity__uiUNorm;// Offset:  368 Size:    12 [unused]
  float fPaintEmitIntensityMultiply; // Offset:  380 Size:     4 [unused]
  bool bPaintNormal;                 // Offset:  384 Size:     4 [unused]
  bool bPaintShade;                  // Offset:  388 Size:     4 [unused]
  bool bPaintNormalB;                // Offset:  392 Size:     4 [unused]
  bool bPaintShadeB;                 // Offset:  396 Size:     4 [unused]
  bool bPaintNormalC;                // Offset:  400 Size:     4 [unused]
  bool bPaintShadeC;                 // Offset:  404 Size:     4 [unused]
  float fFakeLightBlend;             // Offset:  408 Size:     4 [unused]
  float fFakeLightIntensity;         // Offset:  412 Size:     4 [unused]
  float3 fFakeFaceLight__uiDirection;// Offset:  416 Size:    12 [unused]
  float fFakeShadowIntensity__uiUNorm;// Offset:  428 Size:     4 [unused]
  float fFakeShadowLength;           // Offset:  432 Size:     4 [unused]
  float fDetailNormalBlend__uiUNorm; // Offset:  436 Size:     4 [unused]
  // align: 440 to 448
  ubyte align7[8];
  float4 fUVTransformDetailNormal;   // Offset:  448 Size:    16 [unused]
};

//CBWaterPick : 545.shdr.src
struct CBWaterPick {

  uint2 iWaterAddress;               // Offset:    0 Size:     8
};

//CBMhMaterialEM044Local__disclosure : 5540.shdr.src
struct CBMhMaterialEM044Local__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  bool bBaseColorEmissive;           // Offset:   52 Size:     4 [unused]
  float2 fPaintUVTile;               // Offset:   56 Size:     8 [unused]
  float fAddNormalBlend__uiUNorm;    // Offset:   64 Size:     4 [unused]
  // align: 68 to 80
  ubyte align0[12];
  float4 fAddNormalMaskA__uiSNorm;   // Offset:   80 Size:    16 [unused]
  float4 fAddNormalMaskB__uiSNorm;   // Offset:   96 Size:    16 [unused]
  float fAddNormalMaskC__uiUNorm;    // Offset:  112 Size:     4 [unused]
  float fAddNormalMaskD__uiUNorm;    // Offset:  116 Size:     4 [unused]
  bool bBackFaceShading;             // Offset:  120 Size:     4 [unused]
  bool bBackFaceNormalFilp;          // Offset:  124 Size:     4 [unused]
  float3 fKizuColor__uiColor;        // Offset:  128 Size:    12 [unused]
  // align: 140 to 144
  ubyte align1[4];
  float2 fKizuUVOffset__uiUNorm;     // Offset:  144 Size:     8 [unused]
  float fKizuMultiply;               // Offset:  152 Size:     4 [unused]
  bool bLegendary;                   // Offset:  156 Size:     4 [unused]
  float4 fLegendColor__uiColor;      // Offset:  160 Size:    16 [unused]
  float2 fLegendMetalMask__uiUNorm;  // Offset:  176 Size:     8 [unused]
  float fLegendRoughness;            // Offset:  184 Size:     4 [unused]
  // align: 188 to 192
  ubyte align2[4];
  float3 fLegendFilm__uiUNorm;       // Offset:  192 Size:    12 [unused]
  float fLegendSSSMask__uiUNorm;     // Offset:  204 Size:     4 [unused]
  float3 fLegendHSV__uiSNorm;        // Offset:  208 Size:    12 [unused]
  float fLegendFilmIOR__uiUNorm;     // Offset:  220 Size:     4 [unused]
  float fPartsMaskA__uiUNorm;        // Offset:  224 Size:     4 [unused]
  float fPartsMaskB__uiUNorm;        // Offset:  228 Size:     4 [unused]
  float fPartsMaskC__uiUNorm;        // Offset:  232 Size:     4 [unused]
  float fPartsMaskD__uiUNorm;        // Offset:  236 Size:     4 [unused]
  float fPartsMaskX__uiUNorm;        // Offset:  240 Size:     4 [unused]
  float fPartsMaskY__uiUNorm;        // Offset:  244 Size:     4 [unused]
  float fPartsMaskZ__uiUNorm;        // Offset:  248 Size:     4 [unused]
  float fPartsMaskW__uiUNorm;        // Offset:  252 Size:     4 [unused]
  bool bUseOffset;                   // Offset:  256 Size:     4
  float fOffsetScale;                // Offset:  260 Size:     4
  bool bTranslucentOffset;           // Offset:  264 Size:     4
  bool bAntiSSSEmit;                 // Offset:  268 Size:     4 [unused]
  float3 fFlowDirDir__uiDirection;   // Offset:  272 Size:    12 [unused]
  // align: 284 to 288
  ubyte align3[4];
  float4 fFlowControl__uiUNorm;      // Offset:  288 Size:    16 [unused]
  float fFlowTile;                   // Offset:  304 Size:     4 [unused]
  // align: 308 to 320
  ubyte align4[12];
  float4 fFlowColor__uiColor;        // Offset:  320 Size:    16 [unused]
  float4 fFlowMatControl__uiUNorm;   // Offset:  336 Size:    16 [unused]
  float fFilmThickness__uiUNorm;     // Offset:  352 Size:     4 [unused]
  float fFilmBlend__uiUNorm;         // Offset:  356 Size:     4 [unused]
  float fFilmIOR__uiUNorm;           // Offset:  360 Size:     4 [unused]
  float fRefraction__uiUNorm;        // Offset:  364 Size:     4 [unused]
  float fRefractionBlend__uiUNorm;   // Offset:  368 Size:     4 [unused]
  float fAnimEmitMin;                // Offset:  372 Size:     4 [unused]
  float fAnimEmitSpeed;              // Offset:  376 Size:     4 [unused]
  bool bUseWaveEmit;                 // Offset:  380 Size:     4 [unused]
  float fAnimEmitWave;               // Offset:  384 Size:     4 [unused]
  float fRimAlphaPower__uiSNorm;     // Offset:  388 Size:     4 [unused]
  float fRimTranslucency__uiUNorm;   // Offset:  392 Size:     4 [unused]
  float fRimNormal__uiUNorm;         // Offset:  396 Size:     4 [unused]
  float fSnowUVTile;                 // Offset:  400 Size:     4 [unused]
  // align: 404 to 416
  ubyte align5[12];
  float4 fSnowBlendColor__uiColor;   // Offset:  416 Size:    16
  float4 fSnowMatControl__uiUNorm;   // Offset:  432 Size:    16 [unused]
  float fMaterialSnowBlendB;         // Offset:  448 Size:     4
  // align: 452 to 464
  ubyte align6[12];
  float4 fSnowControl;               // Offset:  464 Size:    16
};

//CBMhMaterialPLHairLocal__disclosure : 5623.shdr.src
struct CBMhMaterialPLHairLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  bool bBaseColorEmissive;           // Offset:   52 Size:     4 [unused]
  bool bBackFaceNormalFilp;          // Offset:   56 Size:     4 [unused]
  float fAnimEmitMin;                // Offset:   60 Size:     4 [unused]
  float fAnimEmitSpeed;              // Offset:   64 Size:     4 [unused]
  // align: 68 to 80
  ubyte align0[12];
  float4 fPrimaryColor__uiColor;     // Offset:   80 Size:    16 [unused]
  float4 fSecondaryColor__uiColor;   // Offset:   96 Size:    16 [unused]
  float fPrimaryExpo__uiUNorm;       // Offset:  112 Size:     4 [unused]
  float fSecondaryExpo__uiUNorm;     // Offset:  116 Size:     4 [unused]
  float fPrimaryShift__uiSNorm;      // Offset:  120 Size:     4 [unused]
  float fSecondaryShift__uiSNorm;    // Offset:  124 Size:     4 [unused]
  float fShininess;                  // Offset:  128 Size:     4 [unused]
  float3 fFakeLight__uiDirection;    // Offset:  132 Size:    12 [unused]
  float fFurNMHeight;                // Offset:  144 Size:     4 [unused]
  // align: 148 to 160
  ubyte align1[12];
  float4 fFurParam__uiUNorm;         // Offset:  160 Size:    16 [unused]
  float fFurTile;                    // Offset:  176 Size:     4 [unused]
  // align: 180 to 192
  ubyte align2[12];
  float4 fVertexAO__uiColor;         // Offset:  192 Size:    16 [unused]
  float fVColorNormalBlend__uiUNorm; // Offset:  208 Size:     4
  float fRimWidth__uiUNorm;          // Offset:  212 Size:     4 [unused]
  float fRimNormalBlend__uiUNorm;    // Offset:  216 Size:     4 [unused]
  bool bUseRimTranslucency;          // Offset:  220 Size:     4 [unused]
  bool bUseOffset;                   // Offset:  224 Size:     4
  float fInnerOffsetScale;           // Offset:  228 Size:     4
  float fDetailNormalBlend__uiUNorm; // Offset:  232 Size:     4 [unused]
  // align: 236 to 240
  ubyte align3[4];
  float4 fUVTransformDetailNormal;   // Offset:  240 Size:    16 [unused]
};

//CBMhMaterialArrayLocal__disclosure : 5735.shdr.src
struct CBMhMaterialArrayLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  // align: 52 to 64
  ubyte align0[12];
  float4 fUVTransformA;              // Offset:   64 Size:    16 [unused]
  float fArray_Speed;                // Offset:   80 Size:     4 [unused]
  // align: 84 to 96
  ubyte align1[12];
  float4 fArrayOrig;                 // Offset:   96 Size:    16
};

//CBVignetting : 5742.shdr.src
struct CBVignetting {

  float fOffset;                     // Offset:    0 Size:     4
  float fPow;                        // Offset:    4 Size:     4
  float fEllipticity;                // Offset:    8 Size:     4
  // align: 12 to 16
  ubyte align0[4];
  float3 fColor;                     // Offset:   16 Size:    12
};

//CBMhEmissiveFog__disclosure : 5840.shdr.src
struct CBMhEmissiveFog__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float4 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    16 [unused]
  float fMetalic__uiUNorm;           // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   40 Size:     4 [unused]
  // align: 44 to 48
  ubyte align0[4];
  float4 fUVTransformA;              // Offset:   48 Size:    16 [unused]
  float4 fUVTransformB;              // Offset:   64 Size:    16 [unused]
  float fFlowSpeed;                  // Offset:   80 Size:     4 [unused]
  float fFlowSpeedSecondary;         // Offset:   84 Size:     4 [unused]
  float fFlowStrength;               // Offset:   88 Size:     4 [unused]
  float fSecondaryFlowStrength;      // Offset:   92 Size:     4 [unused]
  float fLerpAlpha_BMtoEM__uiUNorm;  // Offset:   96 Size:     4 [unused]
  bool fAlphaEdge;                   // Offset:  100 Size:     4 [unused]
  float fToneAlpha__uiUNorm;         // Offset:  104 Size:     4 [unused]
  float fToneEdge__uiUNorm;          // Offset:  108 Size:     4 [unused]
  float4 fEdgeColor__uiColor;        // Offset:  112 Size:    16 [unused]
  bool fVertexAlpha;                 // Offset:  128 Size:     4 [unused]
  float fVolumeBlend__uiSNorm;       // Offset:  132 Size:     4 [unused]
  float fDotOpacity;                 // Offset:  136 Size:     4 [unused]
  float fDotOpacityFactor;           // Offset:  140 Size:     4 [unused]
  bool bDotInverse;                  // Offset:  144 Size:     4 [unused]
  float fNearOpacity;                // Offset:  148 Size:     4 [unused]
  float fNearOpacityDistance;        // Offset:  152 Size:     4 [unused]
  float fDiffuseChroma__uiUNorm;     // Offset:  156 Size:     4 [unused]
  float fSpecularChroma__uiUNorm;    // Offset:  160 Size:     4 [unused]
  float fInnerOffsetScale;           // Offset:  164 Size:     4
  float fVelocityAttn;               // Offset:  168 Size:     4 [unused]
  float fNormalDecalBlend__uiUNorm;  // Offset:  172 Size:     4 [unused]
  bool bUseUVPrimaryAM;              // Offset:  176 Size:     4 [unused]
};

//CBMhMaterialSpeedTreeStdLocal__disclosure : 7063.shdr.src
struct CBMhMaterialSpeedTreeStdLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fDetailNormalBlend__uiUNorm; // Offset:   48 Size:     4 [unused]
  // align: 52 to 64
  ubyte align0[12];
  float4 fUVTransformA;              // Offset:   64 Size:    16
  float4 fUVTransformB;              // Offset:   80 Size:    16 [unused]
  float4 fBaseMapModulation__uiUNorm;// Offset:   96 Size:    16 [unused]
  float fTranslucency__uiUNorm;      // Offset:  112 Size:     4 [unused]
  bool bLightProbeEmissive;          // Offset:  116 Size:     4 [unused]
  // align: 120 to 128
  ubyte align1[8];
  float3 fEmissiveBlendColor__uiColor;// Offset:  128 Size:    12 [unused]
  float fEmissiveBlendColorBlend__uiUNorm;// Offset:  140 Size:     4 [unused]
  float3 fEmissiveBlendRimParam;     // Offset:  144 Size:    12 [unused]
  bool bSpecialBlend;                // Offset:  156 Size:     4 [unused]
  float fRoughnessThreshold__uiUNorm;// Offset:  160 Size:     4 [unused]
  float fRoughnessFillValue__uiUNorm;// Offset:  164 Size:     4 [unused]
  bool bWetNormalBlend;              // Offset:  168 Size:     4 [unused]
  // align: 172 to 176
  ubyte align2[4];
  float2 fWetNormalBlendRange__uiUNorm;// Offset:  176 Size:     8 [unused]
};

//CBMhMaterialNPCSkinLocal__disclosure : 5940.shdr.src
struct CBMhMaterialNPCSkinLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  bool bBaseColorEmissive;           // Offset:   52 Size:     4 [unused]
  bool bBackFaceNormalFilp;          // Offset:   56 Size:     4 [unused]
  float fAnimEmitMin;                // Offset:   60 Size:     4 [unused]
  float fAnimEmitSpeed;              // Offset:   64 Size:     4 [unused]
  float2 fAddColorUV__uiUNorm;       // Offset:   68 Size:     8 [unused]
  bool bUseCMM;                      // Offset:   76 Size:     4 [unused]
  float4 fAddColorA__uiColor;        // Offset:   80 Size:    16 [unused]
  float4 fAddColorB__uiColor;        // Offset:   96 Size:    16 [unused]
  float fDetailNormalBlend__uiUNorm; // Offset:  112 Size:     4 [unused]
  // align: 116 to 128
  ubyte align0[12];
  float4 fUVTransformDetailNormal;   // Offset:  128 Size:    16 [unused]
};

//CBMhMaterialScrWaterLocal__disclosure : 6557.shdr.src
struct CBMhMaterialScrWaterLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  // align: 28 to 32
  ubyte align0[4];
  float3 fCubeMapFactor__uiColor;    // Offset:   32 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   44 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   48 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   52 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   56 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   60 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   64 Size:     4 [unused]
  // align: 68 to 80
  ubyte align1[12];
  float4 fUVTransformA;              // Offset:   80 Size:    16
  float4 fUVTransformB;              // Offset:   96 Size:    16 [unused]
  float2 fUVOffsetSpeedFactor;       // Offset:  112 Size:     8
  float2 fUVOffsetSpeedFactorDetail; // Offset:  120 Size:     8 [unused]
  float fDetailNormalBlend__uiUNorm; // Offset:  128 Size:     4 [unused]
  float fRefraction__uiUNorm;        // Offset:  132 Size:     4 [unused]
  float fRefractionPow__uiUNorm;     // Offset:  136 Size:     4 [unused]
  // align: 140 to 144
  ubyte align2[4];
  float3 fRefractionFactor__uiColor; // Offset:  144 Size:    12 [unused]
  bool bRefractionScreenFade;        // Offset:  156 Size:     4 [unused]
  float fVolumeBlend__uiSNorm;       // Offset:  160 Size:     4
  float fFlowStrength;               // Offset:  164 Size:     4
  float fFlowSpeed;                  // Offset:  168 Size:     4
  bool bDecalMode;                   // Offset:  172 Size:     4 [unused]
};

//CBMhMaterialEM106Local__disclosure : 658.shdr.src
struct CBMhMaterialEM106Local__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  bool bBaseColorEmissive;           // Offset:   52 Size:     4 [unused]
  float2 fPaintUVTile;               // Offset:   56 Size:     8 [unused]
  float fAddNormalBlend__uiUNorm;    // Offset:   64 Size:     4 [unused]
  // align: 68 to 80
  ubyte align0[12];
  float4 fAddNormalMaskA__uiSNorm;   // Offset:   80 Size:    16 [unused]
  float4 fAddNormalMaskB__uiSNorm;   // Offset:   96 Size:    16 [unused]
  float fAddNormalMaskC__uiUNorm;    // Offset:  112 Size:     4 [unused]
  float fAddNormalMaskD__uiUNorm;    // Offset:  116 Size:     4 [unused]
  bool bBackFaceShading;             // Offset:  120 Size:     4 [unused]
  bool bBackFaceNormalFilp;          // Offset:  124 Size:     4 [unused]
  float3 fKizuColor__uiColor;        // Offset:  128 Size:    12 [unused]
  // align: 140 to 144
  ubyte align1[4];
  float2 fKizuUVOffset__uiUNorm;     // Offset:  144 Size:     8 [unused]
  float fKizuMultiply;               // Offset:  152 Size:     4 [unused]
  bool bLegendary;                   // Offset:  156 Size:     4 [unused]
  float4 fLegendColor__uiColor;      // Offset:  160 Size:    16 [unused]
  float2 fLegendMetalMask__uiUNorm;  // Offset:  176 Size:     8 [unused]
  float fLegendRoughness;            // Offset:  184 Size:     4 [unused]
  // align: 188 to 192
  ubyte align2[4];
  float3 fLegendFilm__uiUNorm;       // Offset:  192 Size:    12 [unused]
  float fLegendSSSMask__uiUNorm;     // Offset:  204 Size:     4 [unused]
  float3 fLegendHSV__uiSNorm;        // Offset:  208 Size:    12 [unused]
  float fLegendFilmIOR__uiUNorm;     // Offset:  220 Size:     4 [unused]
  float fPartsMaskA__uiUNorm;        // Offset:  224 Size:     4 [unused]
  float fPartsMaskB__uiUNorm;        // Offset:  228 Size:     4 [unused]
  float fPartsMaskC__uiUNorm;        // Offset:  232 Size:     4 [unused]
  float fPartsMaskD__uiUNorm;        // Offset:  236 Size:     4 [unused]
  float fPartsMaskX__uiUNorm;        // Offset:  240 Size:     4 [unused]
  float fPartsMaskY__uiUNorm;        // Offset:  244 Size:     4 [unused]
  float fPartsMaskZ__uiUNorm;        // Offset:  248 Size:     4 [unused]
  float fPartsMaskW__uiUNorm;        // Offset:  252 Size:     4 [unused]
  bool bUseOffset;                   // Offset:  256 Size:     4
  float fOffsetScale;                // Offset:  260 Size:     4
  bool bTranslucentOffset;           // Offset:  264 Size:     4
  bool bAntiSSSEmit;                 // Offset:  268 Size:     4 [unused]
  float3 fFlowDirDir__uiDirection;   // Offset:  272 Size:    12 [unused]
  // align: 284 to 288
  ubyte align3[4];
  float4 fFlowControl__uiUNorm;      // Offset:  288 Size:    16 [unused]
  float fFlowTile;                   // Offset:  304 Size:     4 [unused]
  // align: 308 to 320
  ubyte align4[12];
  float4 fFlowColor__uiColor;        // Offset:  320 Size:    16 [unused]
  float4 fFlowMatControl__uiUNorm;   // Offset:  336 Size:    16 [unused]
  float fFilmThickness__uiUNorm;     // Offset:  352 Size:     4 [unused]
  float fFilmBlend__uiUNorm;         // Offset:  356 Size:     4 [unused]
  float fFilmIOR__uiUNorm;           // Offset:  360 Size:     4 [unused]
  float fRefraction__uiUNorm;        // Offset:  364 Size:     4 [unused]
  float fRefractionBlend__uiUNorm;   // Offset:  368 Size:     4 [unused]
  // align: 372 to 384
  ubyte align5[12];
  float4 fDetailBlend__uiUNorm;      // Offset:  384 Size:    16 [unused]
  float4 fDetailTile;                // Offset:  400 Size:    16 [unused]
  float4 fDetailA_Color__uiColor;    // Offset:  416 Size:    16 [unused]
  float4 fDetailB_Color__uiColor;    // Offset:  432 Size:    16 [unused]
  float4 fDetailC_Color__uiColor;    // Offset:  448 Size:    16 [unused]
  float4 fDetailD_Color__uiColor;    // Offset:  464 Size:    16 [unused]
  float4 fDetail_Roughness__uiUNorm; // Offset:  480 Size:    16 [unused]
  float4 fDetail_Metal__uiUNorm;     // Offset:  496 Size:    16 [unused]
  bool bAntiEmitSSS;                 // Offset:  512 Size:     4 [unused]
  float fAnimEmitMin;                // Offset:  516 Size:     4 [unused]
  float fAnimEmitSpeed;              // Offset:  520 Size:     4 [unused]
  bool bUseWaveEmit;                 // Offset:  524 Size:     4 [unused]
  float fAnimEmitWave;               // Offset:  528 Size:     4 [unused]
  float fRimAlphaPower__uiSNorm;     // Offset:  532 Size:     4 [unused]
  float fRimTranslucency__uiUNorm;   // Offset:  536 Size:     4 [unused]
  float fRimNormal__uiUNorm;         // Offset:  540 Size:     4 [unused]
  float fSnowUVTile;                 // Offset:  544 Size:     4 [unused]
  // align: 548 to 560
  ubyte align6[12];
  float4 fSnowBlendColor__uiColor;   // Offset:  560 Size:    16
  float4 fSnowMatControl__uiUNorm;   // Offset:  576 Size:    16 [unused]
  float fMaterialSnowBlendB;         // Offset:  592 Size:     4
  // align: 596 to 608
  ubyte align7[12];
  float4 fSnowControl;               // Offset:  608 Size:    16
};

//CBMhSky2SimpleVS : 6013.shdr.src
struct CBMhSky2SimpleVS {

  row_major float3x4 fSkyWorld;      // Offset:    0 Size:    48
};

//CBPartialColor : 6016.shdr.src
struct CBPartialColor {

  row_major float4x4 color_matrix;   // Offset:    0 Size:    64
  float compensate;                  // Offset:   64 Size:     4
};

//CBToneMappingSdrSim : 6067.shdr.src
struct CBToneMappingSdrSim {

  uint iToneMapType;                 // Offset:    0 Size:     4
  bool bLuminanceVersion;            // Offset:    4 Size:     4
  float fShouldStr;                  // Offset:    8 Size:     4
  float fLinearStr;                  // Offset:   12 Size:     4
  float fIntermediate;               // Offset:   16 Size:     4
  float fS1;                         // Offset:   20 Size:     4
  float fS2;                         // Offset:   24 Size:     4
  float fS3;                         // Offset:   28 Size:     4
  float fS4;                         // Offset:   32 Size:     4
  uint iLUTSize;                     // Offset:   36 Size:     4
  bool bIsLinearToPQ;                // Offset:   40 Size:     4
  bool bIsPQToLinear;                // Offset:   44 Size:     4
  bool bEnableColorGrading;          // Offset:   48 Size:     4
  bool bEnableSdrSimulation;         // Offset:   52 Size:     4
  bool bEnableMaxLuminanceTest;      // Offset:   56 Size:     4
};

//CB_CombinedFilter_ImagePlane : 9499.shdr.src
struct CB_CombinedFilter_ImagePlane {

  uint iBlendType;                   // Offset:    0 Size:     4
  // align: 4 to 16
  ubyte align0[12];
  row_major float4x4 fUVTransform;   // Offset:   16 Size:    64 [unused]
  float4 fPlaneColor;                // Offset:   80 Size:    16
};

//CB_CombinedFilter : 9499.shdr.src
struct CB_CombinedFilter {

  bool bEnableFXAA;                  // Offset:    0 Size:     4
  bool bEnableTemporalAA;            // Offset:    4 Size:     4 [unused]
  bool bEnableColorCorrect;          // Offset:    8 Size:     4
  bool bEnableImagePlane;            // Offset:   12 Size:     4
};

//CB_CombinedFilter_ColorCorrect : 9499.shdr.src
struct CB_CombinedFilter_ColorCorrect {

  float fDepthNear;                  // Offset:    0 Size:     4
  float fDepthFar;                   // Offset:    4 Size:     4
  bool bHdrExtrapolation;            // Offset:    8 Size:     4
  float fHdrIntensityRangeInv;       // Offset:   12 Size:     4
};

//cbHBAO : 9669.shdr.src
struct cbHBAO {

  float HBAORadiusToScreen;          // Offset:    0 Size:     4
  float HBAONegInvR2;                // Offset:    4 Size:     4
  float HBAONDotVBias;               // Offset:    8 Size:     4
  float HBAOAoMultiplier;            // Offset:   12 Size:     4
  float HBAOSmallScaleAOAmount;      // Offset:   16 Size:     4
  float HBAOLargeScaleAOAmount;      // Offset:   20 Size:     4
  float HBAONormalBlendRate;         // Offset:   24 Size:     4
};

//CBMhMaterialFlagWaveBlendLocal__disclosure : 6261.shdr.src
struct CBMhMaterialFlagWaveBlendLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  // align: 52 to 64
  ubyte align0[12];
  float4 fUVTransformA;              // Offset:   64 Size:    16 [unused]
  float fVPushScale;                 // Offset:   80 Size:     4
  float fVPushWave;                  // Offset:   84 Size:     4 [unused]
  float fVPushSpeed;                 // Offset:   88 Size:     4
  // align: 92 to 96
  ubyte align1[4];
  float4 fFlagUvEditA;               // Offset:   96 Size:    16
  float4 fFlagUvEditB;               // Offset:  112 Size:    16
  float4 fFlagControl;               // Offset:  128 Size:    16
  float4 fDisplaceControl;           // Offset:  144 Size:    16
  float fDispFactor;                 // Offset:  160 Size:     4
  // align: 164 to 176
  ubyte align2[12];
  float4 fBlendBaseMapFactor__uiColor;// Offset:  176 Size:    16 [unused]
  float3 fBlendEmissiveMapFactor__uiColor;// Offset:  192 Size:    12 [unused]
  float fBlendMetalic__uiUNorm;      // Offset:  204 Size:     4 [unused]
  float fBlendRoughness__uiUNorm;    // Offset:  208 Size:     4 [unused]
  float fBlendSpecular__uiUNorm;     // Offset:  212 Size:     4 [unused]
  float fBlendSubSurfaceBlend__uiUNorm;// Offset:  216 Size:     4 [unused]
  // align: 220 to 224
  ubyte align3[4];
  float4 fBlendUVTransformA;         // Offset:  224 Size:    16 [unused]
  bool bUseUVSecondaryMtBM;          // Offset:  240 Size:     4 [unused]
};

//CBMhMaterial_EM105_EVCLocal__disclosure : 6329.shdr.src
struct CBMhMaterial_EM105_EVCLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  bool bBaseColorEmissive;           // Offset:   52 Size:     4 [unused]
  float2 fPaintUVTile;               // Offset:   56 Size:     8 [unused]
  float fAddNormalBlend__uiUNorm;    // Offset:   64 Size:     4 [unused]
  // align: 68 to 80
  ubyte align0[12];
  float4 fAddNormalMaskA__uiSNorm;   // Offset:   80 Size:    16 [unused]
  float4 fAddNormalMaskB__uiSNorm;   // Offset:   96 Size:    16 [unused]
  float fAddNormalMaskC__uiUNorm;    // Offset:  112 Size:     4 [unused]
  float fAddNormalMaskD__uiUNorm;    // Offset:  116 Size:     4 [unused]
  bool bBackFaceShading;             // Offset:  120 Size:     4 [unused]
  bool bBackFaceNormalFilp;          // Offset:  124 Size:     4 [unused]
  float3 fKizuColor__uiColor;        // Offset:  128 Size:    12 [unused]
  // align: 140 to 144
  ubyte align1[4];
  float2 fKizuUVOffset__uiUNorm;     // Offset:  144 Size:     8 [unused]
  float fKizuMultiply;               // Offset:  152 Size:     4 [unused]
  bool bLegendary;                   // Offset:  156 Size:     4 [unused]
  float4 fLegendColor__uiColor;      // Offset:  160 Size:    16 [unused]
  float2 fLegendMetalMask__uiUNorm;  // Offset:  176 Size:     8 [unused]
  float fLegendRoughness;            // Offset:  184 Size:     4 [unused]
  // align: 188 to 192
  ubyte align2[4];
  float3 fLegendFilm__uiUNorm;       // Offset:  192 Size:    12 [unused]
  float fLegendSSSMask__uiUNorm;     // Offset:  204 Size:     4 [unused]
  float3 fLegendHSV__uiSNorm;        // Offset:  208 Size:    12 [unused]
  float fLegendFilmIOR__uiUNorm;     // Offset:  220 Size:     4 [unused]
  float fPartsMaskA__uiUNorm;        // Offset:  224 Size:     4 [unused]
  float fPartsMaskB__uiUNorm;        // Offset:  228 Size:     4 [unused]
  float fPartsMaskC__uiUNorm;        // Offset:  232 Size:     4 [unused]
  float fPartsMaskD__uiUNorm;        // Offset:  236 Size:     4 [unused]
  float fPartsMaskX__uiUNorm;        // Offset:  240 Size:     4 [unused]
  float fPartsMaskY__uiUNorm;        // Offset:  244 Size:     4 [unused]
  float fPartsMaskZ__uiUNorm;        // Offset:  248 Size:     4 [unused]
  float fPartsMaskW__uiUNorm;        // Offset:  252 Size:     4 [unused]
  bool bUseOffset;                   // Offset:  256 Size:     4
  float fOffsetScale;                // Offset:  260 Size:     4
  bool bTranslucentOffset;           // Offset:  264 Size:     4
  bool bAntiSSSEmit;                 // Offset:  268 Size:     4 [unused]
  float3 fFlowDirDir__uiDirection;   // Offset:  272 Size:    12 [unused]
  // align: 284 to 288
  ubyte align3[4];
  float4 fFlowControl__uiUNorm;      // Offset:  288 Size:    16 [unused]
  float fFlowTile;                   // Offset:  304 Size:     4 [unused]
  // align: 308 to 320
  ubyte align4[12];
  float4 fFlowColor__uiColor;        // Offset:  320 Size:    16 [unused]
  float4 fFlowMatControl__uiUNorm;   // Offset:  336 Size:    16 [unused]
  float fFilmThickness__uiUNorm;     // Offset:  352 Size:     4 [unused]
  float fFilmBlend__uiUNorm;         // Offset:  356 Size:     4 [unused]
  float fFilmIOR__uiUNorm;           // Offset:  360 Size:     4 [unused]
  float fRefraction__uiUNorm;        // Offset:  364 Size:     4 [unused]
  float fRefractionBlend__uiUNorm;   // Offset:  368 Size:     4 [unused]
  bool bUseBlendDisplace;            // Offset:  372 Size:     4
  float fVAnimV__uiUNorm;            // Offset:  376 Size:     4
  float fVAnimPosScale;              // Offset:  380 Size:     4
  bool bInvertX;                     // Offset:  384 Size:     4
  float fVPushScale;                 // Offset:  388 Size:     4
  float fVPushWave;                  // Offset:  392 Size:     4
  float fVPushSpeed;                 // Offset:  396 Size:     4
  float3 fVpivot;                    // Offset:  400 Size:    12
  float fInnerOffsetScale;           // Offset:  412 Size:     4
  float fVolumeBlend__uiSNorm;       // Offset:  416 Size:     4 [unused]
  // align: 420 to 432
  ubyte align5[12];
  float4 fDetailEmissiveControl;     // Offset:  432 Size:    16 [unused]
  float fFinWave;                    // Offset:  448 Size:     4 [unused]
  float fFinSpeed;                   // Offset:  452 Size:     4 [unused]
  // align: 456 to 464
  ubyte align6[8];
  float3 fFinColor__uiColor;         // Offset:  464 Size:    12 [unused]
  float fDetailNormalBlend__uiUNorm; // Offset:  476 Size:     4 [unused]
  float fAnimEmitMin;                // Offset:  480 Size:     4 [unused]
  float fAnimEmitSpeed;              // Offset:  484 Size:     4 [unused]
  bool bUseWaveEmit;                 // Offset:  488 Size:     4 [unused]
  float fAnimEmitWave;               // Offset:  492 Size:     4 [unused]
  float fRimAlphaPower__uiSNorm;     // Offset:  496 Size:     4 [unused]
  float fRimTranslucency__uiUNorm;   // Offset:  500 Size:     4 [unused]
  float fRimNormal__uiUNorm;         // Offset:  504 Size:     4 [unused]
};

//cbHDAO : 9168.shdr.src
struct cbHDAO {

  float HDAORejectRadius;            // Offset:    0 Size:     4
  float HDAOAcceptRadius;            // Offset:    4 Size:     4
  float HDAOIntensity;               // Offset:    8 Size:     4
  float HDAOAcceptAngle;             // Offset:   12 Size:     4 [unused]
  float HDAONormalScale;             // Offset:   16 Size:     4
  int HDAOUseNormal;                 // Offset:   20 Size:     4
};

//CBMhMaterialScrIceBlendNoFurLocal__disclosure : 6425.shdr.src
struct CBMhMaterialScrIceBlendNoFurLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fDetailNormalBlend__uiUNorm; // Offset:   48 Size:     4 [unused]
  // align: 52 to 64
  ubyte align0[12];
  float4 fUVTransformA;              // Offset:   64 Size:    16 [unused]
  float4 fUVTransformB;              // Offset:   80 Size:    16 [unused]
  float fTranslucency__uiUNorm;      // Offset:   96 Size:     4 [unused]
  float3 fEmissiveBlendColor__uiColor;// Offset:  100 Size:    12 [unused]
  float fEmissiveBlendColorBlend__uiUNorm;// Offset:  112 Size:     4 [unused]
  float3 fEmissiveBlendRimParam;     // Offset:  116 Size:    12 [unused]
  float4 fBlendBaseMapFactor__uiColor;// Offset:  128 Size:    16 [unused]
  float3 fBlendEmissiveMapFactor__uiColor;// Offset:  144 Size:    12 [unused]
  float fBlendMetalic__uiUNorm;      // Offset:  156 Size:     4 [unused]
  float fBlendRoughness__uiUNorm;    // Offset:  160 Size:     4 [unused]
  float fBlendDetailNormalBlend__uiUNorm;// Offset:  164 Size:     4 [unused]
  float fBlendSubSurfaceBlend__uiUNorm;// Offset:  168 Size:     4 [unused]
  // align: 172 to 176
  ubyte align1[4];
  float4 fBlendUVTransformA;         // Offset:  176 Size:    16 [unused]
  float4 fBlendUVTransformB;         // Offset:  192 Size:    16 [unused]
  float3 fBlendDir__uiDirection;     // Offset:  208 Size:    12 [unused]
  float fBlendPlaneNormal__uiUNorm;  // Offset:  220 Size:     4 [unused]
  float3 fBlendOp;                   // Offset:  224 Size:    12 [unused]
  bool bUseUVSecondaryMtA;           // Offset:  236 Size:     4 [unused]
  bool bUseUVSecondaryMtB;           // Offset:  240 Size:     4 [unused]
  bool bUseUVSecondaryMtBM;          // Offset:  244 Size:     4 [unused]
  // align: 248 to 256
  ubyte align2[8];
  float3 fWetBlendDir__uiDirection;  // Offset:  256 Size:    12 [unused]
  float fWetBlendPlaneNormal__uiUNorm;// Offset:  268 Size:     4 [unused]
  float3 fWetBlendOp;                // Offset:  272 Size:    12 [unused]
  bool bSpecialBlend;                // Offset:  284 Size:     4 [unused]
  bool bWetNormalBlend;              // Offset:  288 Size:     4 [unused]
  float2 fWetNormalBlendRange__uiUNorm;// Offset:  292 Size:     8 [unused]
  float fIceVPushScale;              // Offset:  300 Size:     4
  float fIceLocalVPushScale;         // Offset:  304 Size:     4
  bool bUseNormalDisplacement;       // Offset:  308 Size:     4
  // align: 312 to 320
  ubyte align3[8];
  float3 fIceVPushDir__uiDirection;  // Offset:  320 Size:    12
  // align: 332 to 336
  ubyte align4[4];
  float3 fIceLocalVPushDir__uiDirection;// Offset:  336 Size:    12
  // align: 348 to 352
  ubyte align5[4];
  float3 fIcePushOp;                 // Offset:  352 Size:    12
  // align: 364 to 368
  ubyte align6[4];
  float4 fUVTransformC;              // Offset:  368 Size:    16
  float2 fIceDisplacementUVSize;     // Offset:  384 Size:     8
  bool bUsePositionUV;               // Offset:  392 Size:     4
  // align: 396 to 400
  ubyte align7[4];
  float3 fAlbedoBlendMapGFactor__uiColor;// Offset:  400 Size:    12 [unused]
  float fIceFresnelFactor__uiUNorm;  // Offset:  412 Size:     4 [unused]
  float fIceColorBlend__uiUNorm;     // Offset:  416 Size:     4 [unused]
  bool bUseUVSecondaryMtIce;         // Offset:  420 Size:     4 [unused]
};

//CBMhMaterialEM117Local__disclosure : 6486.shdr.src
struct CBMhMaterialEM117Local__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  bool bBaseColorEmissive;           // Offset:   52 Size:     4 [unused]
  float2 fPaintUVTile;               // Offset:   56 Size:     8 [unused]
  float fAddNormalBlend__uiUNorm;    // Offset:   64 Size:     4 [unused]
  // align: 68 to 80
  ubyte align0[12];
  float4 fAddNormalMaskA__uiSNorm;   // Offset:   80 Size:    16 [unused]
  float4 fAddNormalMaskB__uiSNorm;   // Offset:   96 Size:    16 [unused]
  float fAddNormalMaskC__uiUNorm;    // Offset:  112 Size:     4 [unused]
  float fAddNormalMaskD__uiUNorm;    // Offset:  116 Size:     4 [unused]
  bool bBackFaceShading;             // Offset:  120 Size:     4 [unused]
  bool bBackFaceNormalFilp;          // Offset:  124 Size:     4 [unused]
  float3 fKizuColor__uiColor;        // Offset:  128 Size:    12 [unused]
  // align: 140 to 144
  ubyte align1[4];
  float2 fKizuUVOffset__uiUNorm;     // Offset:  144 Size:     8 [unused]
  float fKizuMultiply;               // Offset:  152 Size:     4 [unused]
  bool bLegendary;                   // Offset:  156 Size:     4 [unused]
  float4 fLegendColor__uiColor;      // Offset:  160 Size:    16 [unused]
  float2 fLegendMetalMask__uiUNorm;  // Offset:  176 Size:     8 [unused]
  float fLegendRoughness;            // Offset:  184 Size:     4 [unused]
  // align: 188 to 192
  ubyte align2[4];
  float3 fLegendFilm__uiUNorm;       // Offset:  192 Size:    12 [unused]
  float fLegendSSSMask__uiUNorm;     // Offset:  204 Size:     4 [unused]
  float3 fLegendHSV__uiSNorm;        // Offset:  208 Size:    12 [unused]
  float fLegendFilmIOR__uiUNorm;     // Offset:  220 Size:     4 [unused]
  float fPartsMaskA__uiUNorm;        // Offset:  224 Size:     4 [unused]
  float fPartsMaskB__uiUNorm;        // Offset:  228 Size:     4 [unused]
  float fPartsMaskC__uiUNorm;        // Offset:  232 Size:     4 [unused]
  float fPartsMaskD__uiUNorm;        // Offset:  236 Size:     4 [unused]
  float fPartsMaskX__uiUNorm;        // Offset:  240 Size:     4 [unused]
  float fPartsMaskY__uiUNorm;        // Offset:  244 Size:     4 [unused]
  float fPartsMaskZ__uiUNorm;        // Offset:  248 Size:     4 [unused]
  float fPartsMaskW__uiUNorm;        // Offset:  252 Size:     4 [unused]
  bool bUseOffset;                   // Offset:  256 Size:     4
  float fOffsetScale;                // Offset:  260 Size:     4
  bool bTranslucentOffset;           // Offset:  264 Size:     4
  bool bAntiSSSEmit;                 // Offset:  268 Size:     4 [unused]
  float3 fFlowDirDir__uiDirection;   // Offset:  272 Size:    12 [unused]
  // align: 284 to 288
  ubyte align3[4];
  float4 fFlowControl__uiUNorm;      // Offset:  288 Size:    16 [unused]
  float fFlowTile;                   // Offset:  304 Size:     4 [unused]
  // align: 308 to 320
  ubyte align4[12];
  float4 fFlowColor__uiColor;        // Offset:  320 Size:    16 [unused]
  float4 fFlowMatControl__uiUNorm;   // Offset:  336 Size:    16 [unused]
  float fFilmThickness__uiUNorm;     // Offset:  352 Size:     4 [unused]
  float fFilmBlend__uiUNorm;         // Offset:  356 Size:     4 [unused]
  float fFilmIOR__uiUNorm;           // Offset:  360 Size:     4 [unused]
  float fRefraction__uiUNorm;        // Offset:  364 Size:     4 [unused]
  float fRefractionBlend__uiUNorm;   // Offset:  368 Size:     4 [unused]
  // align: 372 to 384
  ubyte align5[12];
  float4 fDetailBlend__uiUNorm;      // Offset:  384 Size:    16 [unused]
  float4 fDetailTile;                // Offset:  400 Size:    16 [unused]
  float4 fDetailA_Color__uiColor;    // Offset:  416 Size:    16 [unused]
  float4 fDetailB_Color__uiColor;    // Offset:  432 Size:    16 [unused]
  float4 fDetailC_Color__uiColor;    // Offset:  448 Size:    16 [unused]
  float4 fDetailD_Color__uiColor;    // Offset:  464 Size:    16 [unused]
  float4 fDetail_Roughness__uiUNorm; // Offset:  480 Size:    16 [unused]
  float4 fDetail_Metal__uiUNorm;     // Offset:  496 Size:    16 [unused]
  bool bAntiEmitSSS;                 // Offset:  512 Size:     4 [unused]
  float fAnimEmitMin;                // Offset:  516 Size:     4 [unused]
  float fAnimEmitSpeed;              // Offset:  520 Size:     4 [unused]
  bool bUseWaveEmit;                 // Offset:  524 Size:     4 [unused]
  float fAnimEmitWave;               // Offset:  528 Size:     4 [unused]
  float fRimAlphaPower__uiSNorm;     // Offset:  532 Size:     4 [unused]
  float fRimTranslucency__uiUNorm;   // Offset:  536 Size:     4 [unused]
  float fRimNormal__uiUNorm;         // Offset:  540 Size:     4 [unused]
  float fSnowUVTile;                 // Offset:  544 Size:     4 [unused]
  // align: 548 to 560
  ubyte align6[12];
  float4 fSnowBlendColor__uiColor;   // Offset:  560 Size:    16
  float4 fSnowMatControl__uiUNorm;   // Offset:  576 Size:    16 [unused]
  float fMaterialSnowBlendB;         // Offset:  592 Size:     4
  // align: 596 to 608
  ubyte align7[12];
  float4 fSnowControl;               // Offset:  608 Size:    16
};

//CBMhMaterialSKM001Local__disclosure : 6676.shdr.src
struct CBMhMaterialSKM001Local__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  bool bBaseColorEmissive;           // Offset:   52 Size:     4 [unused]
  float2 fPaintUVTile;               // Offset:   56 Size:     8 [unused]
  float fAddNormalBlend__uiUNorm;    // Offset:   64 Size:     4 [unused]
  // align: 68 to 80
  ubyte align0[12];
  float4 fAddNormalMaskA__uiSNorm;   // Offset:   80 Size:    16 [unused]
  float4 fAddNormalMaskB__uiSNorm;   // Offset:   96 Size:    16 [unused]
  float fAddNormalMaskC__uiUNorm;    // Offset:  112 Size:     4 [unused]
  float fAddNormalMaskD__uiUNorm;    // Offset:  116 Size:     4 [unused]
  bool bBackFaceShading;             // Offset:  120 Size:     4 [unused]
  bool bBackFaceNormalFilp;          // Offset:  124 Size:     4 [unused]
  float3 fKizuColor__uiColor;        // Offset:  128 Size:    12 [unused]
  // align: 140 to 144
  ubyte align1[4];
  float2 fKizuUVOffset__uiUNorm;     // Offset:  144 Size:     8 [unused]
  float fKizuMultiply;               // Offset:  152 Size:     4 [unused]
  bool bLegendary;                   // Offset:  156 Size:     4 [unused]
  float4 fLegendColor__uiColor;      // Offset:  160 Size:    16 [unused]
  float2 fLegendMetalMask__uiUNorm;  // Offset:  176 Size:     8 [unused]
  float fLegendRoughness;            // Offset:  184 Size:     4 [unused]
  // align: 188 to 192
  ubyte align2[4];
  float3 fLegendFilm__uiUNorm;       // Offset:  192 Size:    12 [unused]
  float fLegendSSSMask__uiUNorm;     // Offset:  204 Size:     4 [unused]
  float3 fLegendHSV__uiSNorm;        // Offset:  208 Size:    12 [unused]
  float fLegendFilmIOR__uiUNorm;     // Offset:  220 Size:     4 [unused]
  float fPartsMaskA__uiUNorm;        // Offset:  224 Size:     4 [unused]
  float fPartsMaskB__uiUNorm;        // Offset:  228 Size:     4 [unused]
  float fPartsMaskC__uiUNorm;        // Offset:  232 Size:     4 [unused]
  float fPartsMaskD__uiUNorm;        // Offset:  236 Size:     4 [unused]
  float fPartsMaskX__uiUNorm;        // Offset:  240 Size:     4 [unused]
  float fPartsMaskY__uiUNorm;        // Offset:  244 Size:     4 [unused]
  float fPartsMaskZ__uiUNorm;        // Offset:  248 Size:     4 [unused]
  float fPartsMaskW__uiUNorm;        // Offset:  252 Size:     4 [unused]
  bool bUseOffset;                   // Offset:  256 Size:     4
  float fOffsetScale;                // Offset:  260 Size:     4
  bool bTranslucentOffset;           // Offset:  264 Size:     4
  bool bAntiSSSEmit;                 // Offset:  268 Size:     4 [unused]
  float3 fFlowDirDir__uiDirection;   // Offset:  272 Size:    12 [unused]
  // align: 284 to 288
  ubyte align3[4];
  float4 fFlowControl__uiUNorm;      // Offset:  288 Size:    16 [unused]
  float fFlowTile;                   // Offset:  304 Size:     4 [unused]
  // align: 308 to 320
  ubyte align4[12];
  float4 fFlowColor__uiColor;        // Offset:  320 Size:    16 [unused]
  float4 fFlowMatControl__uiUNorm;   // Offset:  336 Size:    16 [unused]
  float4 fMaskBlend__uiUNorm;        // Offset:  352 Size:    16 [unused]
  float2 fMaskBlend_A__uiUNorm;      // Offset:  368 Size:     8 [unused]
  float2 fMaskBlend_B__uiUNorm;      // Offset:  376 Size:     8 [unused]
  float4 fDisplaceControl;           // Offset:  384 Size:    16
  float fDispSpeed;                  // Offset:  400 Size:     4
  float fFilmThickness__uiUNorm;     // Offset:  404 Size:     4 [unused]
  float fFilmBlend__uiUNorm;         // Offset:  408 Size:     4 [unused]
  float fFilmIOR__uiUNorm;           // Offset:  412 Size:     4 [unused]
  float fFilmThicknessB__uiUNorm;    // Offset:  416 Size:     4 [unused]
  float fFilmBlendB__uiUNorm;        // Offset:  420 Size:     4 [unused]
  float fFilmIORB__uiUNorm;          // Offset:  424 Size:     4 [unused]
  float fRefraction__uiUNorm;        // Offset:  428 Size:     4 [unused]
  float fRefractionBlend__uiUNorm;   // Offset:  432 Size:     4 [unused]
  float fAnimEmitMin;                // Offset:  436 Size:     4 [unused]
  float fAnimEmitSpeed;              // Offset:  440 Size:     4 [unused]
  bool bUseWaveEmit;                 // Offset:  444 Size:     4 [unused]
  float fAnimEmitWave;               // Offset:  448 Size:     4 [unused]
  float fRimAlphaPower__uiSNorm;     // Offset:  452 Size:     4 [unused]
  float fRimTranslucency__uiUNorm;   // Offset:  456 Size:     4 [unused]
  float fRimNormal__uiUNorm;         // Offset:  460 Size:     4 [unused]
  float fSnowUVTile;                 // Offset:  464 Size:     4 [unused]
  // align: 468 to 480
  ubyte align5[12];
  float4 fSnowBlendColor__uiColor;   // Offset:  480 Size:    16
  float4 fSnowMatControl__uiUNorm;   // Offset:  496 Size:    16 [unused]
  float fMaterialSnowBlendB;         // Offset:  512 Size:     4
  // align: 516 to 528
  ubyte align6[12];
  float4 fSnowControl;               // Offset:  528 Size:    16
};

//CBMhMaterialEM036Local__disclosure : 6752.shdr.src
struct CBMhMaterialEM036Local__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  bool bBaseColorEmissive;           // Offset:   52 Size:     4 [unused]
  float2 fPaintUVTile;               // Offset:   56 Size:     8 [unused]
  float fAddNormalBlend__uiUNorm;    // Offset:   64 Size:     4 [unused]
  // align: 68 to 80
  ubyte align0[12];
  float4 fAddNormalMaskA__uiSNorm;   // Offset:   80 Size:    16 [unused]
  float4 fAddNormalMaskB__uiSNorm;   // Offset:   96 Size:    16 [unused]
  float fAddNormalMaskC__uiUNorm;    // Offset:  112 Size:     4 [unused]
  float fAddNormalMaskD__uiUNorm;    // Offset:  116 Size:     4 [unused]
  bool bBackFaceShading;             // Offset:  120 Size:     4 [unused]
  bool bBackFaceNormalFilp;          // Offset:  124 Size:     4 [unused]
  float3 fKizuColor__uiColor;        // Offset:  128 Size:    12 [unused]
  // align: 140 to 144
  ubyte align1[4];
  float2 fKizuUVOffset__uiUNorm;     // Offset:  144 Size:     8 [unused]
  float fKizuMultiply;               // Offset:  152 Size:     4 [unused]
  bool bLegendary;                   // Offset:  156 Size:     4 [unused]
  float4 fLegendColor__uiColor;      // Offset:  160 Size:    16 [unused]
  float2 fLegendMetalMask__uiUNorm;  // Offset:  176 Size:     8 [unused]
  float fLegendRoughness;            // Offset:  184 Size:     4 [unused]
  // align: 188 to 192
  ubyte align2[4];
  float3 fLegendFilm__uiUNorm;       // Offset:  192 Size:    12 [unused]
  float fLegendSSSMask__uiUNorm;     // Offset:  204 Size:     4 [unused]
  float3 fLegendHSV__uiSNorm;        // Offset:  208 Size:    12 [unused]
  float fLegendFilmIOR__uiUNorm;     // Offset:  220 Size:     4 [unused]
  float fPartsMaskA__uiUNorm;        // Offset:  224 Size:     4 [unused]
  float fPartsMaskB__uiUNorm;        // Offset:  228 Size:     4 [unused]
  float fPartsMaskC__uiUNorm;        // Offset:  232 Size:     4 [unused]
  float fPartsMaskD__uiUNorm;        // Offset:  236 Size:     4 [unused]
  float fPartsMaskX__uiUNorm;        // Offset:  240 Size:     4 [unused]
  float fPartsMaskY__uiUNorm;        // Offset:  244 Size:     4 [unused]
  float fPartsMaskZ__uiUNorm;        // Offset:  248 Size:     4 [unused]
  float fPartsMaskW__uiUNorm;        // Offset:  252 Size:     4 [unused]
  bool bUseOffset;                   // Offset:  256 Size:     4
  float fOffsetScale;                // Offset:  260 Size:     4
  bool bTranslucentOffset;           // Offset:  264 Size:     4
  bool bAntiSSSEmit;                 // Offset:  268 Size:     4 [unused]
  float3 fFlowDirDir__uiDirection;   // Offset:  272 Size:    12 [unused]
  // align: 284 to 288
  ubyte align3[4];
  float4 fFlowControl__uiUNorm;      // Offset:  288 Size:    16 [unused]
  float fFlowTile;                   // Offset:  304 Size:     4 [unused]
  // align: 308 to 320
  ubyte align4[12];
  float4 fFlowColor__uiColor;        // Offset:  320 Size:    16 [unused]
  float4 fFlowMatControl__uiUNorm;   // Offset:  336 Size:    16 [unused]
  float fFilmThickness__uiUNorm;     // Offset:  352 Size:     4 [unused]
  float fFilmBlend__uiUNorm;         // Offset:  356 Size:     4 [unused]
  float fFilmIOR__uiUNorm;           // Offset:  360 Size:     4 [unused]
  float fRefraction__uiUNorm;        // Offset:  364 Size:     4 [unused]
  float fRefractionBlend__uiUNorm;   // Offset:  368 Size:     4 [unused]
  // align: 372 to 384
  ubyte align5[12];
  float4 fEmitControl__uiUNorm;      // Offset:  384 Size:    16 [unused]
  float fAnimEmitMin;                // Offset:  400 Size:     4 [unused]
  float fAnimEmitSpeed;              // Offset:  404 Size:     4 [unused]
  bool bUseWaveEmit;                 // Offset:  408 Size:     4 [unused]
  float fAnimEmitWave;               // Offset:  412 Size:     4 [unused]
  float fRimAlphaPower__uiSNorm;     // Offset:  416 Size:     4 [unused]
  float fRimTranslucency__uiUNorm;   // Offset:  420 Size:     4 [unused]
  float fRimNormal__uiUNorm;         // Offset:  424 Size:     4 [unused]
  float fSnowUVTile;                 // Offset:  428 Size:     4 [unused]
  float4 fSnowBlendColor__uiColor;   // Offset:  432 Size:    16
  float4 fSnowMatControl__uiUNorm;   // Offset:  448 Size:    16 [unused]
  float fMaterialSnowBlendB;         // Offset:  464 Size:     4
  // align: 468 to 480
  ubyte align6[12];
  float4 fSnowControl;               // Offset:  480 Size:    16
};

//CBConstant : 6769.shdr.src
struct CBConstant {

  uint iUserConstant;                // Offset:    0 Size:     4
};

//CBMhMaterialTMG001Local__disclosure : 6836.shdr.src
struct CBMhMaterialTMG001Local__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  bool bBaseColorEmissive;           // Offset:   52 Size:     4 [unused]
  float2 fPaintUVTile;               // Offset:   56 Size:     8 [unused]
  float fAddNormalBlend__uiUNorm;    // Offset:   64 Size:     4 [unused]
  // align: 68 to 80
  ubyte align0[12];
  float4 fAddNormalMaskA__uiSNorm;   // Offset:   80 Size:    16 [unused]
  float4 fAddNormalMaskB__uiSNorm;   // Offset:   96 Size:    16 [unused]
  float fAddNormalMaskC__uiUNorm;    // Offset:  112 Size:     4 [unused]
  float fAddNormalMaskD__uiUNorm;    // Offset:  116 Size:     4 [unused]
  bool bBackFaceShading;             // Offset:  120 Size:     4 [unused]
  bool bBackFaceNormalFilp;          // Offset:  124 Size:     4 [unused]
  float3 fKizuColor__uiColor;        // Offset:  128 Size:    12 [unused]
  // align: 140 to 144
  ubyte align1[4];
  float2 fKizuUVOffset__uiUNorm;     // Offset:  144 Size:     8 [unused]
  float fKizuMultiply;               // Offset:  152 Size:     4 [unused]
  bool bLegendary;                   // Offset:  156 Size:     4 [unused]
  float4 fLegendColor__uiColor;      // Offset:  160 Size:    16 [unused]
  float2 fLegendMetalMask__uiUNorm;  // Offset:  176 Size:     8 [unused]
  float fLegendRoughness;            // Offset:  184 Size:     4 [unused]
  // align: 188 to 192
  ubyte align2[4];
  float3 fLegendFilm__uiUNorm;       // Offset:  192 Size:    12 [unused]
  float fLegendSSSMask__uiUNorm;     // Offset:  204 Size:     4 [unused]
  float3 fLegendHSV__uiSNorm;        // Offset:  208 Size:    12 [unused]
  float fLegendFilmIOR__uiUNorm;     // Offset:  220 Size:     4 [unused]
  float fPartsMaskA__uiUNorm;        // Offset:  224 Size:     4 [unused]
  float fPartsMaskB__uiUNorm;        // Offset:  228 Size:     4 [unused]
  float fPartsMaskC__uiUNorm;        // Offset:  232 Size:     4 [unused]
  float fPartsMaskD__uiUNorm;        // Offset:  236 Size:     4 [unused]
  float fPartsMaskX__uiUNorm;        // Offset:  240 Size:     4 [unused]
  float fPartsMaskY__uiUNorm;        // Offset:  244 Size:     4 [unused]
  float fPartsMaskZ__uiUNorm;        // Offset:  248 Size:     4 [unused]
  float fPartsMaskW__uiUNorm;        // Offset:  252 Size:     4 [unused]
  bool bUseOffset;                   // Offset:  256 Size:     4
  float fOffsetScale;                // Offset:  260 Size:     4
  bool bTranslucentOffset;           // Offset:  264 Size:     4
  bool bAntiSSSEmit;                 // Offset:  268 Size:     4 [unused]
  float3 fFlowDirDir__uiDirection;   // Offset:  272 Size:    12 [unused]
  // align: 284 to 288
  ubyte align3[4];
  float4 fFlowControl__uiUNorm;      // Offset:  288 Size:    16 [unused]
  float fFlowTile;                   // Offset:  304 Size:     4 [unused]
  // align: 308 to 320
  ubyte align4[12];
  float4 fFlowColor__uiColor;        // Offset:  320 Size:    16 [unused]
  float4 fFlowMatControl__uiUNorm;   // Offset:  336 Size:    16 [unused]
  float4 fMaskBlend__uiUNorm;        // Offset:  352 Size:    16 [unused]
  float2 fMaskBlend_A__uiUNorm;      // Offset:  368 Size:     8 [unused]
  float2 fMaskBlend_B__uiUNorm;      // Offset:  376 Size:     8 [unused]
  float fFilmThickness__uiUNorm;     // Offset:  384 Size:     4 [unused]
  float fFilmBlend__uiUNorm;         // Offset:  388 Size:     4 [unused]
  float fFilmIOR__uiUNorm;           // Offset:  392 Size:     4 [unused]
  float fRefraction__uiUNorm;        // Offset:  396 Size:     4 [unused]
  float fRefractionBlend__uiUNorm;   // Offset:  400 Size:     4 [unused]
  // align: 404 to 416
  ubyte align5[12];
  float4 fDetailBlend__uiUNorm;      // Offset:  416 Size:    16 [unused]
  float4 fDetailTile;                // Offset:  432 Size:    16 [unused]
  float4 fDetailA_Color__uiColor;    // Offset:  448 Size:    16 [unused]
  float4 fDetailB_Color__uiColor;    // Offset:  464 Size:    16 [unused]
  float4 fDetailC_Color__uiColor;    // Offset:  480 Size:    16 [unused]
  float4 fDetailD_Color__uiColor;    // Offset:  496 Size:    16 [unused]
  float4 fDetail_Roughness__uiUNorm; // Offset:  512 Size:    16 [unused]
  float4 fDetail_Metal__uiUNorm;     // Offset:  528 Size:    16 [unused]
  bool bAntiEmitSSS;                 // Offset:  544 Size:     4 [unused]
  float fAnimEmitMin;                // Offset:  548 Size:     4 [unused]
  float fAnimEmitSpeed;              // Offset:  552 Size:     4 [unused]
  bool bUseWaveEmit;                 // Offset:  556 Size:     4 [unused]
  float fAnimEmitWave;               // Offset:  560 Size:     4 [unused]
  float fRimAlphaPower__uiSNorm;     // Offset:  564 Size:     4 [unused]
  float fRimTranslucency__uiUNorm;   // Offset:  568 Size:     4 [unused]
  float fRimNormal__uiUNorm;         // Offset:  572 Size:     4 [unused]
  float fSnowUVTile;                 // Offset:  576 Size:     4 [unused]
  // align: 580 to 592
  ubyte align6[12];
  float4 fSnowBlendColor__uiColor;   // Offset:  592 Size:    16
  float4 fSnowMatControl__uiUNorm;   // Offset:  608 Size:    16 [unused]
  float fMaterialSnowBlendB;         // Offset:  624 Size:     4
  // align: 628 to 640
  ubyte align7[12];
  float4 fSnowControl;               // Offset:  640 Size:    16
};

//CBMhMaterialNikuLocal__disclosure : 6889.shdr.src
struct CBMhMaterialNikuLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  // align: 52 to 64
  ubyte align0[12];
  float4 fUVTransformA;              // Offset:   64 Size:    16
  float4 fNikuMode__uiUNorm;         // Offset:   80 Size:    16
};

//CBMhMaterialVfxFakeInnerLocal__disclosure : 766.shdr.src
struct CBMhMaterialVfxFakeInnerLocal__disclosure {

  float3 fEmissiveMapFactor__uiColor;// Offset:    0 Size:    12 [unused]
  // align: 12 to 16
  ubyte align0[4];
  float4 fUVTransformA;              // Offset:   16 Size:    16 [unused]
  float fInnerOffsetScale;           // Offset:   32 Size:     4
  float fRimAlphaPower__uiUNorm;     // Offset:   36 Size:     4 [unused]
  float fVolumeBlend__uiSNorm;       // Offset:   40 Size:     4 [unused]
  // align: 44 to 48
  ubyte align1[4];
  float2 fUVanimVector;              // Offset:   48 Size:     8 [unused]
  float fOpacityFactor;              // Offset:   56 Size:     4 [unused]
  bool bGBufferIdMaskEnable;         // Offset:   60 Size:     4 [unused]
  uint iGBufferIdMask;               // Offset:   64 Size:     4 [unused]
  float fNormalDecalBlend__uiUNorm;  // Offset:   68 Size:     4 [unused]
};

//CBMhMaterialEM102Local__disclosure : 6964.shdr.src
struct CBMhMaterialEM102Local__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  bool bBaseColorEmissive;           // Offset:   52 Size:     4 [unused]
  float2 fPaintUVTile;               // Offset:   56 Size:     8 [unused]
  float fAddNormalBlend__uiUNorm;    // Offset:   64 Size:     4 [unused]
  // align: 68 to 80
  ubyte align0[12];
  float4 fAddNormalMaskA__uiSNorm;   // Offset:   80 Size:    16 [unused]
  float4 fAddNormalMaskB__uiSNorm;   // Offset:   96 Size:    16 [unused]
  float fAddNormalMaskC__uiUNorm;    // Offset:  112 Size:     4 [unused]
  float fAddNormalMaskD__uiUNorm;    // Offset:  116 Size:     4 [unused]
  bool bBackFaceShading;             // Offset:  120 Size:     4 [unused]
  bool bBackFaceNormalFilp;          // Offset:  124 Size:     4 [unused]
  float3 fKizuColor__uiColor;        // Offset:  128 Size:    12 [unused]
  // align: 140 to 144
  ubyte align1[4];
  float2 fKizuUVOffset__uiUNorm;     // Offset:  144 Size:     8 [unused]
  float fKizuMultiply;               // Offset:  152 Size:     4 [unused]
  bool bLegendary;                   // Offset:  156 Size:     4 [unused]
  float4 fLegendColor__uiColor;      // Offset:  160 Size:    16 [unused]
  float2 fLegendMetalMask__uiUNorm;  // Offset:  176 Size:     8 [unused]
  float fLegendRoughness;            // Offset:  184 Size:     4 [unused]
  // align: 188 to 192
  ubyte align2[4];
  float3 fLegendFilm__uiUNorm;       // Offset:  192 Size:    12 [unused]
  float fLegendSSSMask__uiUNorm;     // Offset:  204 Size:     4 [unused]
  float3 fLegendHSV__uiSNorm;        // Offset:  208 Size:    12 [unused]
  float fLegendFilmIOR__uiUNorm;     // Offset:  220 Size:     4 [unused]
  float fPartsMaskA__uiUNorm;        // Offset:  224 Size:     4 [unused]
  float fPartsMaskB__uiUNorm;        // Offset:  228 Size:     4 [unused]
  float fPartsMaskC__uiUNorm;        // Offset:  232 Size:     4 [unused]
  float fPartsMaskD__uiUNorm;        // Offset:  236 Size:     4 [unused]
  float fPartsMaskX__uiUNorm;        // Offset:  240 Size:     4 [unused]
  float fPartsMaskY__uiUNorm;        // Offset:  244 Size:     4 [unused]
  float fPartsMaskZ__uiUNorm;        // Offset:  248 Size:     4 [unused]
  float fPartsMaskW__uiUNorm;        // Offset:  252 Size:     4 [unused]
  bool bUseOffset;                   // Offset:  256 Size:     4
  float fOffsetScale;                // Offset:  260 Size:     4
  bool bTranslucentOffset;           // Offset:  264 Size:     4
  bool bAntiSSSEmit;                 // Offset:  268 Size:     4 [unused]
  float3 fFlowDirDir__uiDirection;   // Offset:  272 Size:    12 [unused]
  // align: 284 to 288
  ubyte align3[4];
  float4 fFlowControl__uiUNorm;      // Offset:  288 Size:    16 [unused]
  float fFlowTile;                   // Offset:  304 Size:     4 [unused]
  // align: 308 to 320
  ubyte align4[12];
  float4 fFlowColor__uiColor;        // Offset:  320 Size:    16 [unused]
  float4 fFlowMatControl__uiUNorm;   // Offset:  336 Size:    16 [unused]
  float4 fMaskBlend__uiUNorm;        // Offset:  352 Size:    16 [unused]
  float2 fMaskBlend_A__uiUNorm;      // Offset:  368 Size:     8 [unused]
  float2 fMaskBlend_B__uiUNorm;      // Offset:  376 Size:     8 [unused]
  float fFilmThickness__uiUNorm;     // Offset:  384 Size:     4 [unused]
  float fFilmBlend__uiUNorm;         // Offset:  388 Size:     4 [unused]
  float fFilmIOR__uiUNorm;           // Offset:  392 Size:     4 [unused]
  float fRefraction__uiUNorm;        // Offset:  396 Size:     4 [unused]
  float fRefractionBlend__uiUNorm;   // Offset:  400 Size:     4 [unused]
  float fAnimEmitMin;                // Offset:  404 Size:     4 [unused]
  float fAnimEmitSpeed;              // Offset:  408 Size:     4 [unused]
  bool bUseWaveEmit;                 // Offset:  412 Size:     4 [unused]
  float fAnimEmitWave;               // Offset:  416 Size:     4 [unused]
  // align: 420 to 432
  ubyte align5[12];
  float4 fFurParam__uiUNorm;         // Offset:  432 Size:    16 [unused]
  float fFurTile;                    // Offset:  448 Size:     4 [unused]
  float fAlbedoBlend__uiSNorm;       // Offset:  452 Size:     4 [unused]
  bool bAlbedoOverUVsecondary;       // Offset:  456 Size:     4 [unused]
  float fRimAlphaPower__uiSNorm;     // Offset:  460 Size:     4 [unused]
  float fRimTranslucency__uiUNorm;   // Offset:  464 Size:     4 [unused]
  float fRimNormal__uiUNorm;         // Offset:  468 Size:     4 [unused]
  float fSnowUVTile;                 // Offset:  472 Size:     4 [unused]
  // align: 476 to 480
  ubyte align6[4];
  float4 fSnowBlendColor__uiColor;   // Offset:  480 Size:    16
  float4 fSnowMatControl__uiUNorm;   // Offset:  496 Size:    16 [unused]
  float fMaterialSnowBlendB;         // Offset:  512 Size:     4
  // align: 516 to 528
  ubyte align7[12];
  float4 fSnowControl;               // Offset:  528 Size:    16
};

//CBMhMaterialPLLocal__disclosure : 7169.shdr.src
struct CBMhMaterialPLLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  bool bBaseColorEmissive;           // Offset:   52 Size:     4 [unused]
  bool bBackFaceNormalFilp;          // Offset:   56 Size:     4 [unused]
  float fAnimEmitMin;                // Offset:   60 Size:     4 [unused]
  float fAnimEmitSpeed;              // Offset:   64 Size:     4 [unused]
  bool bUseCMM;                      // Offset:   68 Size:     4 [unused]
  // align: 72 to 80
  ubyte align0[8];
  float4 fAddColorA__uiColor;        // Offset:   80 Size:    16 [unused]
  float4 fAddColorB__uiColor;        // Offset:   96 Size:    16 [unused]
  float4 fAddColorC__uiColor;        // Offset:  112 Size:    16 [unused]
  float4 fAddColorD__uiColor;        // Offset:  128 Size:    16 [unused]
  float4 fFurParam__uiUNorm;         // Offset:  144 Size:    16 [unused]
  float fFurTile;                    // Offset:  160 Size:     4 [unused]
  // align: 164 to 176
  ubyte align1[12];
  float4 fSnowControl;               // Offset:  176 Size:    16
  float fMaterialSnowBlendA;         // Offset:  192 Size:     4
  float fMaterialSnowBlendB;         // Offset:  196 Size:     4
  float fSnowTile;                   // Offset:  200 Size:     4 [unused]
  // align: 204 to 208
  ubyte align2[4];
  float3 fSnowColor__uiColor;        // Offset:  208 Size:    12 [unused]
  // align: 220 to 224
  ubyte align3[4];
  float4 fSnowMatControl__uiUNorm;   // Offset:  224 Size:    16 [unused]
  float2 fSnowUVOffset__uiUNorm;     // Offset:  240 Size:     8 [unused]
  float fAnimEmitWave;               // Offset:  248 Size:     4 [unused]
  bool bUseWaveEmit;                 // Offset:  252 Size:     4 [unused]
  float fFilmThickness__uiUNorm;     // Offset:  256 Size:     4 [unused]
  float fFilmBlend__uiUNorm;         // Offset:  260 Size:     4 [unused]
  float fFilmIOR__uiUNorm;           // Offset:  264 Size:     4 [unused]
  float fRefractBlend__uiUNorm;      // Offset:  268 Size:     4 [unused]
  float fRefraction__uiSNorm;        // Offset:  272 Size:     4 [unused]
  float fPanoramaTile;               // Offset:  276 Size:     4 [unused]
  // align: 280 to 288
  ubyte align4[8];
  float3 fEmissiveBlendColor__uiColor;// Offset:  288 Size:    12 [unused]
  float fEmissiveBlendColorBlend__uiUNorm;// Offset:  300 Size:     4 [unused]
  float3 fEmissiveBlendRimParam;     // Offset:  304 Size:    12 [unused]
  float fDetailNormalBlend__uiUNorm; // Offset:  316 Size:     4 [unused]
  float4 fUVTransformDetailNormal;   // Offset:  320 Size:    16 [unused]
};

//CBMhSkyPS : 7419.shdr.src
struct CBMhSkyPS {

  uint fSkyMode;                     // Offset:    0 Size:     4 [unused]
  float3 fEmissiveMapFactor;         // Offset:    4 Size:    12 [unused]
  float4 fSkySunMapFactor;           // Offset:   16 Size:    16 [unused]
  float4 fSkyStarrySkyMapFactor;     // Offset:   32 Size:    16 [unused]
  float3 fSkyFlowDir;                // Offset:   48 Size:    12 [unused]
  float fSkyUVPhaseShiftH;           // Offset:   60 Size:     4 [unused]
  float fSkyUVPhaseShiftV;           // Offset:   64 Size:     4 [unused]
  float fSkyBlend;                   // Offset:   68 Size:     4 [unused]
  float2 fSkySunUVTransform;         // Offset:   72 Size:     8 [unused]
  float fSkyFlowSpeed;               // Offset:   80 Size:     4 [unused]
  float fSkyFlowTime;                // Offset:   84 Size:     4 [unused]
  // align: 88 to 96
  ubyte align0[8];
  float3 fSkyWaterReflectionFactor;  // Offset:   96 Size:    12 [unused]
  bool bSkyIsRenderingWater;         // Offset:  108 Size:     4 [unused]
  uint2 iSkyAddress;                 // Offset:  112 Size:     8
};

//CBMhMaterialScrIceBlendLocal__disclosure : 7290.shdr.src
struct CBMhMaterialScrIceBlendLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fDetailNormalBlend__uiUNorm; // Offset:   48 Size:     4 [unused]
  // align: 52 to 64
  ubyte align0[12];
  float4 fUVTransformA;              // Offset:   64 Size:    16 [unused]
  float4 fUVTransformB;              // Offset:   80 Size:    16 [unused]
  float fTranslucency__uiUNorm;      // Offset:   96 Size:     4 [unused]
  float3 fEmissiveBlendColor__uiColor;// Offset:  100 Size:    12 [unused]
  float fEmissiveBlendColorBlend__uiUNorm;// Offset:  112 Size:     4 [unused]
  float3 fEmissiveBlendRimParam;     // Offset:  116 Size:    12 [unused]
  float4 fBlendBaseMapFactor__uiColor;// Offset:  128 Size:    16 [unused]
  float3 fBlendEmissiveMapFactor__uiColor;// Offset:  144 Size:    12 [unused]
  float fBlendMetalic__uiUNorm;      // Offset:  156 Size:     4 [unused]
  float fBlendRoughness__uiUNorm;    // Offset:  160 Size:     4 [unused]
  float fBlendDetailNormalBlend__uiUNorm;// Offset:  164 Size:     4 [unused]
  float fBlendSubSurfaceBlend__uiUNorm;// Offset:  168 Size:     4 [unused]
  // align: 172 to 176
  ubyte align1[4];
  float4 fBlendUVTransformA;         // Offset:  176 Size:    16 [unused]
  float4 fBlendUVTransformB;         // Offset:  192 Size:    16 [unused]
  float3 fBlendDir__uiDirection;     // Offset:  208 Size:    12 [unused]
  float fBlendPlaneNormal__uiUNorm;  // Offset:  220 Size:     4 [unused]
  float3 fBlendOp;                   // Offset:  224 Size:    12 [unused]
  bool bUseUVSecondaryMtA;           // Offset:  236 Size:     4 [unused]
  bool bUseUVSecondaryMtB;           // Offset:  240 Size:     4 [unused]
  bool bUseUVSecondaryMtBM;          // Offset:  244 Size:     4 [unused]
  float fFurNormalBlend__uiUNorm;    // Offset:  248 Size:     4 [unused]
  float fFurHeight__uiUNorm;         // Offset:  252 Size:     4 [unused]
  float fFurMapBlend__uiUNorm;       // Offset:  256 Size:     4 [unused]
  float fFurEdgeBlend__uiUNorm;      // Offset:  260 Size:     4 [unused]
  float fFurTile;                    // Offset:  264 Size:     4 [unused]
  // align: 268 to 272
  ubyte align2[4];
  float3 fWetBlendDir__uiDirection;  // Offset:  272 Size:    12 [unused]
  float fWetBlendPlaneNormal__uiUNorm;// Offset:  284 Size:     4 [unused]
  float3 fWetBlendOp;                // Offset:  288 Size:    12 [unused]
  bool bSpecialBlend;                // Offset:  300 Size:     4 [unused]
  bool bWetNormalBlend;              // Offset:  304 Size:     4 [unused]
  float2 fWetNormalBlendRange__uiUNorm;// Offset:  308 Size:     8 [unused]
  float fIceVPushScale;              // Offset:  316 Size:     4
  float fIceLocalVPushScale;         // Offset:  320 Size:     4
  bool bUseNormalDisplacement;       // Offset:  324 Size:     4
  // align: 328 to 336
  ubyte align3[8];
  float3 fIceVPushDir__uiDirection;  // Offset:  336 Size:    12
  // align: 348 to 352
  ubyte align4[4];
  float3 fIceLocalVPushDir__uiDirection;// Offset:  352 Size:    12
  // align: 364 to 368
  ubyte align5[4];
  float3 fIcePushOp;                 // Offset:  368 Size:    12
  // align: 380 to 384
  ubyte align6[4];
  float4 fUVTransformC;              // Offset:  384 Size:    16
  float2 fIceDisplacementUVSize;     // Offset:  400 Size:     8
  bool bUsePositionUV;               // Offset:  408 Size:     4
  // align: 412 to 416
  ubyte align7[4];
  float3 fAlbedoBlendMapGFactor__uiColor;// Offset:  416 Size:    12 [unused]
  float fIceFresnelFactor__uiUNorm;  // Offset:  428 Size:     4 [unused]
  float fIceColorBlend__uiUNorm;     // Offset:  432 Size:     4 [unused]
  bool bUseUVSecondaryMtIce;         // Offset:  436 Size:     4 [unused]
};

//CBMhSky2SimpleGBuffer : 7292.shdr.src
struct CBMhSky2SimpleGBuffer {

  uint iSkyGBufferId;                // Offset:    0 Size:     4
};

//CBMhMaterialIridescentBlendLocal__disclosure : 7417.shdr.src
struct CBMhMaterialIridescentBlendLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fDetailNormalBlend__uiUNorm; // Offset:   48 Size:     4 [unused]
  // align: 52 to 64
  ubyte align0[12];
  float4 fUVTransformA;              // Offset:   64 Size:    16
  float4 fUVTransformB;              // Offset:   80 Size:    16 [unused]
  float fTranslucency__uiUNorm;      // Offset:   96 Size:     4 [unused]
  float3 fEmissiveBlendColor__uiColor;// Offset:  100 Size:    12 [unused]
  float fEmissiveBlendColorBlend__uiUNorm;// Offset:  112 Size:     4 [unused]
  float3 fEmissiveBlendRimParam;     // Offset:  116 Size:    12 [unused]
  float4 fBlendBaseMapFactor__uiColor;// Offset:  128 Size:    16 [unused]
  float3 fBlendEmissiveMapFactor__uiColor;// Offset:  144 Size:    12 [unused]
  float fBlendMetalic__uiUNorm;      // Offset:  156 Size:     4 [unused]
  float fBlendRoughness__uiUNorm;    // Offset:  160 Size:     4 [unused]
  float fBlendDetailNormalBlend__uiUNorm;// Offset:  164 Size:     4 [unused]
  float fBlendSubSurfaceBlend__uiUNorm;// Offset:  168 Size:     4 [unused]
  // align: 172 to 176
  ubyte align1[4];
  float4 fBlendUVTransformA;         // Offset:  176 Size:    16 [unused]
  float4 fBlendUVTransformB;         // Offset:  192 Size:    16 [unused]
  float3 fBlendDir__uiDirection;     // Offset:  208 Size:    12 [unused]
  float fBlendPlaneNormal__uiUNorm;  // Offset:  220 Size:     4 [unused]
  float3 fBlendOp;                   // Offset:  224 Size:    12 [unused]
  bool bUseUVSecondaryMtA;           // Offset:  236 Size:     4
  bool bUseUVSecondaryMtB;           // Offset:  240 Size:     4 [unused]
  bool bUseUVSecondaryMtBM;          // Offset:  244 Size:     4 [unused]
  float fFurNormalBlend__uiUNorm;    // Offset:  248 Size:     4 [unused]
  float fFurHeight__uiUNorm;         // Offset:  252 Size:     4 [unused]
  float fFurMapBlend__uiUNorm;       // Offset:  256 Size:     4 [unused]
  float fFurEdgeBlend__uiUNorm;      // Offset:  260 Size:     4 [unused]
  float fFurTile;                    // Offset:  264 Size:     4 [unused]
  // align: 268 to 272
  ubyte align2[4];
  float3 fWetBlendDir__uiDirection;  // Offset:  272 Size:    12 [unused]
  float fWetBlendPlaneNormal__uiUNorm;// Offset:  284 Size:     4 [unused]
  float3 fWetBlendOp;                // Offset:  288 Size:    12 [unused]
  bool bSpecialBlend;                // Offset:  300 Size:     4 [unused]
  bool bWetNormalBlend;              // Offset:  304 Size:     4 [unused]
  float2 fWetNormalBlendRange__uiUNorm;// Offset:  308 Size:     8 [unused]
  float fFilmThickness__uiUNorm;     // Offset:  316 Size:     4 [unused]
  float fFilmBlend__uiUNorm;         // Offset:  320 Size:     4 [unused]
  float fRefraction__uiUNorm;        // Offset:  324 Size:     4 [unused]
  float fRefractionBlend__uiUNorm;   // Offset:  328 Size:     4 [unused]
};

//CBMhMaterialEM057Local__disclosure : 7517.shdr.src
struct CBMhMaterialEM057Local__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  bool bBaseColorEmissive;           // Offset:   52 Size:     4 [unused]
  float2 fPaintUVTile;               // Offset:   56 Size:     8 [unused]
  float fAddNormalBlend__uiUNorm;    // Offset:   64 Size:     4 [unused]
  // align: 68 to 80
  ubyte align0[12];
  float4 fAddNormalMaskA__uiSNorm;   // Offset:   80 Size:    16 [unused]
  float4 fAddNormalMaskB__uiSNorm;   // Offset:   96 Size:    16 [unused]
  float fAddNormalMaskC__uiUNorm;    // Offset:  112 Size:     4 [unused]
  float fAddNormalMaskD__uiUNorm;    // Offset:  116 Size:     4 [unused]
  bool bBackFaceShading;             // Offset:  120 Size:     4 [unused]
  bool bBackFaceNormalFilp;          // Offset:  124 Size:     4 [unused]
  float3 fKizuColor__uiColor;        // Offset:  128 Size:    12 [unused]
  // align: 140 to 144
  ubyte align1[4];
  float2 fKizuUVOffset__uiUNorm;     // Offset:  144 Size:     8 [unused]
  float fKizuMultiply;               // Offset:  152 Size:     4 [unused]
  bool bLegendary;                   // Offset:  156 Size:     4 [unused]
  float4 fLegendColor__uiColor;      // Offset:  160 Size:    16 [unused]
  float2 fLegendMetalMask__uiUNorm;  // Offset:  176 Size:     8 [unused]
  float fLegendRoughness;            // Offset:  184 Size:     4 [unused]
  // align: 188 to 192
  ubyte align2[4];
  float3 fLegendFilm__uiUNorm;       // Offset:  192 Size:    12 [unused]
  float fLegendSSSMask__uiUNorm;     // Offset:  204 Size:     4 [unused]
  float3 fLegendHSV__uiSNorm;        // Offset:  208 Size:    12 [unused]
  float fLegendFilmIOR__uiUNorm;     // Offset:  220 Size:     4 [unused]
  float fPartsMaskA__uiUNorm;        // Offset:  224 Size:     4 [unused]
  float fPartsMaskB__uiUNorm;        // Offset:  228 Size:     4 [unused]
  float fPartsMaskC__uiUNorm;        // Offset:  232 Size:     4 [unused]
  float fPartsMaskD__uiUNorm;        // Offset:  236 Size:     4 [unused]
  float fPartsMaskX__uiUNorm;        // Offset:  240 Size:     4 [unused]
  float fPartsMaskY__uiUNorm;        // Offset:  244 Size:     4 [unused]
  float fPartsMaskZ__uiUNorm;        // Offset:  248 Size:     4 [unused]
  float fPartsMaskW__uiUNorm;        // Offset:  252 Size:     4 [unused]
  bool bUseOffset;                   // Offset:  256 Size:     4
  float fOffsetScale;                // Offset:  260 Size:     4
  bool bTranslucentOffset;           // Offset:  264 Size:     4
  bool bAntiSSSEmit;                 // Offset:  268 Size:     4 [unused]
  float3 fFlowDirDir__uiDirection;   // Offset:  272 Size:    12 [unused]
  // align: 284 to 288
  ubyte align3[4];
  float4 fFlowControl__uiUNorm;      // Offset:  288 Size:    16 [unused]
  float fFlowTile;                   // Offset:  304 Size:     4 [unused]
  // align: 308 to 320
  ubyte align4[12];
  float4 fFlowColor__uiColor;        // Offset:  320 Size:    16 [unused]
  float4 fFlowMatControl__uiUNorm;   // Offset:  336 Size:    16 [unused]
  float fFilmThickness__uiUNorm;     // Offset:  352 Size:     4 [unused]
  float fFilmBlend__uiUNorm;         // Offset:  356 Size:     4 [unused]
  float fFilmIOR__uiUNorm;           // Offset:  360 Size:     4 [unused]
  float fRefraction__uiUNorm;        // Offset:  364 Size:     4 [unused]
  float fRefractionBlend__uiUNorm;   // Offset:  368 Size:     4 [unused]
  bool bUseBlendDisplace;            // Offset:  372 Size:     4
  float fVAnimV__uiUNorm;            // Offset:  376 Size:     4
  float fVAnimPosScale;              // Offset:  380 Size:     4
  bool bInvertX;                     // Offset:  384 Size:     4
  float fAnimEmitMin;                // Offset:  388 Size:     4 [unused]
  float fAnimEmitSpeed;              // Offset:  392 Size:     4 [unused]
  bool bUseWaveEmit;                 // Offset:  396 Size:     4 [unused]
  float fAnimEmitWave;               // Offset:  400 Size:     4 [unused]
  // align: 404 to 416
  ubyte align5[12];
  float4 fFurParam__uiUNorm;         // Offset:  416 Size:    16 [unused]
  float fFurTile;                    // Offset:  432 Size:     4 [unused]
  float fAlbedoBlend__uiSNorm;       // Offset:  436 Size:     4 [unused]
  bool bAlbedoOverUVsecondary;       // Offset:  440 Size:     4 [unused]
  bool bUVsecondaryXprojection;      // Offset:  444 Size:     4
  float4 fXprojectionTranspose__uiSNorm;// Offset:  448 Size:    16
  float3 fKinkControl;               // Offset:  464 Size:    12
  float fRimAlphaPower__uiSNorm;     // Offset:  476 Size:     4 [unused]
  float fRimTranslucency__uiUNorm;   // Offset:  480 Size:     4 [unused]
  float fRimNormal__uiUNorm;         // Offset:  484 Size:     4 [unused]
  float fSnowUVTile;                 // Offset:  488 Size:     4 [unused]
  // align: 492 to 496
  ubyte align6[4];
  float4 fSnowBlendColor__uiColor;   // Offset:  496 Size:    16
  float4 fSnowMatControl__uiUNorm;   // Offset:  512 Size:    16 [unused]
  float fMaterialSnowBlendB;         // Offset:  528 Size:     4
  // align: 532 to 544
  ubyte align7[12];
  float4 fSnowControl;               // Offset:  544 Size:    16
};

//CBDepthColor : 7531.shdr.src
struct CBDepthColor {

  uint fDepthColorBlendMode;         // Offset:    0 Size:     4
  float fDepthColorBlendRate;        // Offset:    4 Size:     4
  // align: 8 to 16
  ubyte align0[8];
  float3 fDepthColorColor;           // Offset:   16 Size:    12
  float fDepthColorDistanceStart;    // Offset:   28 Size:     4
  float fDepthColorDistanceEnd;      // Offset:   32 Size:     4
  // align: 36 to 48
  ubyte align1[12];
  float fDepthColorBlendCurve[256];  // Offset:   48 Size:  4084
};

//CBMhMaterialStdBlendLocal__disclosure : 7603.shdr.src
struct CBMhMaterialStdBlendLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fDetailNormalBlend__uiUNorm; // Offset:   48 Size:     4 [unused]
  // align: 52 to 64
  ubyte align0[12];
  float4 fUVTransformA;              // Offset:   64 Size:    16
  float4 fUVTransformB;              // Offset:   80 Size:    16 [unused]
  float fTranslucency__uiUNorm;      // Offset:   96 Size:     4 [unused]
  float3 fEmissiveBlendColor__uiColor;// Offset:  100 Size:    12 [unused]
  float fEmissiveBlendColorBlend__uiUNorm;// Offset:  112 Size:     4 [unused]
  float3 fEmissiveBlendRimParam;     // Offset:  116 Size:    12 [unused]
  float4 fBlendBaseMapFactor__uiColor;// Offset:  128 Size:    16 [unused]
  float3 fBlendEmissiveMapFactor__uiColor;// Offset:  144 Size:    12 [unused]
  float fBlendMetalic__uiUNorm;      // Offset:  156 Size:     4 [unused]
  float fBlendRoughness__uiUNorm;    // Offset:  160 Size:     4 [unused]
  float fBlendDetailNormalBlend__uiUNorm;// Offset:  164 Size:     4 [unused]
  float fBlendSubSurfaceBlend__uiUNorm;// Offset:  168 Size:     4 [unused]
  // align: 172 to 176
  ubyte align1[4];
  float4 fBlendUVTransformA;         // Offset:  176 Size:    16 [unused]
  float4 fBlendUVTransformB;         // Offset:  192 Size:    16 [unused]
  float3 fBlendDir__uiDirection;     // Offset:  208 Size:    12 [unused]
  float fBlendPlaneNormal__uiUNorm;  // Offset:  220 Size:     4 [unused]
  float3 fBlendOp;                   // Offset:  224 Size:    12 [unused]
  bool bUseUVSecondaryMtA;           // Offset:  236 Size:     4
  bool bUseUVSecondaryMtB;           // Offset:  240 Size:     4 [unused]
  bool bUseUVSecondaryMtBM;          // Offset:  244 Size:     4 [unused]
  float fFurNormalBlend__uiUNorm;    // Offset:  248 Size:     4 [unused]
  float fFurHeight__uiUNorm;         // Offset:  252 Size:     4 [unused]
  float fFurMapBlend__uiUNorm;       // Offset:  256 Size:     4 [unused]
  float fFurEdgeBlend__uiUNorm;      // Offset:  260 Size:     4 [unused]
  float fFurTile;                    // Offset:  264 Size:     4 [unused]
  // align: 268 to 272
  ubyte align2[4];
  float3 fWetBlendDir__uiDirection;  // Offset:  272 Size:    12 [unused]
  float fWetBlendPlaneNormal__uiUNorm;// Offset:  284 Size:     4 [unused]
  float3 fWetBlendOp;                // Offset:  288 Size:    12 [unused]
  bool bSpecialBlend;                // Offset:  300 Size:     4 [unused]
  bool bWetNormalBlend;              // Offset:  304 Size:     4 [unused]
  float2 fWetNormalBlendRange__uiUNorm;// Offset:  308 Size:     8 [unused]
};

//CBMhMaterialEM111Local__disclosure : 7695.shdr.src
struct CBMhMaterialEM111Local__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  bool bBaseColorEmissive;           // Offset:   52 Size:     4 [unused]
  float2 fPaintUVTile;               // Offset:   56 Size:     8 [unused]
  float fAddNormalBlend__uiUNorm;    // Offset:   64 Size:     4 [unused]
  // align: 68 to 80
  ubyte align0[12];
  float4 fAddNormalMaskA__uiSNorm;   // Offset:   80 Size:    16 [unused]
  float4 fAddNormalMaskB__uiSNorm;   // Offset:   96 Size:    16 [unused]
  float fAddNormalMaskC__uiUNorm;    // Offset:  112 Size:     4 [unused]
  float fAddNormalMaskD__uiUNorm;    // Offset:  116 Size:     4 [unused]
  bool bBackFaceShading;             // Offset:  120 Size:     4 [unused]
  bool bBackFaceNormalFilp;          // Offset:  124 Size:     4 [unused]
  float3 fKizuColor__uiColor;        // Offset:  128 Size:    12 [unused]
  // align: 140 to 144
  ubyte align1[4];
  float2 fKizuUVOffset__uiUNorm;     // Offset:  144 Size:     8 [unused]
  float fKizuMultiply;               // Offset:  152 Size:     4 [unused]
  bool bLegendary;                   // Offset:  156 Size:     4 [unused]
  float4 fLegendColor__uiColor;      // Offset:  160 Size:    16 [unused]
  float2 fLegendMetalMask__uiUNorm;  // Offset:  176 Size:     8 [unused]
  float fLegendRoughness;            // Offset:  184 Size:     4 [unused]
  // align: 188 to 192
  ubyte align2[4];
  float3 fLegendFilm__uiUNorm;       // Offset:  192 Size:    12 [unused]
  float fLegendSSSMask__uiUNorm;     // Offset:  204 Size:     4 [unused]
  float3 fLegendHSV__uiSNorm;        // Offset:  208 Size:    12 [unused]
  float fLegendFilmIOR__uiUNorm;     // Offset:  220 Size:     4 [unused]
  float fPartsMaskA__uiUNorm;        // Offset:  224 Size:     4 [unused]
  float fPartsMaskB__uiUNorm;        // Offset:  228 Size:     4 [unused]
  float fPartsMaskC__uiUNorm;        // Offset:  232 Size:     4 [unused]
  float fPartsMaskD__uiUNorm;        // Offset:  236 Size:     4 [unused]
  float fPartsMaskX__uiUNorm;        // Offset:  240 Size:     4 [unused]
  float fPartsMaskY__uiUNorm;        // Offset:  244 Size:     4 [unused]
  float fPartsMaskZ__uiUNorm;        // Offset:  248 Size:     4 [unused]
  float fPartsMaskW__uiUNorm;        // Offset:  252 Size:     4 [unused]
  bool bUseOffset;                   // Offset:  256 Size:     4
  float fOffsetScale;                // Offset:  260 Size:     4
  bool bTranslucentOffset;           // Offset:  264 Size:     4
  bool bAntiSSSEmit;                 // Offset:  268 Size:     4 [unused]
  float3 fFlowDirDir__uiDirection;   // Offset:  272 Size:    12 [unused]
  // align: 284 to 288
  ubyte align3[4];
  float4 fFlowControl__uiUNorm;      // Offset:  288 Size:    16 [unused]
  float fFlowTile;                   // Offset:  304 Size:     4 [unused]
  // align: 308 to 320
  ubyte align4[12];
  float4 fFlowColor__uiColor;        // Offset:  320 Size:    16 [unused]
  float4 fFlowMatControl__uiUNorm;   // Offset:  336 Size:    16 [unused]
  float4 fMaskBlend__uiUNorm;        // Offset:  352 Size:    16 [unused]
  float2 fMaskBlend_A__uiUNorm;      // Offset:  368 Size:     8 [unused]
  float2 fMaskBlend_B__uiUNorm;      // Offset:  376 Size:     8 [unused]
  float fFilmThickness__uiUNorm;     // Offset:  384 Size:     4 [unused]
  float fFilmBlend__uiUNorm;         // Offset:  388 Size:     4 [unused]
  float fFilmIOR__uiUNorm;           // Offset:  392 Size:     4 [unused]
  float fRefraction__uiUNorm;        // Offset:  396 Size:     4 [unused]
  float fRefractionBlend__uiUNorm;   // Offset:  400 Size:     4 [unused]
  float fAnimEmitMin;                // Offset:  404 Size:     4 [unused]
  float fAnimEmitSpeed;              // Offset:  408 Size:     4 [unused]
  bool bUseWaveEmit;                 // Offset:  412 Size:     4 [unused]
  float fAnimEmitWave;               // Offset:  416 Size:     4 [unused]
  // align: 420 to 432
  ubyte align5[12];
  float4 fFurParam__uiUNorm;         // Offset:  432 Size:    16 [unused]
  float fFurTile;                    // Offset:  448 Size:     4 [unused]
  bool bUseFlipUV;                   // Offset:  452 Size:     4 [unused]
  float fRimAlphaPower__uiSNorm;     // Offset:  456 Size:     4 [unused]
  float fRimTranslucency__uiUNorm;   // Offset:  460 Size:     4 [unused]
  float fRimNormal__uiUNorm;         // Offset:  464 Size:     4 [unused]
  float fSnowUVTile;                 // Offset:  468 Size:     4 [unused]
  // align: 472 to 480
  ubyte align6[8];
  float4 fSnowBlendColor__uiColor;   // Offset:  480 Size:    16
  float4 fSnowMatControl__uiUNorm;   // Offset:  496 Size:    16 [unused]
  float fMaterialSnowBlendB;         // Offset:  512 Size:     4
  // align: 516 to 528
  ubyte align7[12];
  float4 fSnowControl;               // Offset:  528 Size:    16
};

//CBMhMaterialUberLocal__disclosure : 7827.shdr.src
struct CBMhMaterialUberLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  bool bBaseColorEmissive;           // Offset:   52 Size:     4 [unused]
  float fAnimEmitMin;                // Offset:   56 Size:     4 [unused]
  float fAnimEmitSpeed;              // Offset:   60 Size:     4 [unused]
  float fAnimEmitWave;               // Offset:   64 Size:     4 [unused]
  bool bUseWaveEmit;                 // Offset:   68 Size:     4 [unused]
  bool bUseWaveAlpha;                // Offset:   72 Size:     4 [unused]
  bool bUseCMM;                      // Offset:   76 Size:     4 [unused]
  float4 fAddColorA__uiColor;        // Offset:   80 Size:    16 [unused]
  float4 fAddColorB__uiColor;        // Offset:   96 Size:    16 [unused]
  float4 fAddColorC__uiColor;        // Offset:  112 Size:    16 [unused]
  float4 fAddColorD__uiColor;        // Offset:  128 Size:    16 [unused]
  float4 fFurParam__uiUNorm;         // Offset:  144 Size:    16 [unused]
  float fFurTile;                    // Offset:  160 Size:     4 [unused]
  float3 fSecondaryEmitColor__uiColor;// Offset:  164 Size:    12 [unused]
  float4 fSecondaryEmit_Control;     // Offset:  176 Size:    16
  float fFilmThickness__uiUNorm;     // Offset:  192 Size:     4 [unused]
  float fFilmBlend__uiUNorm;         // Offset:  196 Size:     4 [unused]
  float fFilmIOR__uiUNorm;           // Offset:  200 Size:     4 [unused]
  // align: 204 to 208
  ubyte align0[4];
  float3 fEmissiveBlendColor__uiColor;// Offset:  208 Size:    12 [unused]
  float fEmissiveBlendColorBlend__uiUNorm;// Offset:  220 Size:     4 [unused]
  float3 fEmissiveBlendRimParam;     // Offset:  224 Size:    12 [unused]
  float fRefraction__uiSNorm;        // Offset:  236 Size:     4 [unused]
  float fRefractionRotation__uiSNorm;// Offset:  240 Size:     4 [unused]
  float fPanoramaTile;               // Offset:  244 Size:     4 [unused]
  float fVPushScale;                 // Offset:  248 Size:     4
  float fVPushWave;                  // Offset:  252 Size:     4
  float fVPushSpeed;                 // Offset:  256 Size:     4
  bool bUseFlipUV;                   // Offset:  260 Size:     4 [unused]
  bool bBackFaceNormalFilp;          // Offset:  264 Size:     4 [unused]
  bool bUseEmitMask;                 // Offset:  268 Size:     4
  bool bUseRoughColor;               // Offset:  272 Size:     4 [unused]
  float2 fRoughMask__uiUNorm;        // Offset:  276 Size:     8 [unused]
  bool bUsePaint;                    // Offset:  284 Size:     4 [unused]
  float2 fPaintMapRC;                // Offset:  288 Size:     8 [unused]
  float fPaintMapNum;                // Offset:  296 Size:     4 [unused]
  // align: 300 to 304
  ubyte align1[4];
  float4 fPaintMapOffset__uiSNorm;   // Offset:  304 Size:    16 [unused]
  float4 fPaintColor__uiColor;       // Offset:  320 Size:    16 [unused]
  float fPaintRoughness__uiUNorm;    // Offset:  336 Size:     4 [unused]
  float fPaintMetal__uiUNorm;        // Offset:  340 Size:     4 [unused]
  bool bUseOffset;                   // Offset:  344 Size:     4
  float fInnerOffsetScale;           // Offset:  348 Size:     4
  bool bUseFly;                      // Offset:  352 Size:     4
  uint iWingNum;                     // Offset:  356 Size:     4
  bool bUseAnimAlpha;                // Offset:  360 Size:     4 [unused]
  float fAnimAlphaSpeed;             // Offset:  364 Size:     4 [unused]
  float4 fSnowControl;               // Offset:  368 Size:    16
  float fMaterialSnowBlendA;         // Offset:  384 Size:     4
  float fMaterialSnowBlendB;         // Offset:  388 Size:     4
  float fSnowTile;                   // Offset:  392 Size:     4 [unused]
  // align: 396 to 400
  ubyte align2[4];
  float3 fSnowColor__uiColor;        // Offset:  400 Size:    12 [unused]
  // align: 412 to 416
  ubyte align3[4];
  float4 fSnowMatControl__uiUNorm;   // Offset:  416 Size:    16 [unused]
  float2 fSnowUVOffset__uiUNorm;     // Offset:  432 Size:     8 [unused]
  bool bUseSnowDistance;             // Offset:  440 Size:     4 [unused]
};

//CBMhMaterialFurLocal__disclosure : 886.shdr.src
struct CBMhMaterialFurLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fDetailNormalBlend__uiUNorm; // Offset:   48 Size:     4 [unused]
  // align: 52 to 64
  ubyte align0[12];
  float4 fUVTransformA;              // Offset:   64 Size:    16
  float4 fUVTransformB;              // Offset:   80 Size:    16 [unused]
  float fTranslucency__uiUNorm;      // Offset:   96 Size:     4 [unused]
  float3 fEmissiveBlendColor__uiColor;// Offset:  100 Size:    12 [unused]
  float fEmissiveBlendColorBlend__uiUNorm;// Offset:  112 Size:     4 [unused]
  float3 fEmissiveBlendRimParam;     // Offset:  116 Size:    12 [unused]
  float fFurHeight__uiUNorm;         // Offset:  128 Size:     4 [unused]
  float fFurMapBlend__uiUNorm;       // Offset:  132 Size:     4 [unused]
  float fFurEdgeBlend__uiUNorm;      // Offset:  136 Size:     4 [unused]
  float fFurTile;                    // Offset:  140 Size:     4 [unused]
};

//CBMhMaterialVfxDistDispLocal__disclosure : 7927.shdr.src
struct CBMhMaterialVfxDistDispLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fCubeMapFactor__uiColor;    // Offset:   16 Size:    12 [unused]
  // align: 28 to 32
  ubyte align0[4];
  float3 fDistortionFactor__uiColor; // Offset:   32 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   44 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   48 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   52 Size:     4 [unused]
  // align: 56 to 64
  ubyte align1[8];
  float4 fUVTransformA;              // Offset:   64 Size:    16 [unused]
  float4 fUVTransformB;              // Offset:   80 Size:    16
  float fDisplacementFactor;         // Offset:   96 Size:     4
  float fFlow_Speed;                 // Offset:  100 Size:     4 [unused]
  float fFlow_Strength;              // Offset:  104 Size:     4 [unused]
  float fNormalFactor__uiUNorm;      // Offset:  108 Size:     4 [unused]
  float fOpacityFactor;              // Offset:  112 Size:     4 [unused]
  float fVolumeBlend__uiSNorm;       // Offset:  116 Size:     4 [unused]
  float fDistortionAngle;            // Offset:  120 Size:     4 [unused]
  float fDistortion;                 // Offset:  124 Size:     4 [unused]
  float fSpecularFactor;             // Offset:  128 Size:     4 [unused]
  float fDiffuseChroma__uiUNorm;     // Offset:  132 Size:     4 [unused]
  float fSpecularChroma__uiUNorm;    // Offset:  136 Size:     4 [unused]
  bool bRefractionEnable;            // Offset:  140 Size:     4 [unused]
  bool bVolumeBlendEnable;           // Offset:  144 Size:     4 [unused]
  float3 fEmissiveBlendColor__uiColor;// Offset:  148 Size:    12 [unused]
  float fEmissiveBlendColorBlend__uiUNorm;// Offset:  160 Size:     4 [unused]
  float3 fEmissiveBlendRimParam;     // Offset:  164 Size:    12 [unused]
  float fInnerOffsetScale;           // Offset:  176 Size:     4
  float fVelocityAttn;               // Offset:  180 Size:     4 [unused]
  float fNormalDecalBlend__uiUNorm;  // Offset:  184 Size:     4 [unused]
};

//CBMhMaterialEMLocal__disclosure : 7993.shdr.src
struct CBMhMaterialEMLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  bool bBaseColorEmissive;           // Offset:   52 Size:     4 [unused]
  float2 fPaintUVTile;               // Offset:   56 Size:     8 [unused]
  float fAddNormalBlend__uiUNorm;    // Offset:   64 Size:     4 [unused]
  // align: 68 to 80
  ubyte align0[12];
  float4 fAddNormalMaskA__uiSNorm;   // Offset:   80 Size:    16 [unused]
  float4 fAddNormalMaskB__uiSNorm;   // Offset:   96 Size:    16 [unused]
  float fAddNormalMaskC__uiUNorm;    // Offset:  112 Size:     4 [unused]
  float fAddNormalMaskD__uiUNorm;    // Offset:  116 Size:     4 [unused]
  bool bBackFaceShading;             // Offset:  120 Size:     4 [unused]
  bool bBackFaceNormalFilp;          // Offset:  124 Size:     4 [unused]
  float3 fKizuColor__uiColor;        // Offset:  128 Size:    12 [unused]
  // align: 140 to 144
  ubyte align1[4];
  float2 fKizuUVOffset__uiUNorm;     // Offset:  144 Size:     8 [unused]
  float fKizuMultiply;               // Offset:  152 Size:     4 [unused]
  bool bLegendary;                   // Offset:  156 Size:     4 [unused]
  float4 fLegendColor__uiColor;      // Offset:  160 Size:    16 [unused]
  float2 fLegendMetalMask__uiUNorm;  // Offset:  176 Size:     8 [unused]
  float fLegendRoughness;            // Offset:  184 Size:     4 [unused]
  // align: 188 to 192
  ubyte align2[4];
  float3 fLegendFilm__uiUNorm;       // Offset:  192 Size:    12 [unused]
  float fLegendSSSMask__uiUNorm;     // Offset:  204 Size:     4 [unused]
  float3 fLegendHSV__uiSNorm;        // Offset:  208 Size:    12 [unused]
  float fLegendFilmIOR__uiUNorm;     // Offset:  220 Size:     4 [unused]
  float fPartsMaskA__uiUNorm;        // Offset:  224 Size:     4 [unused]
  float fPartsMaskB__uiUNorm;        // Offset:  228 Size:     4 [unused]
  float fPartsMaskC__uiUNorm;        // Offset:  232 Size:     4 [unused]
  float fPartsMaskD__uiUNorm;        // Offset:  236 Size:     4 [unused]
  float fPartsMaskX__uiUNorm;        // Offset:  240 Size:     4 [unused]
  float fPartsMaskY__uiUNorm;        // Offset:  244 Size:     4 [unused]
  float fPartsMaskZ__uiUNorm;        // Offset:  248 Size:     4 [unused]
  float fPartsMaskW__uiUNorm;        // Offset:  252 Size:     4 [unused]
  bool bUseOffset;                   // Offset:  256 Size:     4
  float fOffsetScale;                // Offset:  260 Size:     4
  bool bTranslucentOffset;           // Offset:  264 Size:     4
  bool bAntiSSSEmit;                 // Offset:  268 Size:     4 [unused]
  float3 fFlowDirDir__uiDirection;   // Offset:  272 Size:    12 [unused]
  // align: 284 to 288
  ubyte align3[4];
  float4 fFlowControl__uiUNorm;      // Offset:  288 Size:    16 [unused]
  float fFlowTile;                   // Offset:  304 Size:     4 [unused]
  // align: 308 to 320
  ubyte align4[12];
  float4 fFlowColor__uiColor;        // Offset:  320 Size:    16 [unused]
  float4 fFlowMatControl__uiUNorm;   // Offset:  336 Size:    16 [unused]
  float fFilmThickness__uiUNorm;     // Offset:  352 Size:     4 [unused]
  float fFilmBlend__uiUNorm;         // Offset:  356 Size:     4 [unused]
  float fFilmIOR__uiUNorm;           // Offset:  360 Size:     4 [unused]
  float fRefraction__uiUNorm;        // Offset:  364 Size:     4 [unused]
  float fRefractionBlend__uiUNorm;   // Offset:  368 Size:     4 [unused]
  float fAnimEmitMin;                // Offset:  372 Size:     4 [unused]
  float fAnimEmitSpeed;              // Offset:  376 Size:     4 [unused]
  bool bUseWaveEmit;                 // Offset:  380 Size:     4 [unused]
  float fAnimEmitWave;               // Offset:  384 Size:     4 [unused]
  float fRimAlphaPower__uiSNorm;     // Offset:  388 Size:     4 [unused]
  float fRimTranslucency__uiUNorm;   // Offset:  392 Size:     4 [unused]
  float fRimNormal__uiUNorm;         // Offset:  396 Size:     4 [unused]
  float fSnowUVTile;                 // Offset:  400 Size:     4 [unused]
  // align: 404 to 416
  ubyte align5[12];
  float4 fSnowBlendColor__uiColor;   // Offset:  416 Size:    16
  float4 fSnowMatControl__uiUNorm;   // Offset:  432 Size:    16 [unused]
  float fMaterialSnowBlendB;         // Offset:  448 Size:     4
  // align: 452 to 464
  ubyte align6[12];
  float4 fSnowControl;               // Offset:  464 Size:    16
};

//CBMhMaterialSpeedTreeStdIceLocal__disclosure : 8224.shdr.src
struct CBMhMaterialSpeedTreeStdIceLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fDetailNormalBlend__uiUNorm; // Offset:   48 Size:     4 [unused]
  // align: 52 to 64
  ubyte align0[12];
  float4 fUVTransformA;              // Offset:   64 Size:    16
  float4 fUVTransformB;              // Offset:   80 Size:    16 [unused]
  float4 fBaseMapModulation__uiUNorm;// Offset:   96 Size:    16 [unused]
  float fTranslucency__uiUNorm;      // Offset:  112 Size:     4 [unused]
  bool bLightProbeEmissive;          // Offset:  116 Size:     4 [unused]
  // align: 120 to 128
  ubyte align1[8];
  float3 fEmissiveBlendColor__uiColor;// Offset:  128 Size:    12 [unused]
  float fEmissiveBlendColorBlend__uiUNorm;// Offset:  140 Size:     4 [unused]
  float3 fEmissiveBlendRimParam;     // Offset:  144 Size:    12 [unused]
  bool bSpecialBlend;                // Offset:  156 Size:     4 [unused]
  float fRoughnessThreshold__uiUNorm;// Offset:  160 Size:     4 [unused]
  float fRoughnessFillValue__uiUNorm;// Offset:  164 Size:     4 [unused]
  bool bWetNormalBlend;              // Offset:  168 Size:     4 [unused]
  // align: 172 to 176
  ubyte align2[4];
  float2 fWetNormalBlendRange__uiUNorm;// Offset:  176 Size:     8 [unused]
  float fSnowAlphaRef__uiUNorm;      // Offset:  184 Size:     4 [unused]
  // align: 188 to 192
  ubyte align3[4];
  float4 fSnowBaseMapFactor__uiColor;// Offset:  192 Size:    16 [unused]
  float3 fSnowEmissiveMapFactor__uiColor;// Offset:  208 Size:    12 [unused]
  float fSnowMetalic__uiUNorm;       // Offset:  220 Size:     4 [unused]
  float fSnowRoughness__uiUNorm;     // Offset:  224 Size:     4 [unused]
  float fSnowDetailNormalBlend__uiUNorm;// Offset:  228 Size:     4 [unused]
  float fSnowSubSurfaceBlend__uiUNorm;// Offset:  232 Size:     4 [unused]
  // align: 236 to 240
  ubyte align4[4];
  float4 fSnowUVTransformA;          // Offset:  240 Size:    16 [unused]
  float4 fSnowUVTransformB;          // Offset:  256 Size:    16 [unused]
  float3 fSnowDir__uiDirection;      // Offset:  272 Size:    12 [unused]
  float fSnowPlaneNormal__uiUNorm;   // Offset:  284 Size:     4 [unused]
  float3 fSnowOp;                    // Offset:  288 Size:    12 [unused]
  bool bUseUVSecondarySnowMt;        // Offset:  300 Size:     4 [unused]
  bool bUseUVSecondarySnowMtBM;      // Offset:  304 Size:     4 [unused]
  float3 fAlbedoBlendMapGFactor__uiColor;// Offset:  308 Size:    12 [unused]
  float fIceFresnelFactor__uiUNorm;  // Offset:  320 Size:     4 [unused]
  float fIceColorBlend__uiUNorm;     // Offset:  324 Size:     4 [unused]
  bool bUseUVSecondaryMtIce;         // Offset:  328 Size:     4 [unused]
};

//CBMhMaterialNPCLocal__disclosure : 8309.shdr.src
struct CBMhMaterialNPCLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  bool bBaseColorEmissive;           // Offset:   52 Size:     4 [unused]
  bool bBackFaceNormalFilp;          // Offset:   56 Size:     4 [unused]
  float fAnimEmitMin;                // Offset:   60 Size:     4 [unused]
  float fAnimEmitSpeed;              // Offset:   64 Size:     4 [unused]
  bool bUseCMM;                      // Offset:   68 Size:     4 [unused]
  // align: 72 to 80
  ubyte align0[8];
  float4 fAddColorA__uiColor;        // Offset:   80 Size:    16 [unused]
  float4 fAddColorB__uiColor;        // Offset:   96 Size:    16 [unused]
  float4 fAddColorC__uiColor;        // Offset:  112 Size:    16 [unused]
  float4 fAddColorD__uiColor;        // Offset:  128 Size:    16 [unused]
  float4 fFurParam__uiUNorm;         // Offset:  144 Size:    16 [unused]
  float fFurTile;                    // Offset:  160 Size:     4 [unused]
  // align: 164 to 176
  ubyte align1[12];
  float4 fSnowControl;               // Offset:  176 Size:    16
  float fMaterialSnowBlendA;         // Offset:  192 Size:     4
  float fMaterialSnowBlendB;         // Offset:  196 Size:     4
  float fSnowTile;                   // Offset:  200 Size:     4 [unused]
  // align: 204 to 208
  ubyte align2[4];
  float3 fSnowColor__uiColor;        // Offset:  208 Size:    12 [unused]
  // align: 220 to 224
  ubyte align3[4];
  float4 fSnowMatControl__uiUNorm;   // Offset:  224 Size:    16 [unused]
  float2 fSnowUVOffset__uiUNorm;     // Offset:  240 Size:     8 [unused]
  float fFilmThickness__uiUNorm;     // Offset:  248 Size:     4 [unused]
  float fFilmBlend__uiUNorm;         // Offset:  252 Size:     4 [unused]
  float fFilmIOR__uiUNorm;           // Offset:  256 Size:     4 [unused]
  float fRefractBlend__uiUNorm;      // Offset:  260 Size:     4 [unused]
  float fRefraction__uiSNorm;        // Offset:  264 Size:     4 [unused]
  float fPanoramaTile;               // Offset:  268 Size:     4 [unused]
  float3 fEmissiveBlendColor__uiColor;// Offset:  272 Size:    12 [unused]
  float fEmissiveBlendColorBlend__uiUNorm;// Offset:  284 Size:     4 [unused]
  float3 fEmissiveBlendRimParam;     // Offset:  288 Size:    12 [unused]
  float fDetailNormalBlend__uiUNorm; // Offset:  300 Size:     4 [unused]
  float4 fUVTransformDetailNormal;   // Offset:  304 Size:    16 [unused]
};

//CBResample : 8320.shdr.src
struct CBResample {

  float2 fResampleScreenSize;        // Offset:    0 Size:     8
  float2 fResampleScale;             // Offset:    8 Size:     8
};

//CBMhMaterialEM124Local__disclosure : 8387.shdr.src
struct CBMhMaterialEM124Local__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  bool bBaseColorEmissive;           // Offset:   52 Size:     4 [unused]
  float2 fPaintUVTile;               // Offset:   56 Size:     8 [unused]
  float fAddNormalBlend__uiUNorm;    // Offset:   64 Size:     4 [unused]
  // align: 68 to 80
  ubyte align0[12];
  float4 fAddNormalMaskA__uiSNorm;   // Offset:   80 Size:    16 [unused]
  float4 fAddNormalMaskB__uiSNorm;   // Offset:   96 Size:    16 [unused]
  float fAddNormalMaskC__uiUNorm;    // Offset:  112 Size:     4 [unused]
  float fAddNormalMaskD__uiUNorm;    // Offset:  116 Size:     4 [unused]
  bool bBackFaceShading;             // Offset:  120 Size:     4 [unused]
  bool bBackFaceNormalFilp;          // Offset:  124 Size:     4 [unused]
  float3 fKizuColor__uiColor;        // Offset:  128 Size:    12 [unused]
  // align: 140 to 144
  ubyte align1[4];
  float2 fKizuUVOffset__uiUNorm;     // Offset:  144 Size:     8 [unused]
  float fKizuMultiply;               // Offset:  152 Size:     4 [unused]
  bool bLegendary;                   // Offset:  156 Size:     4 [unused]
  float4 fLegendColor__uiColor;      // Offset:  160 Size:    16 [unused]
  float2 fLegendMetalMask__uiUNorm;  // Offset:  176 Size:     8 [unused]
  float fLegendRoughness;            // Offset:  184 Size:     4 [unused]
  // align: 188 to 192
  ubyte align2[4];
  float3 fLegendFilm__uiUNorm;       // Offset:  192 Size:    12 [unused]
  float fLegendSSSMask__uiUNorm;     // Offset:  204 Size:     4 [unused]
  float3 fLegendHSV__uiSNorm;        // Offset:  208 Size:    12 [unused]
  float fLegendFilmIOR__uiUNorm;     // Offset:  220 Size:     4 [unused]
  float fPartsMaskA__uiUNorm;        // Offset:  224 Size:     4 [unused]
  float fPartsMaskB__uiUNorm;        // Offset:  228 Size:     4 [unused]
  float fPartsMaskC__uiUNorm;        // Offset:  232 Size:     4 [unused]
  float fPartsMaskD__uiUNorm;        // Offset:  236 Size:     4 [unused]
  float fPartsMaskX__uiUNorm;        // Offset:  240 Size:     4 [unused]
  float fPartsMaskY__uiUNorm;        // Offset:  244 Size:     4 [unused]
  float fPartsMaskZ__uiUNorm;        // Offset:  248 Size:     4 [unused]
  float fPartsMaskW__uiUNorm;        // Offset:  252 Size:     4 [unused]
  bool bUseOffset;                   // Offset:  256 Size:     4
  float fOffsetScale;                // Offset:  260 Size:     4
  bool bTranslucentOffset;           // Offset:  264 Size:     4
  bool bAntiSSSEmit;                 // Offset:  268 Size:     4 [unused]
  float3 fFlowDirDir__uiDirection;   // Offset:  272 Size:    12 [unused]
  // align: 284 to 288
  ubyte align3[4];
  float4 fFlowControl__uiUNorm;      // Offset:  288 Size:    16 [unused]
  float fFlowTile;                   // Offset:  304 Size:     4 [unused]
  // align: 308 to 320
  ubyte align4[12];
  float4 fFlowColor__uiColor;        // Offset:  320 Size:    16 [unused]
  float4 fFlowMatControl__uiUNorm;   // Offset:  336 Size:    16 [unused]
  float fFilmThickness__uiUNorm;     // Offset:  352 Size:     4 [unused]
  float fFilmBlend__uiUNorm;         // Offset:  356 Size:     4 [unused]
  float fFilmIOR__uiUNorm;           // Offset:  360 Size:     4 [unused]
  float fRefraction__uiUNorm;        // Offset:  364 Size:     4 [unused]
  float fRefractionBlend__uiUNorm;   // Offset:  368 Size:     4 [unused]
  float fAnimEmitMin;                // Offset:  372 Size:     4 [unused]
  float fAnimEmitSpeed;              // Offset:  376 Size:     4 [unused]
  bool bUseWaveEmit;                 // Offset:  380 Size:     4 [unused]
  float fAnimEmitWave;               // Offset:  384 Size:     4 [unused]
  // align: 388 to 400
  ubyte align5[12];
  float4 fFurParam__uiUNorm;         // Offset:  400 Size:    16 [unused]
  float fFurTile;                    // Offset:  416 Size:     4 [unused]
  bool bUseFlipUV;                   // Offset:  420 Size:     4 [unused]
  bool bParallax_Refraction;         // Offset:  424 Size:     4 [unused]
  float fRefractBlend__uiUNorm;      // Offset:  428 Size:     4 [unused]
  float fParallax_height__uiUNorm;   // Offset:  432 Size:     4 [unused]
  float fRefraction_tile;            // Offset:  436 Size:     4 [unused]
  float fRefraction_distortion__uiUNorm;// Offset:  440 Size:     4 [unused]
  // align: 444 to 448
  ubyte align6[4];
  float4 fBlendMatFactor;            // Offset:  448 Size:    16 [unused]
  float fAlphaTestControl__uiUNorm;  // Offset:  464 Size:     4 [unused]
  bool bUseSpecialMode;              // Offset:  468 Size:     4 [unused]
  float fRimAlphaPower__uiSNorm;     // Offset:  472 Size:     4 [unused]
  float fRimTranslucency__uiUNorm;   // Offset:  476 Size:     4 [unused]
  float fRimNormal__uiUNorm;         // Offset:  480 Size:     4 [unused]
  float fSnowUVTile;                 // Offset:  484 Size:     4 [unused]
  // align: 488 to 496
  ubyte align7[8];
  float4 fSnowBlendColor__uiColor;   // Offset:  496 Size:    16
  float4 fSnowMatControl__uiUNorm;   // Offset:  512 Size:    16 [unused]
  float fMaterialSnowBlendB;         // Offset:  528 Size:     4
  // align: 532 to 544
  ubyte align8[12];
  float4 fSnowControl;               // Offset:  544 Size:    16
};

//CBSky : 8399.shdr.src
struct CBSky {

  float fSunSolidAngle;              // Offset:    0 Size:     4
};

//CBMhMaterialTestLocal__disclosure : 8491.shdr.src
struct CBMhMaterialTestLocal__disclosure {

  int iShaderMode;                   // Offset:    0 Size:     4
  // align: 4 to 16
  ubyte align0[12];
  float4 fBaseMapFactor__uiColor;    // Offset:   16 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   32 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   44 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   48 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   52 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   56 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   60 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   64 Size:     4 [unused]
  // align: 68 to 80
  ubyte align1[12];
  float4 fUVTransformA;              // Offset:   80 Size:    16 [unused]
  float fParallaxFactor__uiUNorm;    // Offset:   96 Size:     4 [unused]
  float fInnerOffsetScale;           // Offset:  100 Size:     4
  float fRimAlphaPower__uiUNorm;     // Offset:  104 Size:     4 [unused]
  float fVolumeBlend__uiSNorm;       // Offset:  108 Size:     4 [unused]
  float fOffset_A__uiUNorm;          // Offset:  112 Size:     4 [unused]
  float fOffset_B__uiUNorm;          // Offset:  116 Size:     4 [unused]
  // align: 120 to 128
  ubyte align2[8];
  float3 fCoating_A__uiColor;        // Offset:  128 Size:    12 [unused]
  // align: 140 to 144
  ubyte align3[4];
  float3 fCoating_B__uiColor;        // Offset:  144 Size:    12 [unused]
  // align: 156 to 160
  ubyte align4[4];
  float3 fCoating_C__uiColor;        // Offset:  160 Size:    12 [unused]
  // align: 172 to 176
  ubyte align5[4];
  float3 fCoating_D__uiColor;        // Offset:  176 Size:    12 [unused]
  float fWakuIntensity__uiUNorm;     // Offset:  188 Size:     4 [unused]
  float fWakuSize__uiUNorm;          // Offset:  192 Size:     4 [unused]
  float fRefraction__uiUNorm;        // Offset:  196 Size:     4 [unused]
  float fVPushScale;                 // Offset:  200 Size:     4
  float fVPushWave;                  // Offset:  204 Size:     4
  float fVPushSpeed;                 // Offset:  208 Size:     4
  float fVAnimPosScale;              // Offset:  212 Size:     4
  float fVAnimV__uiUNorm;            // Offset:  216 Size:     4
};

//CBMhMaterialFurnitureLocal__disclosure : 8572.shdr.src
struct CBMhMaterialFurnitureLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fDetailNormalBlend__uiUNorm; // Offset:   48 Size:     4 [unused]
  // align: 52 to 64
  ubyte align0[12];
  float4 fUVTransformA;              // Offset:   64 Size:    16
  float4 fUVTransformB;              // Offset:   80 Size:    16 [unused]
  float fTranslucency__uiUNorm;      // Offset:   96 Size:     4 [unused]
  float3 fEmissiveBlendColor__uiColor;// Offset:  100 Size:    12 [unused]
  float fEmissiveBlendColorBlend__uiUNorm;// Offset:  112 Size:     4 [unused]
  float3 fEmissiveBlendRimParam;     // Offset:  116 Size:    12 [unused]
  float4 fBlendBaseMapFactor__uiColor;// Offset:  128 Size:    16 [unused]
  float3 fBlendEmissiveMapFactor__uiColor;// Offset:  144 Size:    12 [unused]
  float fBlendMetalic__uiUNorm;      // Offset:  156 Size:     4 [unused]
  float fBlendRoughness__uiUNorm;    // Offset:  160 Size:     4 [unused]
  float fBlendDetailNormalBlend__uiUNorm;// Offset:  164 Size:     4 [unused]
  float fBlendSubSurfaceBlend__uiUNorm;// Offset:  168 Size:     4 [unused]
  // align: 172 to 176
  ubyte align1[4];
  float4 fBlendUVTransformA;         // Offset:  176 Size:    16 [unused]
  float4 fBlendUVTransformB;         // Offset:  192 Size:    16 [unused]
  float4 fBlendUVTransformBaseMap;   // Offset:  208 Size:    16 [unused]
  float3 fBlendDir__uiDirection;     // Offset:  224 Size:    12 [unused]
  float fBlendPlaneNormal__uiUNorm;  // Offset:  236 Size:     4 [unused]
  float3 fBlendOp;                   // Offset:  240 Size:    12 [unused]
  bool bUseBlendBaseColor;           // Offset:  252 Size:     4 [unused]
  bool bUseUVSecondaryDetailNMtA;    // Offset:  256 Size:     4 [unused]
  bool bUseUVSecondaryDetailNMtB;    // Offset:  260 Size:     4 [unused]
  bool bUseUVSecondaryBaseMapMtB;    // Offset:  264 Size:     4 [unused]
  bool bUseUVSecondaryMtBM;          // Offset:  268 Size:     4 [unused]
  float fFurNormalBlend__uiUNorm;    // Offset:  272 Size:     4 [unused]
  float fFurHeight__uiUNorm;         // Offset:  276 Size:     4 [unused]
  float fFurMapBlend__uiUNorm;       // Offset:  280 Size:     4 [unused]
  float fFurEdgeBlend__uiUNorm;      // Offset:  284 Size:     4 [unused]
  float fFurTile;                    // Offset:  288 Size:     4 [unused]
  float fBlendFurNormalBlend__uiUNorm;// Offset:  292 Size:     4 [unused]
  float fBlendFurHeight__uiUNorm;    // Offset:  296 Size:     4 [unused]
  float fBlendFurMapBlend__uiUNorm;  // Offset:  300 Size:     4 [unused]
  float fBlendFurEdgeBlend__uiUNorm; // Offset:  304 Size:     4 [unused]
  float fBlendFurTile;               // Offset:  308 Size:     4 [unused]
};

//CBMhMaterialBurnLocal__disclosure : 8709.shdr.src
struct CBMhMaterialBurnLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  // align: 52 to 64
  ubyte align0[12];
  float4 fUVTransformA;              // Offset:   64 Size:    16 [unused]
  float3 fBurnControl__uiUNorm;      // Offset:   80 Size:    12 [unused]
  // align: 92 to 96
  ubyte align1[4];
  float3 fBurnColor__uiColor;        // Offset:   96 Size:    12 [unused]
  // align: 108 to 112
  ubyte align2[4];
  float4 fSnowControl;               // Offset:  112 Size:    16
  float fMaterialSnowBlendA;         // Offset:  128 Size:     4
  float fMaterialSnowBlendB;         // Offset:  132 Size:     4
  float fSnowTile;                   // Offset:  136 Size:     4 [unused]
  // align: 140 to 144
  ubyte align3[4];
  float3 fSnowColor__uiColor;        // Offset:  144 Size:    12 [unused]
  // align: 156 to 160
  ubyte align4[4];
  float4 fSnowMatControl__uiUNorm;   // Offset:  160 Size:    16 [unused]
  float2 fSnowUVOffset__uiUNorm;     // Offset:  176 Size:     8 [unused]
};

//SeaDisplacement : 8711.shdr.src
struct SeaDisplacement {

  row_major float4x4 fWorldMat;      // Offset:    0 Size:    64
  uint iVBStride;                    // Offset:   64 Size:     4
  uint iBaseVertexOffset;            // Offset:   68 Size:     4
  uint iVertexCount;                 // Offset:   72 Size:     4 [unused]
  uint iVBOffsetPosition;            // Offset:   76 Size:     4
  uint iVBOffsetTexcoord;            // Offset:   80 Size:     4
  float fWorldScaleY;                // Offset:   84 Size:     4
  float fSupposedVertexDistance;     // Offset:   88 Size:     4
  // align: 92 to 96
  ubyte align0[4];
  float2 fWindParam;                 // Offset:   96 Size:     8
  float fNoiseDensity;               // Offset:  104 Size:     4
  float fChoppyCoef;                 // Offset:  108 Size:     4
};

//CBMhMaterialSpeedTreeStdSnowLocal__disclosure : 8772.shdr.src
struct CBMhMaterialSpeedTreeStdSnowLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fDetailNormalBlend__uiUNorm; // Offset:   48 Size:     4 [unused]
  // align: 52 to 64
  ubyte align0[12];
  float4 fUVTransformA;              // Offset:   64 Size:    16
  float4 fUVTransformB;              // Offset:   80 Size:    16 [unused]
  float4 fBaseMapModulation__uiUNorm;// Offset:   96 Size:    16 [unused]
  float fTranslucency__uiUNorm;      // Offset:  112 Size:     4 [unused]
  bool bLightProbeEmissive;          // Offset:  116 Size:     4 [unused]
  // align: 120 to 128
  ubyte align1[8];
  float3 fEmissiveBlendColor__uiColor;// Offset:  128 Size:    12 [unused]
  float fEmissiveBlendColorBlend__uiUNorm;// Offset:  140 Size:     4 [unused]
  float3 fEmissiveBlendRimParam;     // Offset:  144 Size:    12 [unused]
  bool bSpecialBlend;                // Offset:  156 Size:     4 [unused]
  float fRoughnessThreshold__uiUNorm;// Offset:  160 Size:     4 [unused]
  float fRoughnessFillValue__uiUNorm;// Offset:  164 Size:     4 [unused]
  bool bWetNormalBlend;              // Offset:  168 Size:     4 [unused]
  // align: 172 to 176
  ubyte align2[4];
  float2 fWetNormalBlendRange__uiUNorm;// Offset:  176 Size:     8 [unused]
  float fSnowAlphaRef__uiUNorm;      // Offset:  184 Size:     4 [unused]
  // align: 188 to 192
  ubyte align3[4];
  float4 fSnowBaseMapFactor__uiColor;// Offset:  192 Size:    16 [unused]
  float3 fSnowEmissiveMapFactor__uiColor;// Offset:  208 Size:    12 [unused]
  float fSnowMetalic__uiUNorm;       // Offset:  220 Size:     4 [unused]
  float fSnowRoughness__uiUNorm;     // Offset:  224 Size:     4 [unused]
  float fSnowDetailNormalBlend__uiUNorm;// Offset:  228 Size:     4 [unused]
  float fSnowSubSurfaceBlend__uiUNorm;// Offset:  232 Size:     4 [unused]
  // align: 236 to 240
  ubyte align4[4];
  float4 fSnowUVTransformA;          // Offset:  240 Size:    16 [unused]
  float4 fSnowUVTransformB;          // Offset:  256 Size:    16 [unused]
  float3 fSnowDir__uiDirection;      // Offset:  272 Size:    12 [unused]
  float fSnowPlaneNormal__uiUNorm;   // Offset:  284 Size:     4 [unused]
  float3 fSnowOp;                    // Offset:  288 Size:    12 [unused]
  bool bUseUVSecondarySnowMt;        // Offset:  300 Size:     4 [unused]
  bool bUseUVSecondarySnowMtBM;      // Offset:  304 Size:     4 [unused]
};

//CBTubeLight : 8794.shdr.src
struct CBTubeLight {

  uint iTubeLightCount;              // Offset:    0 Size:     4
};

//CBMhMaterialFakeRefractionLocal__disclosure : 8844.shdr.src
struct CBMhMaterialFakeRefractionLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fDetailNormalBlend__uiUNorm; // Offset:   48 Size:     4 [unused]
  // align: 52 to 64
  ubyte align0[12];
  float4 fUVTransformA;              // Offset:   64 Size:    16
  float4 fUVTransformB;              // Offset:   80 Size:    16 [unused]
  float fTranslucency__uiUNorm;      // Offset:   96 Size:     4 [unused]
  float fRefraction__uiUNorm;        // Offset:  100 Size:     4 [unused]
};

//CBImageEvaluator : 8880.shdr.src
struct CBImageEvaluator {

  float3 fCentralRegion;             // Offset:    0 Size:    12
};

//CBMhMaterialEM118Local__disclosure : 8948.shdr.src
struct CBMhMaterialEM118Local__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  bool bBaseColorEmissive;           // Offset:   52 Size:     4 [unused]
  float2 fPaintUVTile;               // Offset:   56 Size:     8 [unused]
  float fAddNormalBlend__uiUNorm;    // Offset:   64 Size:     4 [unused]
  // align: 68 to 80
  ubyte align0[12];
  float4 fAddNormalMaskA__uiSNorm;   // Offset:   80 Size:    16 [unused]
  float4 fAddNormalMaskB__uiSNorm;   // Offset:   96 Size:    16 [unused]
  float fAddNormalMaskC__uiUNorm;    // Offset:  112 Size:     4 [unused]
  float fAddNormalMaskD__uiUNorm;    // Offset:  116 Size:     4 [unused]
  bool bBackFaceShading;             // Offset:  120 Size:     4 [unused]
  bool bBackFaceNormalFilp;          // Offset:  124 Size:     4 [unused]
  float3 fKizuColor__uiColor;        // Offset:  128 Size:    12 [unused]
  // align: 140 to 144
  ubyte align1[4];
  float2 fKizuUVOffset__uiUNorm;     // Offset:  144 Size:     8 [unused]
  float fKizuMultiply;               // Offset:  152 Size:     4 [unused]
  bool bLegendary;                   // Offset:  156 Size:     4 [unused]
  float4 fLegendColor__uiColor;      // Offset:  160 Size:    16 [unused]
  float2 fLegendMetalMask__uiUNorm;  // Offset:  176 Size:     8 [unused]
  float fLegendRoughness;            // Offset:  184 Size:     4 [unused]
  // align: 188 to 192
  ubyte align2[4];
  float3 fLegendFilm__uiUNorm;       // Offset:  192 Size:    12 [unused]
  float fLegendSSSMask__uiUNorm;     // Offset:  204 Size:     4 [unused]
  float3 fLegendHSV__uiSNorm;        // Offset:  208 Size:    12 [unused]
  float fLegendFilmIOR__uiUNorm;     // Offset:  220 Size:     4 [unused]
  float fPartsMaskA__uiUNorm;        // Offset:  224 Size:     4 [unused]
  float fPartsMaskB__uiUNorm;        // Offset:  228 Size:     4 [unused]
  float fPartsMaskC__uiUNorm;        // Offset:  232 Size:     4 [unused]
  float fPartsMaskD__uiUNorm;        // Offset:  236 Size:     4 [unused]
  float fPartsMaskX__uiUNorm;        // Offset:  240 Size:     4 [unused]
  float fPartsMaskY__uiUNorm;        // Offset:  244 Size:     4 [unused]
  float fPartsMaskZ__uiUNorm;        // Offset:  248 Size:     4 [unused]
  float fPartsMaskW__uiUNorm;        // Offset:  252 Size:     4 [unused]
  bool bUseOffset;                   // Offset:  256 Size:     4
  float fOffsetScale;                // Offset:  260 Size:     4
  bool bTranslucentOffset;           // Offset:  264 Size:     4
  bool bAntiSSSEmit;                 // Offset:  268 Size:     4 [unused]
  float3 fFlowDirDir__uiDirection;   // Offset:  272 Size:    12 [unused]
  // align: 284 to 288
  ubyte align3[4];
  float4 fFlowControl__uiUNorm;      // Offset:  288 Size:    16 [unused]
  float fFlowTile;                   // Offset:  304 Size:     4 [unused]
  // align: 308 to 320
  ubyte align4[12];
  float4 fFlowColor__uiColor;        // Offset:  320 Size:    16 [unused]
  float4 fFlowMatControl__uiUNorm;   // Offset:  336 Size:    16 [unused]
  float4 fMaskBlend__uiUNorm;        // Offset:  352 Size:    16 [unused]
  float2 fMaskBlend_A__uiUNorm;      // Offset:  368 Size:     8 [unused]
  float2 fMaskBlend_B__uiUNorm;      // Offset:  376 Size:     8 [unused]
  float fFilmThickness__uiUNorm;     // Offset:  384 Size:     4 [unused]
  float fFilmBlend__uiUNorm;         // Offset:  388 Size:     4 [unused]
  float fFilmIOR__uiUNorm;           // Offset:  392 Size:     4 [unused]
  float fRefraction__uiUNorm;        // Offset:  396 Size:     4 [unused]
  float fRefractionBlend__uiUNorm;   // Offset:  400 Size:     4 [unused]
  float fVAnimV__uiUNorm;            // Offset:  404 Size:     4
  // align: 408 to 416
  ubyte align5[8];
  float4 fDisplaceControl;           // Offset:  416 Size:    16
  float fEmitBlend__uiUNorm;         // Offset:  432 Size:     4 [unused]
  float3 fDetailEmit__uiColor;       // Offset:  436 Size:    12 [unused]
  float fVPushScale;                 // Offset:  448 Size:     4
  float fAlphaTestControl__uiUNorm;  // Offset:  452 Size:     4 [unused]
  float fAnimEmitMin;                // Offset:  456 Size:     4 [unused]
  float fAnimEmitSpeed;              // Offset:  460 Size:     4 [unused]
  bool bUseWaveEmit;                 // Offset:  464 Size:     4 [unused]
  float fAnimEmitWave;               // Offset:  468 Size:     4 [unused]
  float fEmitControl__uiUNorm;       // Offset:  472 Size:     4 [unused]
  float fRimAlphaPower__uiSNorm;     // Offset:  476 Size:     4 [unused]
  float fRimTranslucency__uiUNorm;   // Offset:  480 Size:     4 [unused]
  float fRimNormal__uiUNorm;         // Offset:  484 Size:     4 [unused]
  float fSnowUVTile;                 // Offset:  488 Size:     4 [unused]
  // align: 492 to 496
  ubyte align6[4];
  float4 fSnowBlendColor__uiColor;   // Offset:  496 Size:    16
  float4 fSnowMatControl__uiUNorm;   // Offset:  512 Size:    16 [unused]
  float fMaterialSnowBlendB;         // Offset:  528 Size:     4
  // align: 532 to 544
  ubyte align7[12];
  float4 fSnowControl;               // Offset:  544 Size:    16
};

//CBMhMaterialEM080Local__disclosure : 9014.shdr.src
struct CBMhMaterialEM080Local__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  bool bBaseColorEmissive;           // Offset:   52 Size:     4 [unused]
  float2 fPaintUVTile;               // Offset:   56 Size:     8 [unused]
  float fAddNormalBlend__uiUNorm;    // Offset:   64 Size:     4 [unused]
  // align: 68 to 80
  ubyte align0[12];
  float4 fAddNormalMaskA__uiSNorm;   // Offset:   80 Size:    16 [unused]
  float4 fAddNormalMaskB__uiSNorm;   // Offset:   96 Size:    16 [unused]
  float fAddNormalMaskC__uiUNorm;    // Offset:  112 Size:     4 [unused]
  float fAddNormalMaskD__uiUNorm;    // Offset:  116 Size:     4 [unused]
  bool bBackFaceShading;             // Offset:  120 Size:     4 [unused]
  bool bBackFaceNormalFilp;          // Offset:  124 Size:     4 [unused]
  float3 fKizuColor__uiColor;        // Offset:  128 Size:    12 [unused]
  // align: 140 to 144
  ubyte align1[4];
  float2 fKizuUVOffset__uiUNorm;     // Offset:  144 Size:     8 [unused]
  float fKizuMultiply;               // Offset:  152 Size:     4 [unused]
  bool bLegendary;                   // Offset:  156 Size:     4 [unused]
  float4 fLegendColor__uiColor;      // Offset:  160 Size:    16 [unused]
  float2 fLegendMetalMask__uiUNorm;  // Offset:  176 Size:     8 [unused]
  float fLegendRoughness;            // Offset:  184 Size:     4 [unused]
  // align: 188 to 192
  ubyte align2[4];
  float3 fLegendFilm__uiUNorm;       // Offset:  192 Size:    12 [unused]
  float fLegendSSSMask__uiUNorm;     // Offset:  204 Size:     4 [unused]
  float3 fLegendHSV__uiSNorm;        // Offset:  208 Size:    12 [unused]
  float fLegendFilmIOR__uiUNorm;     // Offset:  220 Size:     4 [unused]
  float fPartsMaskA__uiUNorm;        // Offset:  224 Size:     4 [unused]
  float fPartsMaskB__uiUNorm;        // Offset:  228 Size:     4 [unused]
  float fPartsMaskC__uiUNorm;        // Offset:  232 Size:     4 [unused]
  float fPartsMaskD__uiUNorm;        // Offset:  236 Size:     4 [unused]
  float fPartsMaskX__uiUNorm;        // Offset:  240 Size:     4 [unused]
  float fPartsMaskY__uiUNorm;        // Offset:  244 Size:     4 [unused]
  float fPartsMaskZ__uiUNorm;        // Offset:  248 Size:     4 [unused]
  float fPartsMaskW__uiUNorm;        // Offset:  252 Size:     4 [unused]
  bool bUseOffset;                   // Offset:  256 Size:     4
  float fOffsetScale;                // Offset:  260 Size:     4
  bool bTranslucentOffset;           // Offset:  264 Size:     4
  bool bAntiSSSEmit;                 // Offset:  268 Size:     4 [unused]
  float3 fFlowDirDir__uiDirection;   // Offset:  272 Size:    12 [unused]
  // align: 284 to 288
  ubyte align3[4];
  float4 fFlowControl__uiUNorm;      // Offset:  288 Size:    16 [unused]
  float fFlowTile;                   // Offset:  304 Size:     4 [unused]
  // align: 308 to 320
  ubyte align4[12];
  float4 fFlowColor__uiColor;        // Offset:  320 Size:    16 [unused]
  float4 fFlowMatControl__uiUNorm;   // Offset:  336 Size:    16 [unused]
  float fFilmThickness__uiUNorm;     // Offset:  352 Size:     4 [unused]
  float fFilmBlend__uiUNorm;         // Offset:  356 Size:     4 [unused]
  float fFilmIOR__uiUNorm;           // Offset:  360 Size:     4 [unused]
  float fRefraction__uiUNorm;        // Offset:  364 Size:     4 [unused]
  float fRefractionBlend__uiUNorm;   // Offset:  368 Size:     4 [unused]
  float fAlbedoBlend__uiUNorm;       // Offset:  372 Size:     4 [unused]
  float fAnimEmitMin;                // Offset:  376 Size:     4 [unused]
  float fAnimEmitSpeed;              // Offset:  380 Size:     4 [unused]
  bool bUseWaveEmit;                 // Offset:  384 Size:     4 [unused]
  float fAnimEmitWave;               // Offset:  388 Size:     4 [unused]
  // align: 392 to 400
  ubyte align5[8];
  float4 fAnimEmitControl__uiUNorm;  // Offset:  400 Size:    16 [unused]
  float fRimAlphaPower__uiSNorm;     // Offset:  416 Size:     4 [unused]
  float fRimTranslucency__uiUNorm;   // Offset:  420 Size:     4 [unused]
  float fRimNormal__uiUNorm;         // Offset:  424 Size:     4 [unused]
  float fSnowUVTile;                 // Offset:  428 Size:     4 [unused]
  float4 fSnowBlendColor__uiColor;   // Offset:  432 Size:    16
  float4 fSnowMatControl__uiUNorm;   // Offset:  448 Size:    16 [unused]
  float fMaterialSnowBlendB;         // Offset:  464 Size:     4
  // align: 468 to 480
  ubyte align6[12];
  float4 fSnowControl;               // Offset:  480 Size:    16
};

//CBModelChain : 9081.shdr.src
struct CBModelChain {

  float fStartFrame;                 // Offset:    0 Size:     4
  float fMotionKeyAlpha;             // Offset:    4 Size:     4
  float fStartRotation;              // Offset:    8 Size:     4
  float fNextModelFrame;             // Offset:   12 Size:     4
  float fNextModelRotation;          // Offset:   16 Size:     4
  int iMotionDataNum;                // Offset:   20 Size:     4
};

//CBMhMaterialPLEyeLocal__disclosure : 940.shdr.src
struct CBMhMaterialPLEyeLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  bool bBaseColorEmissive;           // Offset:   52 Size:     4 [unused]
  bool bBackFaceNormalFilp;          // Offset:   56 Size:     4 [unused]
  float fAnimEmitMin;                // Offset:   60 Size:     4 [unused]
  float fAnimEmitSpeed;              // Offset:   64 Size:     4 [unused]
  float fParallaxFactor__uiUNorm;    // Offset:   68 Size:     4
  float fDetailNormalBlend__uiUNorm; // Offset:   72 Size:     4 [unused]
  // align: 76 to 80
  ubyte align0[4];
  float4 fUVTransformDetailNormal;   // Offset:   80 Size:    16 [unused]
};

//CBLayoutCache : 9107.shdr.src
struct CBLayoutCache {

  uint iEmitterID;                   // Offset:    0 Size:     4
  uint iParticleStride;              // Offset:    4 Size:     4
  uint iParticleMaxNum;              // Offset:    8 Size:     4
  uint iOutputOffset;                // Offset:   12 Size:     4
  uint iOutputFlags;                 // Offset:   16 Size:     4
};

//CBRadialBlurFilter : 9147.shdr.src
struct CBRadialBlurFilter {

  float2 fRadialBlurCenter;          // Offset:    0 Size:     8
  float fRadialBlurStart;            // Offset:    8 Size:     4
  float fRadialBlurWidth;            // Offset:   12 Size:     4
  float4 fRadialBlurColor;           // Offset:   16 Size:    16
  float fRadialBlurThrethold;        // Offset:   32 Size:     4
  float fRadialBlurWidthScale;       // Offset:   36 Size:     4
  float fRadialBlurWidthOffset;      // Offset:   40 Size:     4
  uint fRadialBlurSampleCount;       // Offset:   44 Size:     4
  float3 fRadialBlurChromaticAberration;// Offset:   48 Size:    12
  float fRadialBlurBlurScreenAlpha;  // Offset:   60 Size:     4
  float4 fRadialBlurBlurCurve[64];   // Offset:   64 Size:  1024
};

//CBRadialBlurFunction : 9147.shdr.src
struct CBRadialBlurFunction {

  int iRadialFilterSampleColorScale; // Offset:    0 Size:     4
  int iRadialFilterAlpha;            // Offset:    4 Size:     4
  int iRadialBlurWidth;              // Offset:    8 Size:     4
  int iRadialBlurAlpha;              // Offset:   12 Size:     4
};

//CBPickObject : 9151.shdr.src
struct CBPickObject {

  float4 fPickObjectColor;           // Offset:    0 Size:    16
};

//CBMhMaterialVfxAuroraLocal__disclosure : 9239.shdr.src
struct CBMhMaterialVfxAuroraLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveFactor__uiColor;   // Offset:   16 Size:    12 [unused]
  float fOpacityFactor;              // Offset:   28 Size:     4 [unused]
  float fVolumeBlend__uiSNorm;       // Offset:   32 Size:     4 [unused]
  float fMetalic__uiUNorm;           // Offset:   36 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   40 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   44 Size:     4 [unused]
  float fInnerOffsetScale;           // Offset:   48 Size:     4
  float fVelocityAttn;               // Offset:   52 Size:     4 [unused]
  float fDispFactor;                 // Offset:   56 Size:     4
  // align: 60 to 64
  ubyte align0[4];
  float4 fUVTransformA;              // Offset:   64 Size:    16 [unused]
  float4 fUVTransformB;              // Offset:   80 Size:    16
};

//CBMhMaterialVfxIceLocal__disclosure : 9357.shdr.src
struct CBMhMaterialVfxIceLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fDetailNormalBlend__uiUNorm; // Offset:   48 Size:     4 [unused]
  // align: 52 to 64
  ubyte align0[12];
  float4 fUVTransformA;              // Offset:   64 Size:    16 [unused]
  float4 fUVTransformB;              // Offset:   80 Size:    16 [unused]
  float4 fBaseMapModulation__uiUNorm;// Offset:   96 Size:    16 [unused]
  float fTranslucency__uiUNorm;      // Offset:  112 Size:     4 [unused]
  float3 fEmissiveBlendColor__uiColor;// Offset:  116 Size:    12 [unused]
  float fEmissiveBlendColorBlend__uiUNorm;// Offset:  128 Size:     4 [unused]
  float3 fEmissiveBlendRimParam;     // Offset:  132 Size:    12 [unused]
  bool bSpecialBlend;                // Offset:  144 Size:     4 [unused]
  float fFurNormalBlend__uiUNorm;    // Offset:  148 Size:     4 [unused]
  float fFurHeight__uiUNorm;         // Offset:  152 Size:     4 [unused]
  float fFurMapBlend__uiUNorm;       // Offset:  156 Size:     4 [unused]
  float fFurEdgeBlend__uiUNorm;      // Offset:  160 Size:     4 [unused]
  float fFurTile;                    // Offset:  164 Size:     4 [unused]
  bool bFakeRefraction;              // Offset:  168 Size:     4 [unused]
  float fRefraction__uiUNorm;        // Offset:  172 Size:     4 [unused]
  float3 fWetBlendDir__uiDirection;  // Offset:  176 Size:    12 [unused]
  float fWetBlendPlaneNormal__uiUNorm;// Offset:  188 Size:     4 [unused]
  float3 fWetBlendOp;                // Offset:  192 Size:    12 [unused]
  bool bWetNormalBlend;              // Offset:  204 Size:     4 [unused]
  float2 fWetNormalBlendRange__uiUNorm;// Offset:  208 Size:     8 [unused]
  float fVolumeBlend__uiSNorm;       // Offset:  216 Size:     4 [unused]
  float fDispFactor;                 // Offset:  220 Size:     4
  float fInnerOffsetScale;           // Offset:  224 Size:     4
  float3 fFakeLightColor__uiColor;   // Offset:  228 Size:    12 [unused]
  float fFakeLightIntensity;         // Offset:  240 Size:     4 [unused]
  float3 fFakeLightPosition;         // Offset:  244 Size:    12
  float fFakeLightRadius;            // Offset:  256 Size:     4
  // align: 260 to 272
  ubyte align1[12];
  float4 fUVTransformC;              // Offset:  272 Size:    16
  float3 fAlbedoBlendMapGFactor__uiColor;// Offset:  288 Size:    12 [unused]
  float fIceFresnelFactor__uiUNorm;  // Offset:  300 Size:     4 [unused]
  float fIceColorBlend__uiUNorm;     // Offset:  304 Size:     4 [unused]
};

//CBMhMaterialFlagWaveLocal__disclosure : 9457.shdr.src
struct CBMhMaterialFlagWaveLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  // align: 52 to 64
  ubyte align0[12];
  float4 fUVTransformA;              // Offset:   64 Size:    16 [unused]
  float fVPushScale;                 // Offset:   80 Size:     4
  float fVPushWave;                  // Offset:   84 Size:     4 [unused]
  float fVPushSpeed;                 // Offset:   88 Size:     4
  // align: 92 to 96
  ubyte align1[4];
  float4 fFlagUvEditA;               // Offset:   96 Size:    16
  float4 fFlagUvEditB;               // Offset:  112 Size:    16
  float4 fFlagControl;               // Offset:  128 Size:    16
  float4 fDisplaceControl;           // Offset:  144 Size:    16
  float fDispFactor;                 // Offset:  160 Size:     4
};

//CBFXAAParam : 9890.shdr.src
struct CBFXAAParam {

  float fFXAAQualitySubpix;          // Offset:    0 Size:     4
  float fFXAAQualityEdgeThreshold;   // Offset:    4 Size:     4
  float fFXAAQualityEdgeThresholdMin;// Offset:    8 Size:     4
  // align: 12 to 16
  ubyte align0[4];
  float2 fFXAATexOnePitch;           // Offset:   16 Size:     8
};

//CBSystemGamma : 9522.shdr.src
struct CBSystemGamma {

  float fSystemCopyGamma;            // Offset:    0 Size:     4
};

//CBHermiteCurveRGB : 9580.shdr.src
struct CBHermiteCurveRGB {

  float2 fHermiteParamR[64];         // Offset:    0 Size:  1016
  // align: 1016 to 1024
  ubyte align0[8];
  float2 fHermiteParamG[64];         // Offset: 1024 Size:  1016
  // align: 2040 to 2048
  ubyte align1[8];
  float2 fHermiteParamB[64];         // Offset: 2048 Size:  1016
};

//CBMhMaterialScrIceLocal__disclosure : 9666.shdr.src
struct CBMhMaterialScrIceLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fDetailNormalBlend__uiUNorm; // Offset:   48 Size:     4 [unused]
  // align: 52 to 64
  ubyte align0[12];
  float4 fUVTransformA;              // Offset:   64 Size:    16 [unused]
  float4 fUVTransformB;              // Offset:   80 Size:    16 [unused]
  float4 fBaseMapModulation__uiUNorm;// Offset:   96 Size:    16 [unused]
  float fTranslucency__uiUNorm;      // Offset:  112 Size:     4 [unused]
  float3 fEmissiveBlendColor__uiColor;// Offset:  116 Size:    12 [unused]
  float fEmissiveBlendColorBlend__uiUNorm;// Offset:  128 Size:     4 [unused]
  float3 fEmissiveBlendRimParam;     // Offset:  132 Size:    12 [unused]
  bool bSpecialBlend;                // Offset:  144 Size:     4 [unused]
  float fFurNormalBlend__uiUNorm;    // Offset:  148 Size:     4 [unused]
  float fFurHeight__uiUNorm;         // Offset:  152 Size:     4 [unused]
  float fFurMapBlend__uiUNorm;       // Offset:  156 Size:     4 [unused]
  float fFurEdgeBlend__uiUNorm;      // Offset:  160 Size:     4 [unused]
  float fFurTile;                    // Offset:  164 Size:     4 [unused]
  bool bFakeRefraction;              // Offset:  168 Size:     4 [unused]
  float fRefraction__uiUNorm;        // Offset:  172 Size:     4 [unused]
  float3 fWetBlendDir__uiDirection;  // Offset:  176 Size:    12 [unused]
  float fWetBlendPlaneNormal__uiUNorm;// Offset:  188 Size:     4 [unused]
  float3 fWetBlendOp;                // Offset:  192 Size:    12 [unused]
  bool bWetNormalBlend;              // Offset:  204 Size:     4 [unused]
  float2 fWetNormalBlendRange__uiUNorm;// Offset:  208 Size:     8 [unused]
  float fVolumeBlend__uiSNorm;       // Offset:  216 Size:     4 [unused]
  float fIceVPushScale;              // Offset:  220 Size:     4
  float fIceLocalVPushScale;         // Offset:  224 Size:     4
  bool bUseNormalDisplacement;       // Offset:  228 Size:     4
  // align: 232 to 240
  ubyte align1[8];
  float3 fIceVPushDir__uiDirection;  // Offset:  240 Size:    12
  // align: 252 to 256
  ubyte align2[4];
  float3 fIceLocalVPushDir__uiDirection;// Offset:  256 Size:    12
  // align: 268 to 272
  ubyte align3[4];
  float3 fIcePushOp;                 // Offset:  272 Size:    12
  // align: 284 to 288
  ubyte align4[4];
  float2 fIceDisplacementUVSize;     // Offset:  288 Size:     8
  bool bUsePositionUV;               // Offset:  296 Size:     4
  // align: 300 to 304
  ubyte align5[4];
  float4 fUVTransformC;              // Offset:  304 Size:    16
  float3 fAlbedoBlendMapGFactor__uiColor;// Offset:  320 Size:    12 [unused]
  float fIceFresnelFactor__uiUNorm;  // Offset:  332 Size:     4 [unused]
  float fIceColorBlend__uiUNorm;     // Offset:  336 Size:     4 [unused]
};

//CBMhMaterialBTK001Local__disclosure : 9749.shdr.src
struct CBMhMaterialBTK001Local__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  bool bBaseColorEmissive;           // Offset:   52 Size:     4 [unused]
  float2 fPaintUVTile;               // Offset:   56 Size:     8 [unused]
  float fAddNormalBlend__uiUNorm;    // Offset:   64 Size:     4 [unused]
  // align: 68 to 80
  ubyte align0[12];
  float4 fAddNormalMaskA__uiSNorm;   // Offset:   80 Size:    16 [unused]
  float4 fAddNormalMaskB__uiSNorm;   // Offset:   96 Size:    16 [unused]
  float fAddNormalMaskC__uiUNorm;    // Offset:  112 Size:     4 [unused]
  float fAddNormalMaskD__uiUNorm;    // Offset:  116 Size:     4 [unused]
  bool bBackFaceShading;             // Offset:  120 Size:     4 [unused]
  bool bBackFaceNormalFilp;          // Offset:  124 Size:     4 [unused]
  float3 fKizuColor__uiColor;        // Offset:  128 Size:    12 [unused]
  // align: 140 to 144
  ubyte align1[4];
  float2 fKizuUVOffset__uiUNorm;     // Offset:  144 Size:     8 [unused]
  float fKizuMultiply;               // Offset:  152 Size:     4 [unused]
  bool bLegendary;                   // Offset:  156 Size:     4 [unused]
  float4 fLegendColor__uiColor;      // Offset:  160 Size:    16 [unused]
  float2 fLegendMetalMask__uiUNorm;  // Offset:  176 Size:     8 [unused]
  float fLegendRoughness;            // Offset:  184 Size:     4 [unused]
  // align: 188 to 192
  ubyte align2[4];
  float3 fLegendFilm__uiUNorm;       // Offset:  192 Size:    12 [unused]
  float fLegendSSSMask__uiUNorm;     // Offset:  204 Size:     4 [unused]
  float3 fLegendHSV__uiSNorm;        // Offset:  208 Size:    12 [unused]
  float fLegendFilmIOR__uiUNorm;     // Offset:  220 Size:     4 [unused]
  float fPartsMaskA__uiUNorm;        // Offset:  224 Size:     4 [unused]
  float fPartsMaskB__uiUNorm;        // Offset:  228 Size:     4 [unused]
  float fPartsMaskC__uiUNorm;        // Offset:  232 Size:     4 [unused]
  float fPartsMaskD__uiUNorm;        // Offset:  236 Size:     4 [unused]
  float fPartsMaskX__uiUNorm;        // Offset:  240 Size:     4 [unused]
  float fPartsMaskY__uiUNorm;        // Offset:  244 Size:     4 [unused]
  float fPartsMaskZ__uiUNorm;        // Offset:  248 Size:     4 [unused]
  float fPartsMaskW__uiUNorm;        // Offset:  252 Size:     4 [unused]
  bool bUseOffset;                   // Offset:  256 Size:     4
  float fOffsetScale;                // Offset:  260 Size:     4
  bool bTranslucentOffset;           // Offset:  264 Size:     4
  bool bAntiSSSEmit;                 // Offset:  268 Size:     4 [unused]
  float3 fFlowDirDir__uiDirection;   // Offset:  272 Size:    12 [unused]
  // align: 284 to 288
  ubyte align3[4];
  float4 fFlowControl__uiUNorm;      // Offset:  288 Size:    16 [unused]
  float fFlowTile;                   // Offset:  304 Size:     4 [unused]
  // align: 308 to 320
  ubyte align4[12];
  float4 fFlowColor__uiColor;        // Offset:  320 Size:    16 [unused]
  float4 fFlowMatControl__uiUNorm;   // Offset:  336 Size:    16 [unused]
  float fFilmThickness__uiUNorm;     // Offset:  352 Size:     4 [unused]
  float fFilmBlend__uiUNorm;         // Offset:  356 Size:     4 [unused]
  float fFilmIOR__uiUNorm;           // Offset:  360 Size:     4 [unused]
  float fRefraction__uiUNorm;        // Offset:  364 Size:     4 [unused]
  float fRefractionBlend__uiUNorm;   // Offset:  368 Size:     4 [unused]
  float fAlbedoBlend__uiUNorm;       // Offset:  372 Size:     4 [unused]
  bool bPartsAlpha;                  // Offset:  376 Size:     4 [unused]
  // align: 380 to 384
  ubyte align5[4];
  float4 fBlendBaseMapFactor__uiColor;// Offset:  384 Size:    16 [unused]
  float4 fBlendMatFactor;            // Offset:  400 Size:    16 [unused]
  float fMaskSpeed;                  // Offset:  416 Size:     4 [unused]
  float fMaskWave;                   // Offset:  420 Size:     4 [unused]
  float fMaskDistortion;             // Offset:  424 Size:     4 [unused]
  float fAnimEmitMin;                // Offset:  428 Size:     4 [unused]
  float fAnimEmitSpeed;              // Offset:  432 Size:     4 [unused]
  bool bUseWaveEmit;                 // Offset:  436 Size:     4 [unused]
  float fAnimEmitWave;               // Offset:  440 Size:     4 [unused]
  float fRimAlphaPower__uiSNorm;     // Offset:  444 Size:     4 [unused]
  float fRimTranslucency__uiUNorm;   // Offset:  448 Size:     4 [unused]
  float fRimNormal__uiUNorm;         // Offset:  452 Size:     4 [unused]
  float fSnowUVTile;                 // Offset:  456 Size:     4 [unused]
  // align: 460 to 464
  ubyte align6[4];
  float4 fSnowBlendColor__uiColor;   // Offset:  464 Size:    16
  float4 fSnowMatControl__uiUNorm;   // Offset:  480 Size:    16 [unused]
  float fMaterialSnowBlendB;         // Offset:  496 Size:     4
  // align: 500 to 512
  ubyte align7[12];
  float4 fSnowControl;               // Offset:  512 Size:    16
};

//CBMhMaterialFakeSphereLocal__disclosure : 9789.shdr.src
struct CBMhMaterialFakeSphereLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fDetailNormalBlend__uiUNorm; // Offset:   48 Size:     4 [unused]
  // align: 52 to 64
  ubyte align0[12];
  float4 fUVTransformA;              // Offset:   64 Size:    16
  float4 fUVTransformB;              // Offset:   80 Size:    16 [unused]
  float fTranslucency__uiUNorm;      // Offset:   96 Size:     4 [unused]
  bool bForwardFog;                  // Offset:  100 Size:     4 [unused]
  bool bAddSphere;                   // Offset:  104 Size:     4 [unused]
};

//CBMhMaterialEM080_01Local__disclosure : 9879.shdr.src
struct CBMhMaterialEM080_01Local__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  bool bBaseColorEmissive;           // Offset:   52 Size:     4 [unused]
  float2 fPaintUVTile;               // Offset:   56 Size:     8 [unused]
  float fAddNormalBlend__uiUNorm;    // Offset:   64 Size:     4 [unused]
  // align: 68 to 80
  ubyte align0[12];
  float4 fAddNormalMaskA__uiSNorm;   // Offset:   80 Size:    16 [unused]
  float4 fAddNormalMaskB__uiSNorm;   // Offset:   96 Size:    16 [unused]
  float fAddNormalMaskC__uiUNorm;    // Offset:  112 Size:     4 [unused]
  float fAddNormalMaskD__uiUNorm;    // Offset:  116 Size:     4 [unused]
  bool bBackFaceShading;             // Offset:  120 Size:     4 [unused]
  bool bBackFaceNormalFilp;          // Offset:  124 Size:     4 [unused]
  float3 fKizuColor__uiColor;        // Offset:  128 Size:    12 [unused]
  // align: 140 to 144
  ubyte align1[4];
  float2 fKizuUVOffset__uiUNorm;     // Offset:  144 Size:     8 [unused]
  float fKizuMultiply;               // Offset:  152 Size:     4 [unused]
  bool bLegendary;                   // Offset:  156 Size:     4 [unused]
  float4 fLegendColor__uiColor;      // Offset:  160 Size:    16 [unused]
  float2 fLegendMetalMask__uiUNorm;  // Offset:  176 Size:     8 [unused]
  float fLegendRoughness;            // Offset:  184 Size:     4 [unused]
  // align: 188 to 192
  ubyte align2[4];
  float3 fLegendFilm__uiUNorm;       // Offset:  192 Size:    12 [unused]
  float fLegendSSSMask__uiUNorm;     // Offset:  204 Size:     4 [unused]
  float3 fLegendHSV__uiSNorm;        // Offset:  208 Size:    12 [unused]
  float fLegendFilmIOR__uiUNorm;     // Offset:  220 Size:     4 [unused]
  float fPartsMaskA__uiUNorm;        // Offset:  224 Size:     4 [unused]
  float fPartsMaskB__uiUNorm;        // Offset:  228 Size:     4 [unused]
  float fPartsMaskC__uiUNorm;        // Offset:  232 Size:     4 [unused]
  float fPartsMaskD__uiUNorm;        // Offset:  236 Size:     4 [unused]
  float fPartsMaskX__uiUNorm;        // Offset:  240 Size:     4 [unused]
  float fPartsMaskY__uiUNorm;        // Offset:  244 Size:     4 [unused]
  float fPartsMaskZ__uiUNorm;        // Offset:  248 Size:     4 [unused]
  float fPartsMaskW__uiUNorm;        // Offset:  252 Size:     4 [unused]
  bool bUseOffset;                   // Offset:  256 Size:     4
  float fOffsetScale;                // Offset:  260 Size:     4
  bool bTranslucentOffset;           // Offset:  264 Size:     4
  bool bAntiSSSEmit;                 // Offset:  268 Size:     4 [unused]
  float3 fFlowDirDir__uiDirection;   // Offset:  272 Size:    12 [unused]
  // align: 284 to 288
  ubyte align3[4];
  float4 fFlowControl__uiUNorm;      // Offset:  288 Size:    16 [unused]
  float fFlowTile;                   // Offset:  304 Size:     4 [unused]
  // align: 308 to 320
  ubyte align4[12];
  float4 fFlowColor__uiColor;        // Offset:  320 Size:    16 [unused]
  float4 fFlowMatControl__uiUNorm;   // Offset:  336 Size:    16 [unused]
  float fFilmThickness__uiUNorm;     // Offset:  352 Size:     4 [unused]
  float fFilmBlend__uiUNorm;         // Offset:  356 Size:     4 [unused]
  float fFilmIOR__uiUNorm;           // Offset:  360 Size:     4 [unused]
  float fRefraction__uiUNorm;        // Offset:  364 Size:     4 [unused]
  float fRefractionBlend__uiUNorm;   // Offset:  368 Size:     4 [unused]
  float fAlbedoBlend__uiUNorm;       // Offset:  372 Size:     4 [unused]
  bool bUseBlendDisplace;            // Offset:  376 Size:     4
  float fVAnimV__uiUNorm;            // Offset:  380 Size:     4
  float fVAnimPosScale;              // Offset:  384 Size:     4
  bool bInvertX;                     // Offset:  388 Size:     4
  float fAlphaTestControl__uiUNorm;  // Offset:  392 Size:     4 [unused]
  float fAnimEmitMin;                // Offset:  396 Size:     4 [unused]
  float fAnimEmitSpeed;              // Offset:  400 Size:     4 [unused]
  bool bUseWaveEmit;                 // Offset:  404 Size:     4 [unused]
  float fAnimEmitWave;               // Offset:  408 Size:     4 [unused]
  // align: 412 to 416
  ubyte align5[4];
  float4 fFurParam__uiUNorm;         // Offset:  416 Size:    16 [unused]
  float fFurTile;                    // Offset:  432 Size:     4 [unused]
  float fRimAlphaPower__uiSNorm;     // Offset:  436 Size:     4 [unused]
  float fRimTranslucency__uiUNorm;   // Offset:  440 Size:     4 [unused]
  float fRimNormal__uiUNorm;         // Offset:  444 Size:     4 [unused]
  float fSnowUVTile;                 // Offset:  448 Size:     4 [unused]
  // align: 452 to 464
  ubyte align6[12];
  float4 fSnowBlendColor__uiColor;   // Offset:  464 Size:    16
  float4 fSnowMatControl__uiUNorm;   // Offset:  480 Size:    16 [unused]
  float fMaterialSnowBlendB;         // Offset:  496 Size:     4
  // align: 500 to 512
  ubyte align7[12];
  float4 fSnowControl;               // Offset:  512 Size:    16
};

//CBMhMaterialUberIceLocal__disclosure : 9974.shdr.src
struct CBMhMaterialUberIceLocal__disclosure {

  float4 fBaseMapFactor__uiColor;    // Offset:    0 Size:    16 [unused]
  float3 fEmissiveMapFactor__uiColor;// Offset:   16 Size:    12 [unused]
  float fMetalic__uiUNorm;           // Offset:   28 Size:     4 [unused]
  float fRoughness__uiUNorm;         // Offset:   32 Size:     4 [unused]
  float fSpecular__uiUNorm;          // Offset:   36 Size:     4 [unused]
  float fSubSurfaceBlend__uiUNorm;   // Offset:   40 Size:     4 [unused]
  uint iSubSurfaceProfile;           // Offset:   44 Size:     4 [unused]
  float fTranslucency__uiUNorm;      // Offset:   48 Size:     4 [unused]
  bool bBaseColorEmissive;           // Offset:   52 Size:     4 [unused]
  float fAnimEmitMin;                // Offset:   56 Size:     4 [unused]
  float fAnimEmitSpeed;              // Offset:   60 Size:     4 [unused]
  float fAnimEmitWave;               // Offset:   64 Size:     4 [unused]
  bool bUseWaveEmit;                 // Offset:   68 Size:     4 [unused]
  bool bUseWaveAlpha;                // Offset:   72 Size:     4 [unused]
  bool bUseCMM;                      // Offset:   76 Size:     4 [unused]
  float4 fAddColorA__uiColor;        // Offset:   80 Size:    16 [unused]
  float4 fAddColorB__uiColor;        // Offset:   96 Size:    16 [unused]
  float4 fAddColorC__uiColor;        // Offset:  112 Size:    16 [unused]
  float4 fAddColorD__uiColor;        // Offset:  128 Size:    16 [unused]
  float4 fFurParam__uiUNorm;         // Offset:  144 Size:    16 [unused]
  float fFurTile;                    // Offset:  160 Size:     4 [unused]
  float3 fSecondaryEmitColor__uiColor;// Offset:  164 Size:    12 [unused]
  float4 fSecondaryEmit_Control;     // Offset:  176 Size:    16
  float fFilmThickness__uiUNorm;     // Offset:  192 Size:     4 [unused]
  float fFilmBlend__uiUNorm;         // Offset:  196 Size:     4 [unused]
  float fFilmIOR__uiUNorm;           // Offset:  200 Size:     4 [unused]
  // align: 204 to 208
  ubyte align0[4];
  float3 fEmissiveBlendColor__uiColor;// Offset:  208 Size:    12 [unused]
  float fEmissiveBlendColorBlend__uiUNorm;// Offset:  220 Size:     4 [unused]
  float3 fEmissiveBlendRimParam;     // Offset:  224 Size:    12 [unused]
  float fRefraction__uiSNorm;        // Offset:  236 Size:     4 [unused]
  float fRefractionRotation__uiSNorm;// Offset:  240 Size:     4 [unused]
  float fPanoramaTile;               // Offset:  244 Size:     4 [unused]
  float fVPushScale;                 // Offset:  248 Size:     4
  float fVPushWave;                  // Offset:  252 Size:     4
  float fVPushSpeed;                 // Offset:  256 Size:     4
  bool bUseFlipUV;                   // Offset:  260 Size:     4 [unused]
  bool bBackFaceNormalFilp;          // Offset:  264 Size:     4 [unused]
  bool bUseEmitMask;                 // Offset:  268 Size:     4
  bool bUseRoughColor;               // Offset:  272 Size:     4 [unused]
  float2 fRoughMask__uiUNorm;        // Offset:  276 Size:     8 [unused]
  bool bUsePaint;                    // Offset:  284 Size:     4 [unused]
  float2 fPaintMapRC;                // Offset:  288 Size:     8 [unused]
  float fPaintMapNum;                // Offset:  296 Size:     4 [unused]
  // align: 300 to 304
  ubyte align1[4];
  float4 fPaintMapOffset__uiSNorm;   // Offset:  304 Size:    16 [unused]
  float4 fPaintColor__uiColor;       // Offset:  320 Size:    16 [unused]
  float fPaintRoughness__uiUNorm;    // Offset:  336 Size:     4 [unused]
  float fPaintMetal__uiUNorm;        // Offset:  340 Size:     4 [unused]
  bool bUseOffset;                   // Offset:  344 Size:     4
  float fInnerOffsetScale;           // Offset:  348 Size:     4
  bool bUseFly;                      // Offset:  352 Size:     4
  uint iWingNum;                     // Offset:  356 Size:     4
  bool bUseAnimAlpha;                // Offset:  360 Size:     4 [unused]
  float fAnimAlphaSpeed;             // Offset:  364 Size:     4 [unused]
  bool bParallax_Refraction;         // Offset:  368 Size:     4 [unused]
  float fRefractBlend__uiUNorm;      // Offset:  372 Size:     4 [unused]
  float fParallax_height__uiUNorm;   // Offset:  376 Size:     4 [unused]
  float fRefraction_tile;            // Offset:  380 Size:     4 [unused]
  float fRefraction_distortion__uiUNorm;// Offset:  384 Size:     4 [unused]
  // align: 388 to 400
  ubyte align2[12];
  float4 fSnowControl;               // Offset:  400 Size:    16
  float fMaterialSnowBlendA;         // Offset:  416 Size:     4
  float fMaterialSnowBlendB;         // Offset:  420 Size:     4
  float fSnowTile;                   // Offset:  424 Size:     4 [unused]
  // align: 428 to 432
  ubyte align3[4];
  float3 fSnowColor__uiColor;        // Offset:  432 Size:    12 [unused]
  // align: 444 to 448
  ubyte align4[4];
  float4 fSnowMatControl__uiUNorm;   // Offset:  448 Size:    16 [unused]
  float2 fSnowUVOffset__uiUNorm;     // Offset:  464 Size:     8 [unused]
  bool bUseSnowDistance;             // Offset:  472 Size:     4 [unused]
};

//CBColorCorrectToneCurve : 9993.shdr.src
struct CBColorCorrectToneCurve {

  float4 fToneColor[256];            // Offset:    0 Size:  4096
};

